//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWoLaDLL.EngineService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Process", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Engine.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Process : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestWoLaDLL.EngineService.SimpleStartEvent[] SimpleStartEventsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestWoLaDLL.EngineService.SimpleStartEvent[] SimpleStartEvents {
            get {
                return this.SimpleStartEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.SimpleStartEventsField, value) != true)) {
                    this.SimpleStartEventsField = value;
                    this.RaisePropertyChanged("SimpleStartEvents");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleStartEvent", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Engine.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SimpleStartEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessInstance", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Engine.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ProcessInstance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcessInstanceStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateProcessNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessInstanceState {
            get {
                return this.ProcessInstanceStateField;
            }
            set {
                if ((this.ProcessInstanceStateField.Equals(value) != true)) {
                    this.ProcessInstanceStateField = value;
                    this.RaisePropertyChanged("ProcessInstanceState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessState {
            get {
                return this.ProcessStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessStateField, value) != true)) {
                    this.ProcessStateField = value;
                    this.RaisePropertyChanged("ProcessState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateProcessName {
            get {
                return this.TemplateProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateProcessNameField, value) != true)) {
                    this.TemplateProcessNameField = value;
                    this.RaisePropertyChanged("TemplateProcessName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://wfe.mik.uni-pannon.hu/", ConfigurationName="EngineService.IEngineService")]
    public interface IEngineService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://wfe.mik.uni-pannon.hu/IEngineService/FireStartEventById")]
        void FireStartEventById(int id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://wfe.mik.uni-pannon.hu/IEngineService/FireStartEventById")]
        System.Threading.Tasks.Task FireStartEventByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IEngineService/GetTemplateProcesses", ReplyAction="http://wfe.mik.uni-pannon.hu/IEngineService/GetTemplateProcessesResponse")]
        TestWoLaDLL.EngineService.Process[] GetTemplateProcesses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IEngineService/GetTemplateProcesses", ReplyAction="http://wfe.mik.uni-pannon.hu/IEngineService/GetTemplateProcessesResponse")]
        System.Threading.Tasks.Task<TestWoLaDLL.EngineService.Process[]> GetTemplateProcessesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IEngineService/GetProcessInstances", ReplyAction="http://wfe.mik.uni-pannon.hu/IEngineService/GetProcessInstancesResponse")]
        TestWoLaDLL.EngineService.ProcessInstance[] GetProcessInstances(int filterProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IEngineService/GetProcessInstances", ReplyAction="http://wfe.mik.uni-pannon.hu/IEngineService/GetProcessInstancesResponse")]
        System.Threading.Tasks.Task<TestWoLaDLL.EngineService.ProcessInstance[]> GetProcessInstancesAsync(int filterProcess);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEngineServiceChannel : TestWoLaDLL.EngineService.IEngineService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EngineServiceClient : System.ServiceModel.ClientBase<TestWoLaDLL.EngineService.IEngineService>, TestWoLaDLL.EngineService.IEngineService {
        
        public EngineServiceClient() {
        }
        
        public EngineServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EngineServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EngineServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EngineServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void FireStartEventById(int id) {
            base.Channel.FireStartEventById(id);
        }
        
        public System.Threading.Tasks.Task FireStartEventByIdAsync(int id) {
            return base.Channel.FireStartEventByIdAsync(id);
        }
        
        public TestWoLaDLL.EngineService.Process[] GetTemplateProcesses() {
            return base.Channel.GetTemplateProcesses();
        }
        
        public System.Threading.Tasks.Task<TestWoLaDLL.EngineService.Process[]> GetTemplateProcessesAsync() {
            return base.Channel.GetTemplateProcessesAsync();
        }
        
        public TestWoLaDLL.EngineService.ProcessInstance[] GetProcessInstances(int filterProcess) {
            return base.Channel.GetProcessInstances(filterProcess);
        }
        
        public System.Threading.Tasks.Task<TestWoLaDLL.EngineService.ProcessInstance[]> GetProcessInstancesAsync(int filterProcess) {
            return base.Channel.GetProcessInstancesAsync(filterProcess);
        }
    }
}
