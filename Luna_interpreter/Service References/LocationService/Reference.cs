//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Luna_interpreter.LocationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Key", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class Key : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tag", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class Tag : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyDisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyDisplayName {
            get {
                return this.KeyDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyDisplayNameField, value) != true)) {
                    this.KeyDisplayNameField = value;
                    this.RaisePropertyChanged("KeyDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.LocationService.Tag[] TagsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.LocationService.Tag[] Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationEntry", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.LocationService.TypedLocationEntryOfWorkforcefBCf7RRr))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.LocationService.WorkforceLocationEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.LocationService.TypedLocationEntryOfEquipmentfBCf7RRr))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.LocationService.EquipmentLocationEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.LocationService.TypedLocationEntryOfSimpleUserTaskfBCf7RRr))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.LocationService.SimpleUserTaskLocationEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.LocationService.TypedLocationEntryOfWorkPlacefBCf7RRr))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.LocationService.WorkPlaceLocationEntry))]
    public partial class LocationEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MomentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Moment {
            get {
                return this.MomentField;
            }
            set {
                if ((this.MomentField.Equals(value) != true)) {
                    this.MomentField = value;
                    this.RaisePropertyChanged("Moment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypedLocationEntryOfWorkforcefBCf7RRr", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s.LocationEntries")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.LocationService.WorkforceLocationEntry))]
    public partial class TypedLocationEntryOfWorkforcefBCf7RRr : Luna_interpreter.LocationService.LocationEntry {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.LocationService.Workforce ObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ObjectIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.LocationService.Workforce Object {
            get {
                return this.ObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectField, value) != true)) {
                    this.ObjectField = value;
                    this.RaisePropertyChanged("Object");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ObjectId {
            get {
                return this.ObjectIdField;
            }
            set {
                if ((this.ObjectIdField.Equals(value) != true)) {
                    this.ObjectIdField = value;
                    this.RaisePropertyChanged("ObjectId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkforceLocationEntry", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s.LocationEntries")]
    [System.SerializableAttribute()]
    public partial class WorkforceLocationEntry : Luna_interpreter.LocationService.TypedLocationEntryOfWorkforcefBCf7RRr {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypedLocationEntryOfEquipmentfBCf7RRr", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s.LocationEntries")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.LocationService.EquipmentLocationEntry))]
    public partial class TypedLocationEntryOfEquipmentfBCf7RRr : Luna_interpreter.LocationService.LocationEntry {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.LocationService.Equipment ObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ObjectIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.LocationService.Equipment Object {
            get {
                return this.ObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectField, value) != true)) {
                    this.ObjectField = value;
                    this.RaisePropertyChanged("Object");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ObjectId {
            get {
                return this.ObjectIdField;
            }
            set {
                if ((this.ObjectIdField.Equals(value) != true)) {
                    this.ObjectIdField = value;
                    this.RaisePropertyChanged("ObjectId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentLocationEntry", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s.LocationEntries")]
    [System.SerializableAttribute()]
    public partial class EquipmentLocationEntry : Luna_interpreter.LocationService.TypedLocationEntryOfEquipmentfBCf7RRr {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypedLocationEntryOfSimpleUserTaskfBCf7RRr", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s.LocationEntries")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.LocationService.SimpleUserTaskLocationEntry))]
    public partial class TypedLocationEntryOfSimpleUserTaskfBCf7RRr : Luna_interpreter.LocationService.LocationEntry {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.LocationService.SimpleUserTask ObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ObjectIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.LocationService.SimpleUserTask Object {
            get {
                return this.ObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectField, value) != true)) {
                    this.ObjectField = value;
                    this.RaisePropertyChanged("Object");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ObjectId {
            get {
                return this.ObjectIdField;
            }
            set {
                if ((this.ObjectIdField.Equals(value) != true)) {
                    this.ObjectIdField = value;
                    this.RaisePropertyChanged("ObjectId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleUserTaskLocationEntry", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s.LocationEntries")]
    [System.SerializableAttribute()]
    public partial class SimpleUserTaskLocationEntry : Luna_interpreter.LocationService.TypedLocationEntryOfSimpleUserTaskfBCf7RRr {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypedLocationEntryOfWorkPlacefBCf7RRr", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s.LocationEntries")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.LocationService.WorkPlaceLocationEntry))]
    public partial class TypedLocationEntryOfWorkPlacefBCf7RRr : Luna_interpreter.LocationService.LocationEntry {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.LocationService.WorkPlace ObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ObjectIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.LocationService.WorkPlace Object {
            get {
                return this.ObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectField, value) != true)) {
                    this.ObjectField = value;
                    this.RaisePropertyChanged("Object");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ObjectId {
            get {
                return this.ObjectIdField;
            }
            set {
                if ((this.ObjectIdField.Equals(value) != true)) {
                    this.ObjectIdField = value;
                    this.RaisePropertyChanged("ObjectId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkPlaceLocationEntry", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s.LocationEntries")]
    [System.SerializableAttribute()]
    public partial class WorkPlaceLocationEntry : Luna_interpreter.LocationService.TypedLocationEntryOfWorkPlacefBCf7RRr {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Workforce", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s.Objects")]
    [System.SerializableAttribute()]
    public partial class Workforce : Luna_interpreter.LocationService.Resource {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Resource", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s.Objects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.LocationService.Equipment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.LocationService.Workforce))]
    public partial class Resource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Equipment", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s.Objects")]
    [System.SerializableAttribute()]
    public partial class Equipment : Luna_interpreter.LocationService.Resource {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleUserTask", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s.Objects")]
    [System.SerializableAttribute()]
    public partial class SimpleUserTask : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkPlace", Namespace="http://schemas.datacontract.org/2004/07/FlowService.LocationServices.DataContract" +
        "s.Objects")]
    [System.SerializableAttribute()]
    public partial class WorkPlace : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LocationService.ILocationService")]
    public interface ILocationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetPossibleTagKeys", ReplyAction="http://tempuri.org/ILocationService/GetPossibleTagKeysResponse")]
        Luna_interpreter.LocationService.Key[] GetPossibleTagKeys();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetPossibleTagKeys", ReplyAction="http://tempuri.org/ILocationService/GetPossibleTagKeysResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.Key[]> GetPossibleTagKeysAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetKeyByName", ReplyAction="http://tempuri.org/ILocationService/GetKeyByNameResponse")]
        Luna_interpreter.LocationService.Key GetKeyByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetKeyByName", ReplyAction="http://tempuri.org/ILocationService/GetKeyByNameResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.Key> GetKeyByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetDoubleFromCoordinate", ReplyAction="http://tempuri.org/ILocationService/GetDoubleFromCoordinateResponse")]
        double GetDoubleFromCoordinate(string coordinate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetDoubleFromCoordinate", ReplyAction="http://tempuri.org/ILocationService/GetDoubleFromCoordinateResponse")]
        System.Threading.Tasks.Task<double> GetDoubleFromCoordinateAsync(string coordinate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetTagsForLocation", ReplyAction="http://tempuri.org/ILocationService/GetTagsForLocationResponse")]
        Luna_interpreter.LocationService.Tag[] GetTagsForLocation(int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetTagsForLocation", ReplyAction="http://tempuri.org/ILocationService/GetTagsForLocationResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.Tag[]> GetTagsForLocationAsync(int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/AddTag", ReplyAction="http://tempuri.org/ILocationService/AddTagResponse")]
        int AddTag(Luna_interpreter.LocationService.Tag tag, int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/AddTag", ReplyAction="http://tempuri.org/ILocationService/AddTagResponse")]
        System.Threading.Tasks.Task<int> AddTagAsync(Luna_interpreter.LocationService.Tag tag, int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/UpdateTag", ReplyAction="http://tempuri.org/ILocationService/UpdateTagResponse")]
        int UpdateTag(Luna_interpreter.LocationService.Tag tag, int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/UpdateTag", ReplyAction="http://tempuri.org/ILocationService/UpdateTagResponse")]
        System.Threading.Tasks.Task<int> UpdateTagAsync(Luna_interpreter.LocationService.Tag tag, int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/DeleteTag", ReplyAction="http://tempuri.org/ILocationService/DeleteTagResponse")]
        void DeleteTag(int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/DeleteTag", ReplyAction="http://tempuri.org/ILocationService/DeleteTagResponse")]
        System.Threading.Tasks.Task DeleteTagAsync(int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/AddLocation", ReplyAction="http://tempuri.org/ILocationService/AddLocationResponse")]
        int AddLocation(Luna_interpreter.LocationService.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/AddLocation", ReplyAction="http://tempuri.org/ILocationService/AddLocationResponse")]
        System.Threading.Tasks.Task<int> AddLocationAsync(Luna_interpreter.LocationService.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/SearchLocations", ReplyAction="http://tempuri.org/ILocationService/SearchLocationsResponse")]
        Luna_interpreter.LocationService.Location[] SearchLocations(double centerLatitude, double centerLongitude, double radius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/SearchLocations", ReplyAction="http://tempuri.org/ILocationService/SearchLocationsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.Location[]> SearchLocationsAsync(double centerLatitude, double centerLongitude, double radius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetAllLocations", ReplyAction="http://tempuri.org/ILocationService/GetAllLocationsResponse")]
        Luna_interpreter.LocationService.Location[] GetAllLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetAllLocations", ReplyAction="http://tempuri.org/ILocationService/GetAllLocationsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.Location[]> GetAllLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/UpdateLocation", ReplyAction="http://tempuri.org/ILocationService/UpdateLocationResponse")]
        void UpdateLocation(Luna_interpreter.LocationService.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/UpdateLocation", ReplyAction="http://tempuri.org/ILocationService/UpdateLocationResponse")]
        System.Threading.Tasks.Task UpdateLocationAsync(Luna_interpreter.LocationService.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/DeleteLocation", ReplyAction="http://tempuri.org/ILocationService/DeleteLocationResponse")]
        void DeleteLocation(int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/DeleteLocation", ReplyAction="http://tempuri.org/ILocationService/DeleteLocationResponse")]
        System.Threading.Tasks.Task DeleteLocationAsync(int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocation", ReplyAction="http://tempuri.org/ILocationService/GetLocationResponse")]
        Luna_interpreter.LocationService.Location GetLocation(int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocation", ReplyAction="http://tempuri.org/ILocationService/GetLocationResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.Location> GetLocationAsync(int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/AddLocationEntry", ReplyAction="http://tempuri.org/ILocationService/AddLocationEntryResponse")]
        int AddLocationEntry(Luna_interpreter.LocationService.LocationEntry locationEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/AddLocationEntry", ReplyAction="http://tempuri.org/ILocationService/AddLocationEntryResponse")]
        System.Threading.Tasks.Task<int> AddLocationEntryAsync(Luna_interpreter.LocationService.LocationEntry locationEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetAllLocationEntries", ReplyAction="http://tempuri.org/ILocationService/GetAllLocationEntriesResponse")]
        Luna_interpreter.LocationService.LocationEntry[] GetAllLocationEntries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetAllLocationEntries", ReplyAction="http://tempuri.org/ILocationService/GetAllLocationEntriesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetAllLocationEntriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationEntriesInInterval", ReplyAction="http://tempuri.org/ILocationService/GetLocationEntriesInIntervalResponse")]
        Luna_interpreter.LocationService.LocationEntry[] GetLocationEntriesInInterval(System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationEntriesInInterval", ReplyAction="http://tempuri.org/ILocationService/GetLocationEntriesInIntervalResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetLocationEntriesInIntervalAsync(System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationEntriesFrom", ReplyAction="http://tempuri.org/ILocationService/GetLocationEntriesFromResponse")]
        Luna_interpreter.LocationService.LocationEntry[] GetLocationEntriesFrom(System.DateTime from);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationEntriesFrom", ReplyAction="http://tempuri.org/ILocationService/GetLocationEntriesFromResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetLocationEntriesFromAsync(System.DateTime from);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationEntriesTo", ReplyAction="http://tempuri.org/ILocationService/GetLocationEntriesToResponse")]
        Luna_interpreter.LocationService.LocationEntry[] GetLocationEntriesTo(System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationEntriesTo", ReplyAction="http://tempuri.org/ILocationService/GetLocationEntriesToResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetLocationEntriesToAsync(System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationEntriesForLocation", ReplyAction="http://tempuri.org/ILocationService/GetLocationEntriesForLocationResponse")]
        Luna_interpreter.LocationService.LocationEntry[] GetLocationEntriesForLocation(int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationEntriesForLocation", ReplyAction="http://tempuri.org/ILocationService/GetLocationEntriesForLocationResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetLocationEntriesForLocationAsync(int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationEntriesForLocationInInterval", ReplyAction="http://tempuri.org/ILocationService/GetLocationEntriesForLocationInIntervalRespon" +
            "se")]
        Luna_interpreter.LocationService.LocationEntry[] GetLocationEntriesForLocationInInterval(int locationId, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationEntriesForLocationInInterval", ReplyAction="http://tempuri.org/ILocationService/GetLocationEntriesForLocationInIntervalRespon" +
            "se")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetLocationEntriesForLocationInIntervalAsync(int locationId, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationEntriesForLocationFrom", ReplyAction="http://tempuri.org/ILocationService/GetLocationEntriesForLocationFromResponse")]
        Luna_interpreter.LocationService.LocationEntry[] GetLocationEntriesForLocationFrom(int locationId, System.DateTime from);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationEntriesForLocationFrom", ReplyAction="http://tempuri.org/ILocationService/GetLocationEntriesForLocationFromResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetLocationEntriesForLocationFromAsync(int locationId, System.DateTime from);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationEntriesForLocationTo", ReplyAction="http://tempuri.org/ILocationService/GetLocationEntriesForLocationToResponse")]
        Luna_interpreter.LocationService.LocationEntry[] GetLocationEntriesForLocationTo(int locationId, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationEntriesForLocationTo", ReplyAction="http://tempuri.org/ILocationService/GetLocationEntriesForLocationToResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetLocationEntriesForLocationToAsync(int locationId, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetEntriesForObject", ReplyAction="http://tempuri.org/ILocationService/GetEntriesForObjectResponse")]
        Luna_interpreter.LocationService.LocationEntry[] GetEntriesForObject(Luna_interpreter.LocationService.LocationEntry locationEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetEntriesForObject", ReplyAction="http://tempuri.org/ILocationService/GetEntriesForObjectResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetEntriesForObjectAsync(Luna_interpreter.LocationService.LocationEntry locationEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLastEntryForObject", ReplyAction="http://tempuri.org/ILocationService/GetLastEntryForObjectResponse")]
        Luna_interpreter.LocationService.LocationEntry GetLastEntryForObject(Luna_interpreter.LocationService.LocationEntry locationEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLastEntryForObject", ReplyAction="http://tempuri.org/ILocationService/GetLastEntryForObjectResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry> GetLastEntryForObjectAsync(Luna_interpreter.LocationService.LocationEntry locationEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/DeleteLocationEntry", ReplyAction="http://tempuri.org/ILocationService/DeleteLocationEntryResponse")]
        void DeleteLocationEntry(int locationEntryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/DeleteLocationEntry", ReplyAction="http://tempuri.org/ILocationService/DeleteLocationEntryResponse")]
        System.Threading.Tasks.Task DeleteLocationEntryAsync(int locationEntryId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILocationServiceChannel : Luna_interpreter.LocationService.ILocationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocationServiceClient : System.ServiceModel.ClientBase<Luna_interpreter.LocationService.ILocationService>, Luna_interpreter.LocationService.ILocationService {
        
        public LocationServiceClient() {
        }
        
        public LocationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LocationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Luna_interpreter.LocationService.Key[] GetPossibleTagKeys() {
            return base.Channel.GetPossibleTagKeys();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.Key[]> GetPossibleTagKeysAsync() {
            return base.Channel.GetPossibleTagKeysAsync();
        }
        
        public Luna_interpreter.LocationService.Key GetKeyByName(string name) {
            return base.Channel.GetKeyByName(name);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.Key> GetKeyByNameAsync(string name) {
            return base.Channel.GetKeyByNameAsync(name);
        }
        
        public double GetDoubleFromCoordinate(string coordinate) {
            return base.Channel.GetDoubleFromCoordinate(coordinate);
        }
        
        public System.Threading.Tasks.Task<double> GetDoubleFromCoordinateAsync(string coordinate) {
            return base.Channel.GetDoubleFromCoordinateAsync(coordinate);
        }
        
        public Luna_interpreter.LocationService.Tag[] GetTagsForLocation(int locationId) {
            return base.Channel.GetTagsForLocation(locationId);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.Tag[]> GetTagsForLocationAsync(int locationId) {
            return base.Channel.GetTagsForLocationAsync(locationId);
        }
        
        public int AddTag(Luna_interpreter.LocationService.Tag tag, int locationId) {
            return base.Channel.AddTag(tag, locationId);
        }
        
        public System.Threading.Tasks.Task<int> AddTagAsync(Luna_interpreter.LocationService.Tag tag, int locationId) {
            return base.Channel.AddTagAsync(tag, locationId);
        }
        
        public int UpdateTag(Luna_interpreter.LocationService.Tag tag, int locationId) {
            return base.Channel.UpdateTag(tag, locationId);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTagAsync(Luna_interpreter.LocationService.Tag tag, int locationId) {
            return base.Channel.UpdateTagAsync(tag, locationId);
        }
        
        public void DeleteTag(int tagId) {
            base.Channel.DeleteTag(tagId);
        }
        
        public System.Threading.Tasks.Task DeleteTagAsync(int tagId) {
            return base.Channel.DeleteTagAsync(tagId);
        }
        
        public int AddLocation(Luna_interpreter.LocationService.Location location) {
            return base.Channel.AddLocation(location);
        }
        
        public System.Threading.Tasks.Task<int> AddLocationAsync(Luna_interpreter.LocationService.Location location) {
            return base.Channel.AddLocationAsync(location);
        }
        
        public Luna_interpreter.LocationService.Location[] SearchLocations(double centerLatitude, double centerLongitude, double radius) {
            return base.Channel.SearchLocations(centerLatitude, centerLongitude, radius);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.Location[]> SearchLocationsAsync(double centerLatitude, double centerLongitude, double radius) {
            return base.Channel.SearchLocationsAsync(centerLatitude, centerLongitude, radius);
        }
        
        public Luna_interpreter.LocationService.Location[] GetAllLocations() {
            return base.Channel.GetAllLocations();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.Location[]> GetAllLocationsAsync() {
            return base.Channel.GetAllLocationsAsync();
        }
        
        public void UpdateLocation(Luna_interpreter.LocationService.Location location) {
            base.Channel.UpdateLocation(location);
        }
        
        public System.Threading.Tasks.Task UpdateLocationAsync(Luna_interpreter.LocationService.Location location) {
            return base.Channel.UpdateLocationAsync(location);
        }
        
        public void DeleteLocation(int locationId) {
            base.Channel.DeleteLocation(locationId);
        }
        
        public System.Threading.Tasks.Task DeleteLocationAsync(int locationId) {
            return base.Channel.DeleteLocationAsync(locationId);
        }
        
        public Luna_interpreter.LocationService.Location GetLocation(int locationId) {
            return base.Channel.GetLocation(locationId);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.Location> GetLocationAsync(int locationId) {
            return base.Channel.GetLocationAsync(locationId);
        }
        
        public int AddLocationEntry(Luna_interpreter.LocationService.LocationEntry locationEntry) {
            return base.Channel.AddLocationEntry(locationEntry);
        }
        
        public System.Threading.Tasks.Task<int> AddLocationEntryAsync(Luna_interpreter.LocationService.LocationEntry locationEntry) {
            return base.Channel.AddLocationEntryAsync(locationEntry);
        }
        
        public Luna_interpreter.LocationService.LocationEntry[] GetAllLocationEntries() {
            return base.Channel.GetAllLocationEntries();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetAllLocationEntriesAsync() {
            return base.Channel.GetAllLocationEntriesAsync();
        }
        
        public Luna_interpreter.LocationService.LocationEntry[] GetLocationEntriesInInterval(System.DateTime from, System.DateTime to) {
            return base.Channel.GetLocationEntriesInInterval(from, to);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetLocationEntriesInIntervalAsync(System.DateTime from, System.DateTime to) {
            return base.Channel.GetLocationEntriesInIntervalAsync(from, to);
        }
        
        public Luna_interpreter.LocationService.LocationEntry[] GetLocationEntriesFrom(System.DateTime from) {
            return base.Channel.GetLocationEntriesFrom(from);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetLocationEntriesFromAsync(System.DateTime from) {
            return base.Channel.GetLocationEntriesFromAsync(from);
        }
        
        public Luna_interpreter.LocationService.LocationEntry[] GetLocationEntriesTo(System.DateTime to) {
            return base.Channel.GetLocationEntriesTo(to);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetLocationEntriesToAsync(System.DateTime to) {
            return base.Channel.GetLocationEntriesToAsync(to);
        }
        
        public Luna_interpreter.LocationService.LocationEntry[] GetLocationEntriesForLocation(int locationId) {
            return base.Channel.GetLocationEntriesForLocation(locationId);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetLocationEntriesForLocationAsync(int locationId) {
            return base.Channel.GetLocationEntriesForLocationAsync(locationId);
        }
        
        public Luna_interpreter.LocationService.LocationEntry[] GetLocationEntriesForLocationInInterval(int locationId, System.DateTime from, System.DateTime to) {
            return base.Channel.GetLocationEntriesForLocationInInterval(locationId, from, to);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetLocationEntriesForLocationInIntervalAsync(int locationId, System.DateTime from, System.DateTime to) {
            return base.Channel.GetLocationEntriesForLocationInIntervalAsync(locationId, from, to);
        }
        
        public Luna_interpreter.LocationService.LocationEntry[] GetLocationEntriesForLocationFrom(int locationId, System.DateTime from) {
            return base.Channel.GetLocationEntriesForLocationFrom(locationId, from);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetLocationEntriesForLocationFromAsync(int locationId, System.DateTime from) {
            return base.Channel.GetLocationEntriesForLocationFromAsync(locationId, from);
        }
        
        public Luna_interpreter.LocationService.LocationEntry[] GetLocationEntriesForLocationTo(int locationId, System.DateTime to) {
            return base.Channel.GetLocationEntriesForLocationTo(locationId, to);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetLocationEntriesForLocationToAsync(int locationId, System.DateTime to) {
            return base.Channel.GetLocationEntriesForLocationToAsync(locationId, to);
        }
        
        public Luna_interpreter.LocationService.LocationEntry[] GetEntriesForObject(Luna_interpreter.LocationService.LocationEntry locationEntry) {
            return base.Channel.GetEntriesForObject(locationEntry);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry[]> GetEntriesForObjectAsync(Luna_interpreter.LocationService.LocationEntry locationEntry) {
            return base.Channel.GetEntriesForObjectAsync(locationEntry);
        }
        
        public Luna_interpreter.LocationService.LocationEntry GetLastEntryForObject(Luna_interpreter.LocationService.LocationEntry locationEntry) {
            return base.Channel.GetLastEntryForObject(locationEntry);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.LocationService.LocationEntry> GetLastEntryForObjectAsync(Luna_interpreter.LocationService.LocationEntry locationEntry) {
            return base.Channel.GetLastEntryForObjectAsync(locationEntry);
        }
        
        public void DeleteLocationEntry(int locationEntryId) {
            base.Channel.DeleteLocationEntry(locationEntryId);
        }
        
        public System.Threading.Tasks.Task DeleteLocationEntryAsync(int locationEntryId) {
            return base.Channel.DeleteLocationEntryAsync(locationEntryId);
        }
    }
}
