//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Luna_interpreter.ManagerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkTime", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.TimeManagement")]
    [System.SerializableAttribute()]
    public partial class WorkTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.Absence[] AbsencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.WorkTimeType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkforceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.Absence[] Absences {
            get {
                return this.AbsencesField;
            }
            set {
                if ((object.ReferenceEquals(this.AbsencesField, value) != true)) {
                    this.AbsencesField = value;
                    this.RaisePropertyChanged("Absences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.WorkTimeType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkforceId {
            get {
                return this.WorkforceIdField;
            }
            set {
                if ((this.WorkforceIdField.Equals(value) != true)) {
                    this.WorkforceIdField = value;
                    this.RaisePropertyChanged("WorkforceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkTimeType", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.TimeManagement")]
    [System.SerializableAttribute()]
    public partial class WorkTimeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Absence", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.TimeManagement")]
    [System.SerializableAttribute()]
    public partial class Absence : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.AbsenceType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkTimeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.AbsenceType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkTimeId {
            get {
                return this.WorkTimeIdField;
            }
            set {
                if ((this.WorkTimeIdField.Equals(value) != true)) {
                    this.WorkTimeIdField = value;
                    this.RaisePropertyChanged("WorkTimeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbsenceType", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.TimeManagement")]
    [System.SerializableAttribute()]
    public partial class AbsenceType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Workforce", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class Workforce : Luna_interpreter.ManagerService.Resource {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.Credential CredentialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.Credential Credential {
            get {
                return this.CredentialField;
            }
            set {
                if ((object.ReferenceEquals(this.CredentialField, value) != true)) {
                    this.CredentialField = value;
                    this.RaisePropertyChanged("Credential");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Resource", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.Component))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.Material))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.Equipment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.Service))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.Workforce))]
    public partial class Resource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Component", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.Components")]
    [System.SerializableAttribute()]
    public partial class Component : Luna_interpreter.ManagerService.Resource {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.ComponentCategory CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.ComponentCategory Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemNumber {
            get {
                return this.ItemNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNumberField, value) != true)) {
                    this.ItemNumberField = value;
                    this.RaisePropertyChanged("ItemNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Material", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.Materials")]
    [System.SerializableAttribute()]
    public partial class Material : Luna_interpreter.ManagerService.Resource {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.MaterialCategory CategoryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.MaterialCategory Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Equipment", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class Equipment : Luna_interpreter.ManagerService.Resource {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.Services")]
    [System.SerializableAttribute()]
    public partial class Service : Luna_interpreter.ManagerService.Resource {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.ProviderCompany CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.ServiceType ServiceTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.ProviderCompany Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.ServiceType ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypeField, value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Credential", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class Credential : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HashedPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HashedPassword {
            get {
                return this.HashedPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.HashedPasswordField, value) != true)) {
                    this.HashedPasswordField = value;
                    this.RaisePropertyChanged("HashedPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComponentCategory", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.Components")]
    [System.SerializableAttribute()]
    public partial class ComponentCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.PropertyType[] PossiblePropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSerial {
            get {
                return this.HasSerialField;
            }
            set {
                if ((this.HasSerialField.Equals(value) != true)) {
                    this.HasSerialField = value;
                    this.RaisePropertyChanged("HasSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.PropertyType[] PossibleProperties {
            get {
                return this.PossiblePropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PossiblePropertiesField, value) != true)) {
                    this.PossiblePropertiesField = value;
                    this.RaisePropertyChanged("PossibleProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyType", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.PropertyTypes")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.BooleanProperty))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.DoubleProperty))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.IntegerProperty))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.PredefinedListProperty))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.StringProperty))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.UnitProperty))]
    public partial class PropertyType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BooleanProperty", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.PropertyTypes")]
    [System.SerializableAttribute()]
    public partial class BooleanProperty : Luna_interpreter.ManagerService.PropertyType {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoubleProperty", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.PropertyTypes")]
    [System.SerializableAttribute()]
    public partial class DoubleProperty : Luna_interpreter.ManagerService.PropertyType {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntegerProperty", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.PropertyTypes")]
    [System.SerializableAttribute()]
    public partial class IntegerProperty : Luna_interpreter.ManagerService.PropertyType {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PredefinedListProperty", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.PropertyTypes")]
    [System.SerializableAttribute()]
    public partial class PredefinedListProperty : Luna_interpreter.ManagerService.PropertyType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.PredefinedListItem[] ListItemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.PredefinedListItem[] ListItems {
            get {
                return this.ListItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListItemsField, value) != true)) {
                    this.ListItemsField = value;
                    this.RaisePropertyChanged("ListItems");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StringProperty", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.PropertyTypes")]
    [System.SerializableAttribute()]
    public partial class StringProperty : Luna_interpreter.ManagerService.PropertyType {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnitProperty", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.PropertyTypes")]
    [System.SerializableAttribute()]
    public partial class UnitProperty : Luna_interpreter.ManagerService.PropertyType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.ResourceUnit DefaultUnitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.ResourceUnit DefaultUnit {
            get {
                return this.DefaultUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultUnitField, value) != true)) {
                    this.DefaultUnitField = value;
                    this.RaisePropertyChanged("DefaultUnit");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PredefinedListItem", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.PropertyTypes")]
    [System.SerializableAttribute()]
    public partial class PredefinedListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceUnit", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class ResourceUnit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abbreviation {
            get {
                return this.AbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbreviationField, value) != true)) {
                    this.AbbreviationField = value;
                    this.RaisePropertyChanged("Abbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MaterialCategory", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.Materials")]
    [System.SerializableAttribute()]
    public partial class MaterialCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderCompany", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.Services")]
    [System.SerializableAttribute()]
    public partial class ProviderCompany : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceType", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.Services")]
    [System.SerializableAttribute()]
    public partial class ServiceType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateResult", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.TimeManagement")]
    [System.SerializableAttribute()]
    public partial class DateResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PartialWorkforcesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.AbsenceType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] WorkforcesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.WorkTimeType WtTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] PartialWorkforces {
            get {
                return this.PartialWorkforcesField;
            }
            set {
                if ((object.ReferenceEquals(this.PartialWorkforcesField, value) != true)) {
                    this.PartialWorkforcesField = value;
                    this.RaisePropertyChanged("PartialWorkforces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.AbsenceType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Workforces {
            get {
                return this.WorkforcesField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkforcesField, value) != true)) {
                    this.WorkforcesField = value;
                    this.RaisePropertyChanged("Workforces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.WorkTimeType WtType {
            get {
                return this.WtTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.WtTypeField, value) != true)) {
                    this.WtTypeField = value;
                    this.RaisePropertyChanged("WtType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateInterval", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.TimeManagement")]
    [System.SerializableAttribute()]
    public partial class DateInterval : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShiftTemplate", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.TimeManagement")]
    [System.SerializableAttribute()]
    public partial class ShiftTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Skill", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class Skill : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SkillGroup", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class SkillGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginData", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Authentication")]
    [System.SerializableAttribute()]
    public partial class LoginData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.UserPermission[] PermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.UserPermission[] Permissions {
            get {
                return this.PermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionsField, value) != true)) {
                    this.PermissionsField = value;
                    this.RaisePropertyChanged("Permissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPermission", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Authentication")]
    [System.SerializableAttribute()]
    public partial class UserPermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Schedule", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.TimeManagement")]
    [System.SerializableAttribute()]
    public partial class Schedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.WorkPlace WorkPlaceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.WorkPlace WorkPlace {
            get {
                return this.WorkPlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPlaceField, value) != true)) {
                    this.WorkPlaceField = value;
                    this.RaisePropertyChanged("WorkPlace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkPlace", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class WorkPlace : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkforceGroup", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.PredefinedWorkforceGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.DynamicWorkforceGroup))]
    public partial class WorkforceGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PredefinedWorkforceGroup", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class PredefinedWorkforceGroup : Luna_interpreter.ManagerService.WorkforceGroup {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DynamicWorkforceGroup", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class DynamicWorkforceGroup : Luna_interpreter.ManagerService.WorkforceGroup {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.Expression ExpressionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.Expression Expression {
            get {
                return this.ExpressionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpressionField, value) != true)) {
                    this.ExpressionField = value;
                    this.RaisePropertyChanged("Expression");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Expression", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class Expression : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyValue", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.PropertyTypes.PropertyValues")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.BooleanValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.DoubleValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.IntegerValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.StringValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.PredefinedListValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.UnitValue))]
    public partial class PropertyValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BooleanValue", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.PropertyTypes.PropertyValues")]
    [System.SerializableAttribute()]
    public partial class BooleanValue : Luna_interpreter.ManagerService.PropertyValue {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.BooleanProperty PropertyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.BooleanProperty PropertyType {
            get {
                return this.PropertyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyTypeField, value) != true)) {
                    this.PropertyTypeField = value;
                    this.RaisePropertyChanged("PropertyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoubleValue", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.PropertyTypes.PropertyValues")]
    [System.SerializableAttribute()]
    public partial class DoubleValue : Luna_interpreter.ManagerService.PropertyValue {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.DoubleProperty PropertyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.DoubleProperty PropertyType {
            get {
                return this.PropertyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyTypeField, value) != true)) {
                    this.PropertyTypeField = value;
                    this.RaisePropertyChanged("PropertyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntegerValue", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.PropertyTypes.PropertyValues")]
    [System.SerializableAttribute()]
    public partial class IntegerValue : Luna_interpreter.ManagerService.PropertyValue {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.IntegerProperty PropertyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.IntegerProperty PropertyType {
            get {
                return this.PropertyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyTypeField, value) != true)) {
                    this.PropertyTypeField = value;
                    this.RaisePropertyChanged("PropertyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StringValue", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.PropertyTypes.PropertyValues")]
    [System.SerializableAttribute()]
    public partial class StringValue : Luna_interpreter.ManagerService.PropertyValue {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.StringProperty PropertyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.StringProperty PropertyType {
            get {
                return this.PropertyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyTypeField, value) != true)) {
                    this.PropertyTypeField = value;
                    this.RaisePropertyChanged("PropertyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PredefinedListValue", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.PropertyTypes.PropertyValues")]
    [System.SerializableAttribute()]
    public partial class PredefinedListValue : Luna_interpreter.ManagerService.PropertyValue {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.PredefinedListProperty PropertyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.PredefinedListItem ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.PredefinedListProperty PropertyType {
            get {
                return this.PropertyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyTypeField, value) != true)) {
                    this.PropertyTypeField = value;
                    this.RaisePropertyChanged("PropertyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.PredefinedListItem Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnitValue", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.PropertyTypes.PropertyValues")]
    [System.SerializableAttribute()]
    public partial class UnitValue : Luna_interpreter.ManagerService.PropertyValue {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.UnitProperty PropertyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.UnitProperty PropertyType {
            get {
                return this.PropertyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyTypeField, value) != true)) {
                    this.PropertyTypeField = value;
                    this.RaisePropertyChanged("PropertyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyContact", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.Services")]
    [System.SerializableAttribute()]
    public partial class CompanyContact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reservation", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.TimeManagement")]
    [System.SerializableAttribute()]
    public partial class Reservation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AssignmentTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EquipmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FinishedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDelayedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcessInstanceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkforceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AssignmentTime {
            get {
                return this.AssignmentTimeField;
            }
            set {
                if ((this.AssignmentTimeField.Equals(value) != true)) {
                    this.AssignmentTimeField = value;
                    this.RaisePropertyChanged("AssignmentTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EquipmentId {
            get {
                return this.EquipmentIdField;
            }
            set {
                if ((this.EquipmentIdField.Equals(value) != true)) {
                    this.EquipmentIdField = value;
                    this.RaisePropertyChanged("EquipmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FinishedTime {
            get {
                return this.FinishedTimeField;
            }
            set {
                if ((this.FinishedTimeField.Equals(value) != true)) {
                    this.FinishedTimeField = value;
                    this.RaisePropertyChanged("FinishedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDelayed {
            get {
                return this.IsDelayedField;
            }
            set {
                if ((this.IsDelayedField.Equals(value) != true)) {
                    this.IsDelayedField = value;
                    this.RaisePropertyChanged("IsDelayed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessInstanceId {
            get {
                return this.ProcessInstanceIdField;
            }
            set {
                if ((this.ProcessInstanceIdField.Equals(value) != true)) {
                    this.ProcessInstanceIdField = value;
                    this.RaisePropertyChanged("ProcessInstanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserTaskId {
            get {
                return this.UserTaskIdField;
            }
            set {
                if ((this.UserTaskIdField.Equals(value) != true)) {
                    this.UserTaskIdField = value;
                    this.RaisePropertyChanged("UserTaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkforceId {
            get {
                return this.WorkforceIdField;
            }
            set {
                if ((this.WorkforceIdField.Equals(value) != true)) {
                    this.WorkforceIdField = value;
                    this.RaisePropertyChanged("WorkforceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Permission", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class Permission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentGroup", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.DynamicEquipmentGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Luna_interpreter.ManagerService.PredefinedEquipmentGroup))]
    public partial class EquipmentGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DynamicEquipmentGroup", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class DynamicEquipmentGroup : Luna_interpreter.ManagerService.EquipmentGroup {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.Expression ExpressionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.Expression Expression {
            get {
                return this.ExpressionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpressionField, value) != true)) {
                    this.ExpressionField = value;
                    this.RaisePropertyChanged("Expression");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PredefinedEquipmentGroup", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class PredefinedEquipmentGroup : Luna_interpreter.ManagerService.EquipmentGroup {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hierarchy", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class Hierarchy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HierarchyTree", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es")]
    [System.SerializableAttribute()]
    public partial class HierarchyTree : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.Hierarchy StartElementField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.Hierarchy StartElement {
            get {
                return this.StartElementField;
            }
            set {
                if ((object.ReferenceEquals(this.StartElementField, value) != true)) {
                    this.StartElementField = value;
                    this.RaisePropertyChanged("StartElement");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Prediction", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.TimeManagement")]
    [System.SerializableAttribute()]
    public partial class Prediction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.UserTask UserTaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Luna_interpreter.ManagerService.Workforce WorkforceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkforceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.UserTask UserTask {
            get {
                return this.UserTaskField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTaskField, value) != true)) {
                    this.UserTaskField = value;
                    this.RaisePropertyChanged("UserTask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserTaskId {
            get {
                return this.UserTaskIdField;
            }
            set {
                if ((this.UserTaskIdField.Equals(value) != true)) {
                    this.UserTaskIdField = value;
                    this.RaisePropertyChanged("UserTaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Luna_interpreter.ManagerService.Workforce Workforce {
            get {
                return this.WorkforceField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkforceField, value) != true)) {
                    this.WorkforceField = value;
                    this.RaisePropertyChanged("Workforce");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkforceId {
            get {
                return this.WorkforceIdField;
            }
            set {
                if ((this.WorkforceIdField.Equals(value) != true)) {
                    this.WorkforceIdField = value;
                    this.RaisePropertyChanged("WorkforceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserTask", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.TimeManagement")]
    [System.SerializableAttribute()]
    public partial class UserTask : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Process", Namespace="http://schemas.datacontract.org/2004/07/FlowService.Manager.DataContracts.Resourc" +
        "es.TimeManagement")]
    [System.SerializableAttribute()]
    public partial class Process : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://wfe.mik.uni-pannon.hu/", ConfigurationName="ManagerService.IManagerService")]
    public interface IManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkTimes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkTimesResponse")]
        Luna_interpreter.ManagerService.WorkTime[] ListWorkTimes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkTimes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkTimesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTime[]> ListWorkTimesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkTimes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkTimesResponse")]
        Luna_interpreter.ManagerService.WorkTime[] SearchWorkTimes(System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkTimes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkTimesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTime[]> SearchWorkTimesAsync(System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkforceByTime", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkforceByTimeResponse")]
        Luna_interpreter.ManagerService.Workforce[] SearchWorkforceByTime(System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkforceByTime", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkforceByTimeResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Workforce[]> SearchWorkforceByTimeAsync(System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetNewUnionWorktimes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetNewUnionWorktimesResponse")]
        Luna_interpreter.ManagerService.DateResult[] GetNewUnionWorktimes(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetNewUnionWorktimes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetNewUnionWorktimesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateResult[]> GetNewUnionWorktimesAsync(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkTimesFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkTimesFromWorkforceResponse")]
        Luna_interpreter.ManagerService.WorkTime[] ListWorkTimesFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkTimesFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkTimesFromWorkforceResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTime[]> ListWorkTimesFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceWorktime", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceWorktimeResponse")]
        System.TimeSpan CountWorkforceWorktime(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceWorktime", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceWorktimeResponse")]
        System.Threading.Tasks.Task<System.TimeSpan> CountWorkforceWorktimeAsync(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceWorktimeInterval", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceWorktimeIntervalRespon" +
            "se")]
        System.TimeSpan CountWorkforceWorktimeInterval(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceWorktimeInterval", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceWorktimeIntervalRespon" +
            "se")]
        System.Threading.Tasks.Task<System.TimeSpan> CountWorkforceWorktimeIntervalAsync(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceAbsence", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceAbsenceResponse")]
        System.TimeSpan CountWorkforceAbsence(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceAbsence", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceAbsenceResponse")]
        System.Threading.Tasks.Task<System.TimeSpan> CountWorkforceAbsenceAsync(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceAbsenceInterval", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceAbsenceIntervalRespons" +
            "e")]
        System.TimeSpan CountWorkforceAbsenceInterval(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceAbsenceInterval", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkforceAbsenceIntervalRespons" +
            "e")]
        System.Threading.Tasks.Task<System.TimeSpan> CountWorkforceAbsenceIntervalAsync(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetIntersectWorkTimes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetIntersectWorkTimesResponse")]
        Luna_interpreter.ManagerService.DateInterval[] GetIntersectWorkTimes(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetIntersectWorkTimes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetIntersectWorkTimesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetIntersectWorkTimesAsync(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnionWorkTimes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnionWorkTimesResponse")]
        Luna_interpreter.ManagerService.DateInterval[] GetUnionWorkTimes(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnionWorkTimes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnionWorkTimesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetUnionWorkTimesAsync(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetComplementerWorkTimes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetComplementerWorkTimesResponse")]
        Luna_interpreter.ManagerService.DateInterval[] GetComplementerWorkTimes(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetComplementerWorkTimes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetComplementerWorkTimesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetComplementerWorkTimesAsync(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddWorkTimeToWorkforces", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddWorkTimeToWorkforcesResponse")]
        void AddWorkTimeToWorkforces(Luna_interpreter.ManagerService.WorkTime worktime, Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddWorkTimeToWorkforces", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddWorkTimeToWorkforcesResponse")]
        System.Threading.Tasks.Task AddWorkTimeToWorkforcesAsync(Luna_interpreter.ManagerService.WorkTime worktime, Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListDayOffFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListDayOffFromWorkforceResponse")]
        Luna_interpreter.ManagerService.WorkTime[] ListDayOffFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListDayOffFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListDayOffFromWorkforceResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTime[]> ListDayOffFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkTimeType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkTimeTypeResponse")]
        int CreateWorkTimeType(Luna_interpreter.ManagerService.WorkTimeType workTimeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkTimeType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkTimeTypeResponse")]
        System.Threading.Tasks.Task<int> CreateWorkTimeTypeAsync(Luna_interpreter.ManagerService.WorkTimeType workTimeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkTimeType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkTimeTypeResponse")]
        Luna_interpreter.ManagerService.WorkTimeType GetWorkTimeType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkTimeType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkTimeTypeResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTimeType> GetWorkTimeTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkTimeType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkTimeTypeResponse")]
        void DeleteWorkTimeType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkTimeType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkTimeTypeResponse")]
        System.Threading.Tasks.Task DeleteWorkTimeTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkTimeTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkTimeTypesResponse")]
        Luna_interpreter.ManagerService.WorkTimeType[] ListWorkTimeTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkTimeTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkTimeTypesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTimeType[]> ListWorkTimeTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkTimeTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkTimeTypesResponse")]
        Luna_interpreter.ManagerService.WorkTimeType[] SearchWorkTimeTypes(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkTimeTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkTimeTypesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTimeType[]> SearchWorkTimeTypesAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkTimeType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkTimeTypeResponse")]
        void UpdateWorkTimeType(Luna_interpreter.ManagerService.WorkTimeType workTimeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkTimeType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkTimeTypeResponse")]
        System.Threading.Tasks.Task UpdateWorkTimeTypeAsync(Luna_interpreter.ManagerService.WorkTimeType workTimeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListShiftTemplates", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListShiftTemplatesResponse")]
        Luna_interpreter.ManagerService.ShiftTemplate[] ListShiftTemplates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListShiftTemplates", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListShiftTemplatesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ShiftTemplate[]> ListShiftTemplatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchShiftTemplates", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchShiftTemplatesResponse")]
        Luna_interpreter.ManagerService.ShiftTemplate[] SearchShiftTemplates(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchShiftTemplates", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchShiftTemplatesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ShiftTemplate[]> SearchShiftTemplatesAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateSkill", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateSkillResponse")]
        int CreateSkill(Luna_interpreter.ManagerService.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateSkill", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateSkillResponse")]
        System.Threading.Tasks.Task<int> CreateSkillAsync(Luna_interpreter.ManagerService.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkill", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillResponse")]
        Luna_interpreter.ManagerService.Skill GetSkill(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkill", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Skill> GetSkillAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListSkills", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListSkillsResponse")]
        Luna_interpreter.ManagerService.Skill[] ListSkills();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListSkills", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListSkillsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Skill[]> ListSkillsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteSkill", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteSkillResponse")]
        void DeleteSkill(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteSkill", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteSkillResponse")]
        System.Threading.Tasks.Task DeleteSkillAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchSkill", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchSkillResponse")]
        Luna_interpreter.ManagerService.Skill[] SearchSkill(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchSkill", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchSkillResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Skill[]> SearchSkillAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateSkill", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateSkillResponse")]
        void UpdateSkill(Luna_interpreter.ManagerService.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateSkill", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateSkillResponse")]
        System.Threading.Tasks.Task UpdateSkillAsync(Luna_interpreter.ManagerService.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateSkillGroupResponse")]
        int CreateSkillGroup(Luna_interpreter.ManagerService.SkillGroup skillGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateSkillGroupResponse")]
        System.Threading.Tasks.Task<int> CreateSkillGroupAsync(Luna_interpreter.ManagerService.SkillGroup skillGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillGroupResponse")]
        Luna_interpreter.ManagerService.SkillGroup GetSkillGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillGroupResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.SkillGroup> GetSkillGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateSkillGroupResponse")]
        void UpdateSkillGroup(Luna_interpreter.ManagerService.SkillGroup skillGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateSkillGroupResponse")]
        System.Threading.Tasks.Task UpdateSkillGroupAsync(Luna_interpreter.ManagerService.SkillGroup skillGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteSkillGroupResponse")]
        void DeleteSkillGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteSkillGroupResponse")]
        System.Threading.Tasks.Task DeleteSkillGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListSkillGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListSkillGroupsResponse")]
        Luna_interpreter.ManagerService.SkillGroup[] ListSkillGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListSkillGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListSkillGroupsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.SkillGroup[]> ListSkillGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchSkillGroupResponse")]
        Luna_interpreter.ManagerService.SkillGroup[] SearchSkillGroup(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchSkillGroupResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.SkillGroup[]> SearchSkillGroupAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainedSkillGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainedSkillGroupsResponse")]
        Luna_interpreter.ManagerService.SkillGroup[] GetContainedSkillGroups(Luna_interpreter.ManagerService.SkillGroup container);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainedSkillGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainedSkillGroupsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.SkillGroup[]> GetContainedSkillGroupsAsync(Luna_interpreter.ManagerService.SkillGroup container);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainerSkillGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainerSkillGroupsResponse")]
        Luna_interpreter.ManagerService.SkillGroup[] GetContainerSkillGroups(Luna_interpreter.ManagerService.SkillGroup contained);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainerSkillGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainerSkillGroupsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.SkillGroup[]> GetContainerSkillGroupsAsync(Luna_interpreter.ManagerService.SkillGroup contained);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillGroupToSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillGroupToSkillGroupResponse")]
        void AddSkillGroupToSkillGroup(Luna_interpreter.ManagerService.SkillGroup container, Luna_interpreter.ManagerService.SkillGroup contained);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillGroupToSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillGroupToSkillGroupResponse")]
        System.Threading.Tasks.Task AddSkillGroupToSkillGroupAsync(Luna_interpreter.ManagerService.SkillGroup container, Luna_interpreter.ManagerService.SkillGroup contained);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveSkillGroupFromSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveSkillGroupFromSkillGroupRespon" +
            "se")]
        void RemoveSkillGroupFromSkillGroup(Luna_interpreter.ManagerService.SkillGroup container, Luna_interpreter.ManagerService.SkillGroup contained);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveSkillGroupFromSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveSkillGroupFromSkillGroupRespon" +
            "se")]
        System.Threading.Tasks.Task RemoveSkillGroupFromSkillGroupAsync(Luna_interpreter.ManagerService.SkillGroup container, Luna_interpreter.ManagerService.SkillGroup contained);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillToSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillToSkillGroupResponse")]
        void AddSkillToSkillGroup(Luna_interpreter.ManagerService.Skill skill, Luna_interpreter.ManagerService.SkillGroup skillGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillToSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillToSkillGroupResponse")]
        System.Threading.Tasks.Task AddSkillToSkillGroupAsync(Luna_interpreter.ManagerService.Skill skill, Luna_interpreter.ManagerService.SkillGroup skillGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillsFromSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillsFromSkillGroupResponse")]
        Luna_interpreter.ManagerService.Skill[] GetSkillsFromSkillGroup(Luna_interpreter.ManagerService.SkillGroup skillGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillsFromSkillGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillsFromSkillGroupResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Skill[]> GetSkillsFromSkillGroupAsync(Luna_interpreter.ManagerService.SkillGroup skillGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteSkillGroupSkills", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteSkillGroupSkillsResponse")]
        void OverwriteSkillGroupSkills(int skillGroupId, int[] skillIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteSkillGroupSkills", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteSkillGroupSkillsResponse")]
        System.Threading.Tasks.Task OverwriteSkillGroupSkillsAsync(int skillGroupId, int[] skillIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetCredentials", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetCredentialsResponse")]
        Luna_interpreter.ManagerService.LoginData GetCredentials();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetCredentials", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetCredentialsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.LoginData> GetCredentialsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkForce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkForceResponse")]
        int CreateWorkForce(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkForce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkForceResponse")]
        System.Threading.Tasks.Task<int> CreateWorkForceAsync(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforceResponse")]
        Luna_interpreter.ManagerService.Workforce GetWorkforce(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforceResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Workforce> GetWorkforceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkforceResponse")]
        void UpdateWorkforce(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkforceResponse")]
        System.Threading.Tasks.Task UpdateWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkforceResponse")]
        void DeleteWorkforce(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkforceResponse")]
        System.Threading.Tasks.Task DeleteWorkforceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkforceResponse")]
        Luna_interpreter.ManagerService.Workforce[] SearchWorkforce(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkforceResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Workforce[]> SearchWorkforceAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkforces", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkforcesResponse")]
        Luna_interpreter.ManagerService.Workforce[] ListWorkforces();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkforces", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkforcesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Workforce[]> ListWorkforcesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillToWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillToWorkforceResponse")]
        void AddSkillToWorkforce(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillToWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillToWorkforceResponse")]
        System.Threading.Tasks.Task AddSkillToWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveSkillFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveSkillFromWorkforceResponse")]
        void RemoveSkillFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveSkillFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveSkillFromWorkforceResponse")]
        System.Threading.Tasks.Task RemoveSkillFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteWorkforceSkills", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteWorkforceSkillsResponse")]
        void OverwriteWorkforceSkills(int workforceId, int[] skillIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteWorkforceSkills", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteWorkforceSkillsResponse")]
        System.Threading.Tasks.Task OverwriteWorkforceSkillsAsync(int workforceId, int[] skillIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillsFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillsFromWorkforceResponse")]
        Luna_interpreter.ManagerService.Skill[] GetSkillsFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillsFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillsFromWorkforceResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Skill[]> GetSkillsFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforceId", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforceIdResponse")]
        int GetWorkforceId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforceId", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforceIdResponse")]
        System.Threading.Tasks.Task<int> GetWorkforceIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ChangePassword", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ChangePasswordResponse")]
        void ChangePassword(string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ChangePassword", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ChangePasswordResponse")]
        System.Threading.Tasks.Task ChangePasswordAsync(string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetSchedulesFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetSchedulesFromWorkforceResponse")]
        Luna_interpreter.ManagerService.Schedule[] GetSchedulesFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetSchedulesFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetSchedulesFromWorkforceResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Schedule[]> GetSchedulesFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddScheduleToWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddScheduleToWorkforceResponse")]
        void AddScheduleToWorkforce(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Schedule schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddScheduleToWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddScheduleToWorkforceResponse")]
        System.Threading.Tasks.Task AddScheduleToWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Schedule schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveScheduleFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveScheduleFromWorkforceResponse")]
        void RemoveScheduleFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Schedule schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveScheduleFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveScheduleFromWorkforceResponse")]
        System.Threading.Tasks.Task RemoveScheduleFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Schedule schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateDynamicWorkforceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateDynamicWorkforceGroupResponse")]
        void UpdateDynamicWorkforceGroup(Luna_interpreter.ManagerService.DynamicWorkforceGroup wfGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateDynamicWorkforceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateDynamicWorkforceGroupResponse")]
        System.Threading.Tasks.Task UpdateDynamicWorkforceGroupAsync(Luna_interpreter.ManagerService.DynamicWorkforceGroup wfGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePredefinedWorkfoceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePredefinedWorkfoceGroupRespons" +
            "e")]
        int CreatePredefinedWorkfoceGroup(Luna_interpreter.ManagerService.PredefinedWorkforceGroup WorkforceGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePredefinedWorkfoceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePredefinedWorkfoceGroupRespons" +
            "e")]
        System.Threading.Tasks.Task<int> CreatePredefinedWorkfoceGroupAsync(Luna_interpreter.ManagerService.PredefinedWorkforceGroup WorkforceGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateDynamicWorkfoceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateDynamicWorkfoceGroupResponse")]
        int CreateDynamicWorkfoceGroup(Luna_interpreter.ManagerService.DynamicWorkforceGroup WorkforceGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateDynamicWorkfoceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateDynamicWorkfoceGroupResponse")]
        System.Threading.Tasks.Task<int> CreateDynamicWorkfoceGroupAsync(Luna_interpreter.ManagerService.DynamicWorkforceGroup WorkforceGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforceGroupResponse")]
        Luna_interpreter.ManagerService.WorkforceGroup GetWorkforceGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforceGroupResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkforceGroup> GetWorkforceGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetDynamicWorkforceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetDynamicWorkforceGroupResponse")]
        Luna_interpreter.ManagerService.DynamicWorkforceGroup GetDynamicWorkforceGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetDynamicWorkforceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetDynamicWorkforceGroupResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DynamicWorkforceGroup> GetDynamicWorkforceGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforceGroupType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforceGroupTypeResponse")]
        string GetWorkforceGroupType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforceGroupType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforceGroupTypeResponse")]
        System.Threading.Tasks.Task<string> GetWorkforceGroupTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkforceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkforceGroupResponse")]
        void UpdateWorkforceGroup(Luna_interpreter.ManagerService.WorkforceGroup WorkforceGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkforceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkforceGroupResponse")]
        System.Threading.Tasks.Task UpdateWorkforceGroupAsync(Luna_interpreter.ManagerService.WorkforceGroup WorkforceGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkforceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkforceGroupResponse")]
        void DeleteWorkforceGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkforceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkforceGroupResponse")]
        System.Threading.Tasks.Task DeleteWorkforceGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkforceGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkforceGroupsResponse")]
        Luna_interpreter.ManagerService.WorkforceGroup[] ListWorkforceGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkforceGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkforceGroupsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkforceGroup[]> ListWorkforceGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkforceGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkforceGroupsResponse")]
        Luna_interpreter.ManagerService.WorkforceGroup[] SearchWorkforceGroups(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkforceGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkforceGroupsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkforceGroup[]> SearchWorkforceGroupsAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddWorkforceGroupToGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddWorkforceGroupToGroupResponse")]
        void AddWorkforceGroupToGroup(Luna_interpreter.ManagerService.WorkforceGroup childWorkforceGroup, Luna_interpreter.ManagerService.WorkforceGroup parentWorkforceGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddWorkforceGroupToGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddWorkforceGroupToGroupResponse")]
        System.Threading.Tasks.Task AddWorkforceGroupToGroupAsync(Luna_interpreter.ManagerService.WorkforceGroup childWorkforceGroup, Luna_interpreter.ManagerService.WorkforceGroup parentWorkforceGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainedWorkforceGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainedWorkforceGroupsResponse")]
        Luna_interpreter.ManagerService.WorkforceGroup[] GetContainedWorkforceGroups(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainedWorkforceGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainedWorkforceGroupsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkforceGroup[]> GetContainedWorkforceGroupsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainersWorkforceGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainersWorkforceGroupsResponse" +
            "")]
        Luna_interpreter.ManagerService.WorkforceGroup[] GetContainersWorkforceGroups(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainersWorkforceGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainersWorkforceGroupsResponse" +
            "")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkforceGroup[]> GetContainersWorkforceGroupsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveWorkforceGroupFromGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveWorkforceGroupFromGroupRespons" +
            "e")]
        void RemoveWorkforceGroupFromGroup(Luna_interpreter.ManagerService.WorkforceGroup toRemoveWorkforceGroup, Luna_interpreter.ManagerService.WorkforceGroup parentWorkforceGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveWorkforceGroupFromGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveWorkforceGroupFromGroupRespons" +
            "e")]
        System.Threading.Tasks.Task RemoveWorkforceGroupFromGroupAsync(Luna_interpreter.ManagerService.WorkforceGroup toRemoveWorkforceGroup, Luna_interpreter.ManagerService.WorkforceGroup parentWorkforceGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddWorkforceToPredefinedWorkforceGro" +
            "up", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddWorkforceToPredefinedWorkforceGro" +
            "upResponse")]
        void AddWorkforceToPredefinedWorkforceGroup(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.PredefinedWorkforceGroup WorkforceGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddWorkforceToPredefinedWorkforceGro" +
            "up", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddWorkforceToPredefinedWorkforceGro" +
            "upResponse")]
        System.Threading.Tasks.Task AddWorkforceToPredefinedWorkforceGroupAsync(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.PredefinedWorkforceGroup WorkforceGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveEquipmentFromPredefinedWorkfor" +
            "ceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveEquipmentFromPredefinedWorkfor" +
            "ceGroupResponse")]
        void RemoveEquipmentFromPredefinedWorkforceGroup(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.PredefinedWorkforceGroup WorkforceGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveEquipmentFromPredefinedWorkfor" +
            "ceGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveEquipmentFromPredefinedWorkfor" +
            "ceGroupResponse")]
        System.Threading.Tasks.Task RemoveEquipmentFromPredefinedWorkforceGroupAsync(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.PredefinedWorkforceGroup WorkforceGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredefinedWorkforceGroupContent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredefinedWorkforceGroupContentRe" +
            "sponse")]
        Luna_interpreter.ManagerService.Workforce[] GetPredefinedWorkforceGroupContent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredefinedWorkforceGroupContent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredefinedWorkforceGroupContentRe" +
            "sponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Workforce[]> GetPredefinedWorkforceGroupContentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/OverwritePredefinedWorkforceGroupWor" +
            "kforces", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/OverwritePredefinedWorkforceGroupWor" +
            "kforcesResponse")]
        void OverwritePredefinedWorkforceGroupWorkforces(int WorkforceGroupId, int[] workforceIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/OverwritePredefinedWorkforceGroupWor" +
            "kforces", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/OverwritePredefinedWorkforceGroupWor" +
            "kforcesResponse")]
        System.Threading.Tasks.Task OverwritePredefinedWorkforceGroupWorkforcesAsync(int WorkforceGroupId, int[] workforceIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkPlace", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkPlaceResponse")]
        int CreateWorkPlace(Luna_interpreter.ManagerService.WorkPlace workPlace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkPlace", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkPlaceResponse")]
        System.Threading.Tasks.Task<int> CreateWorkPlaceAsync(Luna_interpreter.ManagerService.WorkPlace workPlace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkPlace", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkPlaceResponse")]
        Luna_interpreter.ManagerService.WorkPlace GetWorkPlace(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkPlace", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkPlaceResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkPlace> GetWorkPlaceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkPlace", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkPlaceResponse")]
        void DeleteWorkPlace(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkPlace", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkPlaceResponse")]
        System.Threading.Tasks.Task DeleteWorkPlaceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkPlaces", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkPlacesResponse")]
        Luna_interpreter.ManagerService.WorkPlace[] ListWorkPlaces();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkPlaces", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListWorkPlacesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkPlace[]> ListWorkPlacesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkPlaces", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkPlacesResponse")]
        Luna_interpreter.ManagerService.WorkPlace[] SearchWorkPlaces(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkPlaces", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchWorkPlacesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkPlace[]> SearchWorkPlacesAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkPlace", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkPlaceResponse")]
        void UpdateWorkPlace(Luna_interpreter.ManagerService.WorkPlace workplace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkPlace", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateWorkPlaceResponse")]
        System.Threading.Tasks.Task UpdateWorkPlaceAsync(Luna_interpreter.ManagerService.WorkPlace workplace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkTime", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkTimeResponse")]
        int CreateWorkTime(Luna_interpreter.ManagerService.WorkTime workTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkTime", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateWorkTimeResponse")]
        System.Threading.Tasks.Task<int> CreateWorkTimeAsync(Luna_interpreter.ManagerService.WorkTime workTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkTime", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkTimeResponse")]
        Luna_interpreter.ManagerService.WorkTime GetWorkTime(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkTime", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkTimeResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTime> GetWorkTimeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkTime", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkTimeResponse")]
        void DeleteWorkTime(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkTime", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteWorkTimeResponse")]
        System.Threading.Tasks.Task DeleteWorkTimeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePrediction", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePredictionResponse")]
        void DeletePrediction(int usertaskid, int workforceid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePrediction", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePredictionResponse")]
        System.Threading.Tasks.Task DeletePredictionAsync(int usertaskid, int workforceid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePropertyTypeToComponentCategor" +
            "y", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePropertyTypeToComponentCategor" +
            "yResponse")]
        int CreatePropertyTypeToComponentCategory(Luna_interpreter.ManagerService.PropertyType propertyType, Luna_interpreter.ManagerService.ComponentCategory componentcategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePropertyTypeToComponentCategor" +
            "y", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePropertyTypeToComponentCategor" +
            "yResponse")]
        System.Threading.Tasks.Task<int> CreatePropertyTypeToComponentCategoryAsync(Luna_interpreter.ManagerService.PropertyType propertyType, Luna_interpreter.ManagerService.ComponentCategory componentcategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePropertyTypeToMaterialCategory" +
            "", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePropertyTypeToMaterialCategory" +
            "Response")]
        int CreatePropertyTypeToMaterialCategory(Luna_interpreter.ManagerService.PropertyType propertyType, Luna_interpreter.ManagerService.MaterialCategory materialCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePropertyTypeToMaterialCategory" +
            "", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePropertyTypeToMaterialCategory" +
            "Response")]
        System.Threading.Tasks.Task<int> CreatePropertyTypeToMaterialCategoryAsync(Luna_interpreter.ManagerService.PropertyType propertyType, Luna_interpreter.ManagerService.MaterialCategory materialCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyTypeResponse")]
        Luna_interpreter.ManagerService.PropertyType GetPropertyType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyTypeResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyType> GetPropertyTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdatePropertyType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdatePropertyTypeResponse")]
        void UpdatePropertyType(Luna_interpreter.ManagerService.PropertyType PropertyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdatePropertyType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdatePropertyTypeResponse")]
        System.Threading.Tasks.Task UpdatePropertyTypeAsync(Luna_interpreter.ManagerService.PropertyType PropertyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePropertyType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePropertyTypeResponse")]
        void DeletePropertyType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePropertyType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePropertyTypeResponse")]
        System.Threading.Tasks.Task DeletePropertyTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyTypesResponse")]
        Luna_interpreter.ManagerService.PropertyType[] ListPropertyTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyTypesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyType[]> ListPropertyTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchPropertyTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchPropertyTypesResponse")]
        Luna_interpreter.ManagerService.PropertyType[] SearchPropertyTypes(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchPropertyTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchPropertyTypesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyType[]> SearchPropertyTypesAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyTypesFromComponentCatego" +
            "ry", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyTypesFromComponentCatego" +
            "ryResponse")]
        Luna_interpreter.ManagerService.PropertyType[] ListPropertyTypesFromComponentCategory(Luna_interpreter.ManagerService.ComponentCategory componentCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyTypesFromComponentCatego" +
            "ry", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyTypesFromComponentCatego" +
            "ryResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyType[]> ListPropertyTypesFromComponentCategoryAsync(Luna_interpreter.ManagerService.ComponentCategory componentCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyTypesFromMaterialCategor" +
            "y", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyTypesFromMaterialCategor" +
            "yResponse")]
        Luna_interpreter.ManagerService.PropertyType[] ListPropertyTypesFromMaterialCategory(Luna_interpreter.ManagerService.MaterialCategory materialCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyTypesFromMaterialCategor" +
            "y", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyTypesFromMaterialCategor" +
            "yResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyType[]> ListPropertyTypesFromMaterialCategoryAsync(Luna_interpreter.ManagerService.MaterialCategory materialCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePropertyValue", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePropertyValueResponse")]
        int CreatePropertyValue(Luna_interpreter.ManagerService.PropertyValue propertyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePropertyValue", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePropertyValueResponse")]
        System.Threading.Tasks.Task<int> CreatePropertyValueAsync(Luna_interpreter.ManagerService.PropertyValue propertyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyValue", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyValueResponse")]
        Luna_interpreter.ManagerService.PropertyValue GetPropertyValue(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyValue", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyValueResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyValue> GetPropertyValueAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdatePropertyValue", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdatePropertyValueResponse")]
        void UpdatePropertyValue(Luna_interpreter.ManagerService.PropertyValue PropertyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdatePropertyValue", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdatePropertyValueResponse")]
        System.Threading.Tasks.Task UpdatePropertyValueAsync(Luna_interpreter.ManagerService.PropertyValue PropertyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePropertyValue", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePropertyValueResponse")]
        void DeletePropertyValue(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePropertyValue", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePropertyValueResponse")]
        System.Threading.Tasks.Task DeletePropertyValueAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyValues", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyValuesResponse")]
        Luna_interpreter.ManagerService.PropertyValue[] ListPropertyValues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyValues", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListPropertyValuesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyValue[]> ListPropertyValuesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateProviderCompany", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateProviderCompanyResponse")]
        int CreateProviderCompany(Luna_interpreter.ManagerService.ProviderCompany providerCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateProviderCompany", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateProviderCompanyResponse")]
        System.Threading.Tasks.Task<int> CreateProviderCompanyAsync(Luna_interpreter.ManagerService.ProviderCompany providerCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetProviderCompany", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetProviderCompanyResponse")]
        Luna_interpreter.ManagerService.ProviderCompany GetProviderCompany(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetProviderCompany", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetProviderCompanyResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ProviderCompany> GetProviderCompanyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateProviderCompany", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateProviderCompanyResponse")]
        void UpdateProviderCompany(Luna_interpreter.ManagerService.ProviderCompany providerCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateProviderCompany", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateProviderCompanyResponse")]
        System.Threading.Tasks.Task UpdateProviderCompanyAsync(Luna_interpreter.ManagerService.ProviderCompany providerCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteProviderCompany", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteProviderCompanyResponse")]
        void DeleteProviderCompany(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteProviderCompany", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteProviderCompanyResponse")]
        System.Threading.Tasks.Task DeleteProviderCompanyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListProviderCompanies", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListProviderCompaniesResponse")]
        Luna_interpreter.ManagerService.ProviderCompany[] ListProviderCompanies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListProviderCompanies", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListProviderCompaniesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ProviderCompany[]> ListProviderCompaniesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchProviderCompanies", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchProviderCompaniesResponse")]
        Luna_interpreter.ManagerService.ProviderCompany[] SearchProviderCompanies(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchProviderCompanies", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchProviderCompaniesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ProviderCompany[]> SearchProviderCompaniesAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddCompanyContactToProviderCompany", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddCompanyContactToProviderCompanyRe" +
            "sponse")]
        void AddCompanyContactToProviderCompany(Luna_interpreter.ManagerService.ProviderCompany providerCompany, Luna_interpreter.ManagerService.CompanyContact companyContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddCompanyContactToProviderCompany", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddCompanyContactToProviderCompanyRe" +
            "sponse")]
        System.Threading.Tasks.Task AddCompanyContactToProviderCompanyAsync(Luna_interpreter.ManagerService.ProviderCompany providerCompany, Luna_interpreter.ManagerService.CompanyContact companyContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetCompanyContactFromProviderCompany" +
            "", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetCompanyContactFromProviderCompany" +
            "Response")]
        Luna_interpreter.ManagerService.CompanyContact[] GetCompanyContactFromProviderCompany(Luna_interpreter.ManagerService.ProviderCompany providerCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetCompanyContactFromProviderCompany" +
            "", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetCompanyContactFromProviderCompany" +
            "Response")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.CompanyContact[]> GetCompanyContactFromProviderCompanyAsync(Luna_interpreter.ManagerService.ProviderCompany providerCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveCompanyContactFromProviderComp" +
            "any", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveCompanyContactFromProviderComp" +
            "anyResponse")]
        void RemoveCompanyContactFromProviderCompany(Luna_interpreter.ManagerService.ProviderCompany providerCompany, Luna_interpreter.ManagerService.CompanyContact companyContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveCompanyContactFromProviderComp" +
            "any", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveCompanyContactFromProviderComp" +
            "anyResponse")]
        System.Threading.Tasks.Task RemoveCompanyContactFromProviderCompanyAsync(Luna_interpreter.ManagerService.ProviderCompany providerCompany, Luna_interpreter.ManagerService.CompanyContact companyContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListReservationfromProcess", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListReservationfromProcessResponse")]
        Luna_interpreter.ManagerService.Reservation[] ListReservationfromProcess(int processId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListReservationfromProcess", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListReservationfromProcessResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Reservation[]> ListReservationfromProcessAsync(int processId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateRole", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateRoleResponse")]
        int CreateRole(Luna_interpreter.ManagerService.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateRole", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateRoleResponse")]
        System.Threading.Tasks.Task<int> CreateRoleAsync(Luna_interpreter.ManagerService.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetRole", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetRoleResponse")]
        Luna_interpreter.ManagerService.Role GetRole(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetRole", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetRoleResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Role> GetRoleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateRole", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateRoleResponse")]
        void UpdateRole(Luna_interpreter.ManagerService.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateRole", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateRoleResponse")]
        System.Threading.Tasks.Task UpdateRoleAsync(Luna_interpreter.ManagerService.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteRole", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteRoleResponse")]
        void DeleteRole(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteRole", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteRoleResponse")]
        System.Threading.Tasks.Task DeleteRoleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListRoles", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListRolesResponse")]
        Luna_interpreter.ManagerService.Role[] ListRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListRoles", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListRolesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Role[]> ListRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchRoles", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchRolesResponse")]
        Luna_interpreter.ManagerService.Role[] SearchRoles(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchRoles", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchRolesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Role[]> SearchRolesAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddPermissionToRole", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddPermissionToRoleResponse")]
        void AddPermissionToRole(Luna_interpreter.ManagerService.Role role, Luna_interpreter.ManagerService.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddPermissionToRole", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddPermissionToRoleResponse")]
        System.Threading.Tasks.Task AddPermissionToRoleAsync(Luna_interpreter.ManagerService.Role role, Luna_interpreter.ManagerService.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePermissionFromRole", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePermissionFromRoleResponse")]
        void RemovePermissionFromRole(Luna_interpreter.ManagerService.Role role, Luna_interpreter.ManagerService.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePermissionFromRole", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePermissionFromRoleResponse")]
        System.Threading.Tasks.Task RemovePermissionFromRoleAsync(Luna_interpreter.ManagerService.Role role, Luna_interpreter.ManagerService.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermissionsFromRole", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermissionsFromRoleResponse")]
        Luna_interpreter.ManagerService.Permission[] GetPermissionsFromRole(Luna_interpreter.ManagerService.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermissionsFromRole", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermissionsFromRoleResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Permission[]> GetPermissionsFromRoleAsync(Luna_interpreter.ManagerService.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermissionsFromListOfRoles", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermissionsFromListOfRolesRespons" +
            "e")]
        Luna_interpreter.ManagerService.Permission[] GetPermissionsFromListOfRoles(int[] roleIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermissionsFromListOfRoles", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermissionsFromListOfRolesRespons" +
            "e")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Permission[]> GetPermissionsFromListOfRolesAsync(int[] roleIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetRolesFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetRolesFromWorkforceResponse")]
        Luna_interpreter.ManagerService.Role[] GetRolesFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetRolesFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetRolesFromWorkforceResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Role[]> GetRolesFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddRoleToWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddRoleToWorkforceResponse")]
        void AddRoleToWorkforce(Luna_interpreter.ManagerService.Role role, Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddRoleToWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddRoleToWorkforceResponse")]
        System.Threading.Tasks.Task AddRoleToWorkforceAsync(Luna_interpreter.ManagerService.Role role, Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveWorkforceRoles", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveWorkforceRolesResponse")]
        void RemoveWorkforceRoles(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveWorkforceRoles", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveWorkforceRolesResponse")]
        System.Threading.Tasks.Task RemoveWorkforceRolesAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateSchedule", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateScheduleResponse")]
        int CreateSchedule(Luna_interpreter.ManagerService.Schedule schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateSchedule", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateScheduleResponse")]
        System.Threading.Tasks.Task<int> CreateScheduleAsync(Luna_interpreter.ManagerService.Schedule schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetSchedule", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetScheduleResponse")]
        Luna_interpreter.ManagerService.Schedule GetSchedule(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetSchedule", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetScheduleResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Schedule> GetScheduleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteSchedule", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteScheduleResponse")]
        void DeleteSchedule(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteSchedule", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteScheduleResponse")]
        System.Threading.Tasks.Task DeleteScheduleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetScheduleDuration", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetScheduleDurationResponse")]
        System.TimeSpan GetScheduleDuration(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetScheduleDuration", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetScheduleDurationResponse")]
        System.Threading.Tasks.Task<System.TimeSpan> GetScheduleDurationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetIntersectSchedules", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetIntersectSchedulesResponse")]
        Luna_interpreter.ManagerService.DateInterval[] GetIntersectSchedules(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetIntersectSchedules", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetIntersectSchedulesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetIntersectSchedulesAsync(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnionSchedules", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnionSchedulesResponse")]
        Luna_interpreter.ManagerService.DateInterval[] GetUnionSchedules(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnionSchedules", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnionSchedulesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetUnionSchedulesAsync(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetComplementerSchedules", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetComplementerSchedulesResponse")]
        Luna_interpreter.ManagerService.DateInterval[] GetComplementerSchedules(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetComplementerSchedules", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetComplementerSchedulesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetComplementerSchedulesAsync(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddScheduleToWorkforces", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddScheduleToWorkforcesResponse")]
        void AddScheduleToWorkforces(Luna_interpreter.ManagerService.Schedule schedule, Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddScheduleToWorkforces", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddScheduleToWorkforcesResponse")]
        System.Threading.Tasks.Task AddScheduleToWorkforcesAsync(Luna_interpreter.ManagerService.Schedule schedule, Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetNewUnionSchedules", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetNewUnionSchedulesResponse")]
        Luna_interpreter.ManagerService.DateResult[] GetNewUnionSchedules(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetNewUnionSchedules", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetNewUnionSchedulesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateResult[]> GetNewUnionSchedulesAsync(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateService", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateServiceResponse")]
        int CreateService(Luna_interpreter.ManagerService.Service service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateService", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateServiceResponse")]
        System.Threading.Tasks.Task<int> CreateServiceAsync(Luna_interpreter.ManagerService.Service service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetService", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetServiceResponse")]
        Luna_interpreter.ManagerService.Service GetService(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetService", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetServiceResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Service> GetServiceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateService", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateServiceResponse")]
        void UpdateService(Luna_interpreter.ManagerService.Service service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateService", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateServiceResponse")]
        System.Threading.Tasks.Task UpdateServiceAsync(Luna_interpreter.ManagerService.Service service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteService", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteServiceResponse")]
        void DeleteService(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteService", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteServiceResponse")]
        System.Threading.Tasks.Task DeleteServiceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListServices", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListServicesResponse")]
        Luna_interpreter.ManagerService.Service[] ListServices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListServices", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListServicesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Service[]> ListServicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchServices", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchServicesResponse")]
        Luna_interpreter.ManagerService.Service[] SearchServices(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchServices", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchServicesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Service[]> SearchServicesAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetServicesFromProviderCompany", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetServicesFromProviderCompanyRespon" +
            "se")]
        Luna_interpreter.ManagerService.Service[] GetServicesFromProviderCompany(int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetServicesFromProviderCompany", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetServicesFromProviderCompanyRespon" +
            "se")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Service[]> GetServicesFromProviderCompanyAsync(int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateServiceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateServiceTypeResponse")]
        int CreateServiceType(Luna_interpreter.ManagerService.ServiceType serviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateServiceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateServiceTypeResponse")]
        System.Threading.Tasks.Task<int> CreateServiceTypeAsync(Luna_interpreter.ManagerService.ServiceType serviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetServiceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetServiceTypeResponse")]
        Luna_interpreter.ManagerService.ServiceType GetServiceType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetServiceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetServiceTypeResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ServiceType> GetServiceTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateServiceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateServiceTypeResponse")]
        void UpdateServiceType(Luna_interpreter.ManagerService.ServiceType serviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateServiceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateServiceTypeResponse")]
        System.Threading.Tasks.Task UpdateServiceTypeAsync(Luna_interpreter.ManagerService.ServiceType serviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteServiceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteServiceTypeResponse")]
        void DeleteServiceType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteServiceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteServiceTypeResponse")]
        System.Threading.Tasks.Task DeleteServiceTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListServiceTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListServiceTypesResponse")]
        Luna_interpreter.ManagerService.ServiceType[] ListServiceTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListServiceTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListServiceTypesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ServiceType[]> ListServiceTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchServiceTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchServiceTypesResponse")]
        Luna_interpreter.ManagerService.ServiceType[] SearchServiceTypes(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchServiceTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchServiceTypesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ServiceType[]> SearchServiceTypesAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateShiftTemplate", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateShiftTemplateResponse")]
        int CreateShiftTemplate(Luna_interpreter.ManagerService.ShiftTemplate shiftTemplate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateShiftTemplate", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateShiftTemplateResponse")]
        System.Threading.Tasks.Task<int> CreateShiftTemplateAsync(Luna_interpreter.ManagerService.ShiftTemplate shiftTemplate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetShiftTemplate", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetShiftTemplateResponse")]
        Luna_interpreter.ManagerService.ShiftTemplate GetShiftTemplate(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetShiftTemplate", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetShiftTemplateResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ShiftTemplate> GetShiftTemplateAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateShiftTemplate", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateShiftTemplateResponse")]
        void UpdateShiftTemplate(Luna_interpreter.ManagerService.ShiftTemplate shiftTemplate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateShiftTemplate", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateShiftTemplateResponse")]
        System.Threading.Tasks.Task UpdateShiftTemplateAsync(Luna_interpreter.ManagerService.ShiftTemplate shiftTemplate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteShiftTemplate", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteShiftTemplateResponse")]
        void DeleteShiftTemplate(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteShiftTemplate", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteShiftTemplateResponse")]
        System.Threading.Tasks.Task DeleteShiftTemplateAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteEquipmentGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteEquipmentGroupResponse")]
        void DeleteEquipmentGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteEquipmentGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteEquipmentGroupResponse")]
        System.Threading.Tasks.Task DeleteEquipmentGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListEquipmentGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListEquipmentGroupsResponse")]
        Luna_interpreter.ManagerService.EquipmentGroup[] ListEquipmentGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListEquipmentGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListEquipmentGroupsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.EquipmentGroup[]> ListEquipmentGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchEquipmentGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchEquipmentGroupsResponse")]
        Luna_interpreter.ManagerService.EquipmentGroup[] SearchEquipmentGroups(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchEquipmentGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchEquipmentGroupsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.EquipmentGroup[]> SearchEquipmentGroupsAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetDynamicEquipmentGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetDynamicEquipmentGroupResponse")]
        Luna_interpreter.ManagerService.DynamicEquipmentGroup GetDynamicEquipmentGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetDynamicEquipmentGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetDynamicEquipmentGroupResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DynamicEquipmentGroup> GetDynamicEquipmentGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetEquipmentGroupType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetEquipmentGroupTypeResponse")]
        string GetEquipmentGroupType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetEquipmentGroupType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetEquipmentGroupTypeResponse")]
        System.Threading.Tasks.Task<string> GetEquipmentGroupTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateDynamicEquipmentGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateDynamicEquipmentGroupResponse")]
        void UpdateDynamicEquipmentGroup(Luna_interpreter.ManagerService.DynamicEquipmentGroup equipmentGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateDynamicEquipmentGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateDynamicEquipmentGroupResponse")]
        System.Threading.Tasks.Task UpdateDynamicEquipmentGroupAsync(Luna_interpreter.ManagerService.DynamicEquipmentGroup equipmentGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddEquipmentGroupToGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddEquipmentGroupToGroupResponse")]
        void AddEquipmentGroupToGroup(Luna_interpreter.ManagerService.EquipmentGroup childEquipmentGroup, Luna_interpreter.ManagerService.EquipmentGroup parentEquipmentGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddEquipmentGroupToGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddEquipmentGroupToGroupResponse")]
        System.Threading.Tasks.Task AddEquipmentGroupToGroupAsync(Luna_interpreter.ManagerService.EquipmentGroup childEquipmentGroup, Luna_interpreter.ManagerService.EquipmentGroup parentEquipmentGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainedEquipmentGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainedEquipmentGroupsResponse")]
        Luna_interpreter.ManagerService.EquipmentGroup[] GetContainedEquipmentGroups(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainedEquipmentGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainedEquipmentGroupsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.EquipmentGroup[]> GetContainedEquipmentGroupsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainersEquipmentGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainersEquipmentGroupsResponse" +
            "")]
        Luna_interpreter.ManagerService.EquipmentGroup[] GetContainersEquipmentGroups(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainersEquipmentGroups", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetContainersEquipmentGroupsResponse" +
            "")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.EquipmentGroup[]> GetContainersEquipmentGroupsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveEquipmentGroupFromGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveEquipmentGroupFromGroupRespons" +
            "e")]
        void RemoveEquipmentGroupFromGroup(Luna_interpreter.ManagerService.EquipmentGroup toRemoveEquipmentGroup, Luna_interpreter.ManagerService.EquipmentGroup parentEquipmentGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveEquipmentGroupFromGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveEquipmentGroupFromGroupRespons" +
            "e")]
        System.Threading.Tasks.Task RemoveEquipmentGroupFromGroupAsync(Luna_interpreter.ManagerService.EquipmentGroup toRemoveEquipmentGroup, Luna_interpreter.ManagerService.EquipmentGroup parentEquipmentGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddEquipmentToPredefinedEquipmentGro" +
            "up", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddEquipmentToPredefinedEquipmentGro" +
            "upResponse")]
        void AddEquipmentToPredefinedEquipmentGroup(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.PredefinedEquipmentGroup equipmentGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddEquipmentToPredefinedEquipmentGro" +
            "up", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddEquipmentToPredefinedEquipmentGro" +
            "upResponse")]
        System.Threading.Tasks.Task AddEquipmentToPredefinedEquipmentGroupAsync(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.PredefinedEquipmentGroup equipmentGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveEquipmentFromPredefinedEquipme" +
            "ntGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveEquipmentFromPredefinedEquipme" +
            "ntGroupResponse")]
        void RemoveEquipmentFromPredefinedEquipmentGroup(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.PredefinedEquipmentGroup equipmentGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveEquipmentFromPredefinedEquipme" +
            "ntGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveEquipmentFromPredefinedEquipme" +
            "ntGroupResponse")]
        System.Threading.Tasks.Task RemoveEquipmentFromPredefinedEquipmentGroupAsync(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.PredefinedEquipmentGroup equipmentGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredefinedEquipmentGroupContent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredefinedEquipmentGroupContentRe" +
            "sponse")]
        Luna_interpreter.ManagerService.Equipment[] GetPredefinedEquipmentGroupContent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredefinedEquipmentGroupContent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredefinedEquipmentGroupContentRe" +
            "sponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Equipment[]> GetPredefinedEquipmentGroupContentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/OverwritePredefinedEquipmentGroupEqu" +
            "ipments", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/OverwritePredefinedEquipmentGroupEqu" +
            "ipmentsResponse")]
        void OverwritePredefinedEquipmentGroupEquipments(int equipmentGroupId, int[] equipmentIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/OverwritePredefinedEquipmentGroupEqu" +
            "ipments", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/OverwritePredefinedEquipmentGroupEqu" +
            "ipmentsResponse")]
        System.Threading.Tasks.Task OverwritePredefinedEquipmentGroupEquipmentsAsync(int equipmentGroupId, int[] equipmentIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateHierarchy", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateHierarchyResponse")]
        int CreateHierarchy(Luna_interpreter.ManagerService.Hierarchy hierarchy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateHierarchy", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateHierarchyResponse")]
        System.Threading.Tasks.Task<int> CreateHierarchyAsync(Luna_interpreter.ManagerService.Hierarchy hierarchy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetHierarchy", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetHierarchyResponse")]
        Luna_interpreter.ManagerService.Hierarchy GetHierarchy(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetHierarchy", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetHierarchyResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Hierarchy> GetHierarchyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateHierarchy", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateHierarchyResponse")]
        void UpdateHierarchy(Luna_interpreter.ManagerService.Hierarchy hierarchy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateHierarchy", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateHierarchyResponse")]
        System.Threading.Tasks.Task UpdateHierarchyAsync(Luna_interpreter.ManagerService.Hierarchy hierarchy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteHierarchy", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteHierarchyResponse")]
        void DeleteHierarchy(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteHierarchy", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteHierarchyResponse")]
        System.Threading.Tasks.Task DeleteHierarchyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchHierarchy", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchHierarchyResponse")]
        Luna_interpreter.ManagerService.Hierarchy[] SearchHierarchy(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchHierarchy", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchHierarchyResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Hierarchy[]> SearchHierarchyAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListHierarchies", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListHierarchiesResponse")]
        Luna_interpreter.ManagerService.Hierarchy[] ListHierarchies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListHierarchies", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListHierarchiesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Hierarchy[]> ListHierarchiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddHierarchyToWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddHierarchyToWorkforceResponse")]
        void AddHierarchyToWorkforce(Luna_interpreter.ManagerService.Hierarchy hierarchy, Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddHierarchyToWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddHierarchyToWorkforceResponse")]
        System.Threading.Tasks.Task AddHierarchyToWorkforceAsync(Luna_interpreter.ManagerService.Hierarchy hierarchy, Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetHierarchiesFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetHierarchiesFromWorkforceResponse")]
        Luna_interpreter.ManagerService.Hierarchy[] GetHierarchiesFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetHierarchiesFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetHierarchiesFromWorkforceResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Hierarchy[]> GetHierarchiesFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveWorkforceHierarchies", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveWorkforceHierarchiesResponse")]
        void RemoveWorkforceHierarchies(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveWorkforceHierarchies", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveWorkforceHierarchiesResponse")]
        System.Threading.Tasks.Task RemoveWorkforceHierarchiesAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforcesFromHierarchy", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforcesFromHierarchyResponse")]
        Luna_interpreter.ManagerService.Workforce[] GetWorkforcesFromHierarchy(Luna_interpreter.ManagerService.Hierarchy hierarchy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforcesFromHierarchy", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetWorkforcesFromHierarchyResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Workforce[]> GetWorkforcesFromHierarchyAsync(Luna_interpreter.ManagerService.Hierarchy hierarchy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateHierarchyTree", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateHierarchyTreeResponse")]
        int CreateHierarchyTree(Luna_interpreter.ManagerService.HierarchyTree hierarchyTree);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateHierarchyTree", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateHierarchyTreeResponse")]
        System.Threading.Tasks.Task<int> CreateHierarchyTreeAsync(Luna_interpreter.ManagerService.HierarchyTree hierarchyTree);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetHierarchyTree", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetHierarchyTreeResponse")]
        Luna_interpreter.ManagerService.HierarchyTree GetHierarchyTree(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetHierarchyTree", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetHierarchyTreeResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.HierarchyTree> GetHierarchyTreeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateHierarchyTree", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateHierarchyTreeResponse")]
        void UpdateHierarchyTree(Luna_interpreter.ManagerService.HierarchyTree hierarchyTree);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateHierarchyTree", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateHierarchyTreeResponse")]
        System.Threading.Tasks.Task UpdateHierarchyTreeAsync(Luna_interpreter.ManagerService.HierarchyTree hierarchyTree);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteHierarchyTree", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteHierarchyTreeResponse")]
        void DeleteHierarchyTree(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteHierarchyTree", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteHierarchyTreeResponse")]
        System.Threading.Tasks.Task DeleteHierarchyTreeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchHierarchyTrees", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchHierarchyTreesResponse")]
        Luna_interpreter.ManagerService.HierarchyTree[] SearchHierarchyTrees(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchHierarchyTrees", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchHierarchyTreesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.HierarchyTree[]> SearchHierarchyTreesAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListHierarchyTrees", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListHierarchyTreesResponse")]
        Luna_interpreter.ManagerService.HierarchyTree[] ListHierarchyTrees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListHierarchyTrees", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListHierarchyTreesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.HierarchyTree[]> ListHierarchyTreesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateMaterial", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateMaterialResponse")]
        int CreateMaterial(Luna_interpreter.ManagerService.Material material);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateMaterial", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateMaterialResponse")]
        System.Threading.Tasks.Task<int> CreateMaterialAsync(Luna_interpreter.ManagerService.Material material);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetMaterial", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetMaterialResponse")]
        Luna_interpreter.ManagerService.Material GetMaterial(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetMaterial", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetMaterialResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Material> GetMaterialAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateMaterial", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateMaterialResponse")]
        void UpdateMaterial(Luna_interpreter.ManagerService.Material Material);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateMaterial", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateMaterialResponse")]
        System.Threading.Tasks.Task UpdateMaterialAsync(Luna_interpreter.ManagerService.Material Material);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteMaterial", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteMaterialResponse")]
        void DeleteMaterial(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteMaterial", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteMaterialResponse")]
        System.Threading.Tasks.Task DeleteMaterialAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListMaterials", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListMaterialsResponse")]
        Luna_interpreter.ManagerService.Material[] ListMaterials();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListMaterials", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListMaterialsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Material[]> ListMaterialsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchMaterials", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchMaterialsResponse")]
        Luna_interpreter.ManagerService.Material[] SearchMaterials(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchMaterials", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchMaterialsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Material[]> SearchMaterialsAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddPropertiesToMaterial", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddPropertiesToMaterialResponse")]
        void AddPropertiesToMaterial(Luna_interpreter.ManagerService.Material material, Luna_interpreter.ManagerService.PropertyValue propertyvalue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddPropertiesToMaterial", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddPropertiesToMaterialResponse")]
        System.Threading.Tasks.Task AddPropertiesToMaterialAsync(Luna_interpreter.ManagerService.Material material, Luna_interpreter.ManagerService.PropertyValue propertyvalue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyValueFromMaterial", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyValueFromMaterialResponse" +
            "")]
        Luna_interpreter.ManagerService.PropertyValue[] GetPropertyValueFromMaterial(Luna_interpreter.ManagerService.Material material);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyValueFromMaterial", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyValueFromMaterialResponse" +
            "")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyValue[]> GetPropertyValueFromMaterialAsync(Luna_interpreter.ManagerService.Material material);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePropertyFromMaterial", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePropertyFromMaterialResponse")]
        void RemovePropertyFromMaterial(Luna_interpreter.ManagerService.Material material, Luna_interpreter.ManagerService.PropertyValue propertyvalue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePropertyFromMaterial", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePropertyFromMaterialResponse")]
        System.Threading.Tasks.Task RemovePropertyFromMaterialAsync(Luna_interpreter.ManagerService.Material material, Luna_interpreter.ManagerService.PropertyValue propertyvalue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateMaterialCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateMaterialCategoryResponse")]
        int CreateMaterialCategory(Luna_interpreter.ManagerService.MaterialCategory materialCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateMaterialCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateMaterialCategoryResponse")]
        System.Threading.Tasks.Task<int> CreateMaterialCategoryAsync(Luna_interpreter.ManagerService.MaterialCategory materialCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetMaterialCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetMaterialCategoryResponse")]
        Luna_interpreter.ManagerService.MaterialCategory GetMaterialCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetMaterialCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetMaterialCategoryResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.MaterialCategory> GetMaterialCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateMaterialCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateMaterialCategoryResponse")]
        void UpdateMaterialCategory(Luna_interpreter.ManagerService.MaterialCategory MaterialCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateMaterialCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateMaterialCategoryResponse")]
        System.Threading.Tasks.Task UpdateMaterialCategoryAsync(Luna_interpreter.ManagerService.MaterialCategory MaterialCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteMaterialCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteMaterialCategoryResponse")]
        void DeleteMaterialCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteMaterialCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteMaterialCategoryResponse")]
        System.Threading.Tasks.Task DeleteMaterialCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListMaterialCategories", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListMaterialCategoriesResponse")]
        Luna_interpreter.ManagerService.MaterialCategory[] ListMaterialCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListMaterialCategories", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListMaterialCategoriesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.MaterialCategory[]> ListMaterialCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchMaterialCategories", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchMaterialCategoriesResponse")]
        Luna_interpreter.ManagerService.MaterialCategory[] SearchMaterialCategories(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchMaterialCategories", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchMaterialCategoriesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.MaterialCategory[]> SearchMaterialCategoriesAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddPossiblePropetyToMaterialCategory" +
            "", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddPossiblePropetyToMaterialCategory" +
            "Response")]
        void AddPossiblePropetyToMaterialCategory(Luna_interpreter.ManagerService.MaterialCategory materialCategory, Luna_interpreter.ManagerService.PropertyType popertyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddPossiblePropetyToMaterialCategory" +
            "", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddPossiblePropetyToMaterialCategory" +
            "Response")]
        System.Threading.Tasks.Task AddPossiblePropetyToMaterialCategoryAsync(Luna_interpreter.ManagerService.MaterialCategory materialCategory, Luna_interpreter.ManagerService.PropertyType popertyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPossiblePropetyFromMaterialCatego" +
            "ry", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPossiblePropetyFromMaterialCatego" +
            "ryResponse")]
        Luna_interpreter.ManagerService.PropertyType[] GetPossiblePropetyFromMaterialCategory(Luna_interpreter.ManagerService.MaterialCategory materialCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPossiblePropetyFromMaterialCatego" +
            "ry", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPossiblePropetyFromMaterialCatego" +
            "ryResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyType[]> GetPossiblePropetyFromMaterialCategoryAsync(Luna_interpreter.ManagerService.MaterialCategory materialCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePossiblePropetyFromMaterialCat" +
            "egory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePossiblePropetyFromMaterialCat" +
            "egoryResponse")]
        void RemovePossiblePropetyFromMaterialCategory(Luna_interpreter.ManagerService.MaterialCategory materialCategory, Luna_interpreter.ManagerService.PropertyType propertyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePossiblePropetyFromMaterialCat" +
            "egory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePossiblePropetyFromMaterialCat" +
            "egoryResponse")]
        System.Threading.Tasks.Task RemovePossiblePropetyFromMaterialCategoryAsync(Luna_interpreter.ManagerService.MaterialCategory materialCategory, Luna_interpreter.ManagerService.PropertyType propertyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePermission", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePermissionResponse")]
        int CreatePermission(Luna_interpreter.ManagerService.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePermission", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePermissionResponse")]
        System.Threading.Tasks.Task<int> CreatePermissionAsync(Luna_interpreter.ManagerService.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermission", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermissionResponse")]
        Luna_interpreter.ManagerService.Permission GetPermission(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermission", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermissionResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Permission> GetPermissionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdatePermission", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdatePermissionResponse")]
        void UpdatePermission(Luna_interpreter.ManagerService.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdatePermission", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdatePermissionResponse")]
        System.Threading.Tasks.Task UpdatePermissionAsync(Luna_interpreter.ManagerService.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePermission", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePermissionResponse")]
        void DeletePermission(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePermission", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePermissionResponse")]
        System.Threading.Tasks.Task DeletePermissionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListPermissions", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListPermissionsResponse")]
        Luna_interpreter.ManagerService.Permission[] ListPermissions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListPermissions", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListPermissionsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Permission[]> ListPermissionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchPermissions", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchPermissionsResponse")]
        Luna_interpreter.ManagerService.Permission[] SearchPermissions(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchPermissions", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchPermissionsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Permission[]> SearchPermissionsAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePrediction", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePredictionResponse")]
        int CreatePrediction(Luna_interpreter.ManagerService.Prediction prediction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePrediction", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePredictionResponse")]
        System.Threading.Tasks.Task<int> CreatePredictionAsync(Luna_interpreter.ManagerService.Prediction prediction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePredictions", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePredictionsResponse")]
        void CreatePredictions(Luna_interpreter.ManagerService.Prediction[] predictions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePredictions", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePredictionsResponse")]
        System.Threading.Tasks.Task CreatePredictionsAsync(Luna_interpreter.ManagerService.Prediction[] predictions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredictionsFromUserTask", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredictionsFromUserTaskResponse")]
        Luna_interpreter.ManagerService.Prediction[] GetPredictionsFromUserTask(Luna_interpreter.ManagerService.UserTask usertask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredictionsFromUserTask", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredictionsFromUserTaskResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Prediction[]> GetPredictionsFromUserTaskAsync(Luna_interpreter.ManagerService.UserTask usertask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredictionsWorkForce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredictionsWorkForceResponse")]
        Luna_interpreter.ManagerService.Prediction[] GetPredictionsWorkForce(Luna_interpreter.ManagerService.Workforce wf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredictionsWorkForce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPredictionsWorkForceResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Prediction[]> GetPredictionsWorkForceAsync(Luna_interpreter.ManagerService.Workforce wf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePredictions", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePredictionsResponse")]
        void DeletePredictions(Luna_interpreter.ManagerService.UserTask usertask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePredictions", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePredictionsResponse")]
        System.Threading.Tasks.Task DeletePredictionsAsync(Luna_interpreter.ManagerService.UserTask usertask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListProcesses", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListProcessesResponse")]
        Luna_interpreter.ManagerService.Process[] ListProcesses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListProcesses", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListProcessesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Process[]> ListProcessesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetProcess", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetProcessResponse")]
        Luna_interpreter.ManagerService.Process GetProcess(int processId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetProcess", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetProcessResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Process> GetProcessAsync(int processId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListUserTasks", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListUserTasksResponse")]
        Luna_interpreter.ManagerService.UserTask[] ListUserTasks(int processid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListUserTasks", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListUserTasksResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.UserTask[]> ListUserTasksAsync(int processid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/Createusertask", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateusertaskResponse")]
        int Createusertask(Luna_interpreter.ManagerService.UserTask prediction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/Createusertask", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateusertaskResponse")]
        System.Threading.Tasks.Task<int> CreateusertaskAsync(Luna_interpreter.ManagerService.UserTask prediction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetUsertask", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetUsertaskResponse")]
        Luna_interpreter.ManagerService.UserTask GetUsertask(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetUsertask", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetUsertaskResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.UserTask> GetUsertaskAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateAbsence", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateAbsenceResponse")]
        int CreateAbsence(Luna_interpreter.ManagerService.Absence absence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateAbsence", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateAbsenceResponse")]
        System.Threading.Tasks.Task<int> CreateAbsenceAsync(Luna_interpreter.ManagerService.Absence absence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsence", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsenceResponse")]
        Luna_interpreter.ManagerService.Absence GetAbsence(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsence", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsenceResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Absence> GetAbsenceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteAbsence", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteAbsenceResponse")]
        void DeleteAbsence(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteAbsence", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteAbsenceResponse")]
        System.Threading.Tasks.Task DeleteAbsenceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsenceDuration", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsenceDurationResponse")]
        System.TimeSpan GetAbsenceDuration(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsenceDuration", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsenceDurationResponse")]
        System.Threading.Tasks.Task<System.TimeSpan> GetAbsenceDurationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkTimeAbsence", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkTimeAbsenceResponse")]
        System.TimeSpan CountWorkTimeAbsence(Luna_interpreter.ManagerService.WorkTime worktime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkTimeAbsence", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CountWorkTimeAbsenceResponse")]
        System.Threading.Tasks.Task<System.TimeSpan> CountWorkTimeAbsenceAsync(Luna_interpreter.ManagerService.WorkTime worktime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetIntersectAbsences", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetIntersectAbsencesResponse")]
        Luna_interpreter.ManagerService.DateInterval[] GetIntersectAbsences(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetIntersectAbsences", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetIntersectAbsencesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetIntersectAbsencesAsync(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnionAbsences", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnionAbsencesResponse")]
        Luna_interpreter.ManagerService.DateInterval[] GetUnionAbsences(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnionAbsences", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnionAbsencesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetUnionAbsencesAsync(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetNewUnionAbsences", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetNewUnionAbsencesResponse")]
        Luna_interpreter.ManagerService.DateResult[] GetNewUnionAbsences(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetNewUnionAbsences", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetNewUnionAbsencesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateResult[]> GetNewUnionAbsencesAsync(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetComplementerAbsences", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetComplementerAbsencesResponse")]
        Luna_interpreter.ManagerService.DateInterval[] GetComplementerAbsences(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetComplementerAbsences", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetComplementerAbsencesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetComplementerAbsencesAsync(Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddAbsenceToWorkforces", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddAbsenceToWorkforcesResponse")]
        void AddAbsenceToWorkforces(Luna_interpreter.ManagerService.Absence absence, Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddAbsenceToWorkforces", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddAbsenceToWorkforcesResponse")]
        System.Threading.Tasks.Task AddAbsenceToWorkforcesAsync(Luna_interpreter.ManagerService.Absence absence, Luna_interpreter.ManagerService.Workforce[] workforces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsencesFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsencesFromWorkforceResponse")]
        Luna_interpreter.ManagerService.Absence[] GetAbsencesFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsencesFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsencesFromWorkforceResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Absence[]> GetAbsencesFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetJustifiedAbsencesFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetJustifiedAbsencesFromWorkforceRes" +
            "ponse")]
        Luna_interpreter.ManagerService.Absence[] GetJustifiedAbsencesFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetJustifiedAbsencesFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetJustifiedAbsencesFromWorkforceRes" +
            "ponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Absence[]> GetJustifiedAbsencesFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnJustifiedAbsencesFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnJustifiedAbsencesFromWorkforceR" +
            "esponse")]
        Luna_interpreter.ManagerService.Absence[] GetUnJustifiedAbsencesFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnJustifiedAbsencesFromWorkforce", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnJustifiedAbsencesFromWorkforceR" +
            "esponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Absence[]> GetUnJustifiedAbsencesFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsencesFromWorkforceInterval", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsencesFromWorkforceIntervalResp" +
            "onse")]
        Luna_interpreter.ManagerService.Absence[] GetAbsencesFromWorkforceInterval(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsencesFromWorkforceInterval", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsencesFromWorkforceIntervalResp" +
            "onse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Absence[]> GetAbsencesFromWorkforceIntervalAsync(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetJustifiedAbsencesFromWorkforceInt" +
            "erval", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetJustifiedAbsencesFromWorkforceInt" +
            "ervalResponse")]
        Luna_interpreter.ManagerService.Absence[] GetJustifiedAbsencesFromWorkforceInterval(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetJustifiedAbsencesFromWorkforceInt" +
            "erval", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetJustifiedAbsencesFromWorkforceInt" +
            "ervalResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Absence[]> GetJustifiedAbsencesFromWorkforceIntervalAsync(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnJustifiedAbsencesFromWorkforceI" +
            "nterval", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnJustifiedAbsencesFromWorkforceI" +
            "ntervalResponse")]
        Luna_interpreter.ManagerService.Absence[] GetUnJustifiedAbsencesFromWorkforceInterval(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnJustifiedAbsencesFromWorkforceI" +
            "nterval", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetUnJustifiedAbsencesFromWorkforceI" +
            "ntervalResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Absence[]> GetUnJustifiedAbsencesFromWorkforceIntervalAsync(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateAbsenceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateAbsenceTypeResponse")]
        int CreateAbsenceType(Luna_interpreter.ManagerService.AbsenceType absencetype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateAbsenceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateAbsenceTypeResponse")]
        System.Threading.Tasks.Task<int> CreateAbsenceTypeAsync(Luna_interpreter.ManagerService.AbsenceType absencetype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsenceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsenceTypeResponse")]
        Luna_interpreter.ManagerService.AbsenceType GetAbsenceType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsenceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetAbsenceTypeResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.AbsenceType> GetAbsenceTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteAbsenceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteAbsenceTypeResponse")]
        void DeleteAbsenceType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteAbsenceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteAbsenceTypeResponse")]
        System.Threading.Tasks.Task DeleteAbsenceTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListAbsenceTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListAbsenceTypesResponse")]
        Luna_interpreter.ManagerService.AbsenceType[] ListAbsenceTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListAbsenceTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListAbsenceTypesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.AbsenceType[]> ListAbsenceTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchAbsenceTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchAbsenceTypesResponse")]
        Luna_interpreter.ManagerService.AbsenceType[] SearchAbsenceTypes(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchAbsenceTypes", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchAbsenceTypesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.AbsenceType[]> SearchAbsenceTypesAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateAbsenceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateAbsenceTypeResponse")]
        void UpdateAbsenceType(Luna_interpreter.ManagerService.AbsenceType absencetype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateAbsenceType", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateAbsenceTypeResponse")]
        System.Threading.Tasks.Task UpdateAbsenceTypeAsync(Luna_interpreter.ManagerService.AbsenceType absencetype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateCompanyContact", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateCompanyContactResponse")]
        int CreateCompanyContact(Luna_interpreter.ManagerService.CompanyContact companyContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateCompanyContact", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateCompanyContactResponse")]
        System.Threading.Tasks.Task<int> CreateCompanyContactAsync(Luna_interpreter.ManagerService.CompanyContact companyContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetCompanyContact", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetCompanyContactResponse")]
        Luna_interpreter.ManagerService.CompanyContact GetCompanyContact(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetCompanyContact", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetCompanyContactResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.CompanyContact> GetCompanyContactAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateCompanyContact", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateCompanyContactResponse")]
        void UpdateCompanyContact(Luna_interpreter.ManagerService.CompanyContact companyContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateCompanyContact", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateCompanyContactResponse")]
        System.Threading.Tasks.Task UpdateCompanyContactAsync(Luna_interpreter.ManagerService.CompanyContact companyContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteCompanyContact", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteCompanyContactResponse")]
        void DeleteCompanyContact(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteCompanyContact", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteCompanyContactResponse")]
        System.Threading.Tasks.Task DeleteCompanyContactAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListCompanyContacts", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListCompanyContactsResponse")]
        Luna_interpreter.ManagerService.CompanyContact[] ListCompanyContacts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListCompanyContacts", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListCompanyContactsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.CompanyContact[]> ListCompanyContactsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchCompanyContacts", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchCompanyContactsResponse")]
        Luna_interpreter.ManagerService.CompanyContact[] SearchCompanyContacts(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchCompanyContacts", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchCompanyContactsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.CompanyContact[]> SearchCompanyContactsAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateComponent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateComponentResponse")]
        int CreateComponent(Luna_interpreter.ManagerService.Component component);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateComponent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateComponentResponse")]
        System.Threading.Tasks.Task<int> CreateComponentAsync(Luna_interpreter.ManagerService.Component component);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetComponent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetComponentResponse")]
        Luna_interpreter.ManagerService.Component GetComponent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetComponent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetComponentResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Component> GetComponentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateComponent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateComponentResponse")]
        void UpdateComponent(Luna_interpreter.ManagerService.Component Component);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateComponent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateComponentResponse")]
        System.Threading.Tasks.Task UpdateComponentAsync(Luna_interpreter.ManagerService.Component Component);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteComponent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteComponentResponse")]
        void DeleteComponent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteComponent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteComponentResponse")]
        System.Threading.Tasks.Task DeleteComponentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListComponents", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListComponentsResponse")]
        Luna_interpreter.ManagerService.Component[] ListComponents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListComponents", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListComponentsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Component[]> ListComponentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchComponents", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchComponentsResponse")]
        Luna_interpreter.ManagerService.Component[] SearchComponents(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchComponents", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchComponentsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Component[]> SearchComponentsAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddPropertiesToComponent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddPropertiesToComponentResponse")]
        void AddPropertiesToComponent(Luna_interpreter.ManagerService.Component component, Luna_interpreter.ManagerService.PropertyValue propertyvalue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddPropertiesToComponent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddPropertiesToComponentResponse")]
        System.Threading.Tasks.Task AddPropertiesToComponentAsync(Luna_interpreter.ManagerService.Component component, Luna_interpreter.ManagerService.PropertyValue propertyvalue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyValueFromComponent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyValueFromComponentRespons" +
            "e")]
        Luna_interpreter.ManagerService.PropertyValue[] GetPropertyValueFromComponent(Luna_interpreter.ManagerService.Component component);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyValueFromComponent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPropertyValueFromComponentRespons" +
            "e")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyValue[]> GetPropertyValueFromComponentAsync(Luna_interpreter.ManagerService.Component component);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePropertyFromComponent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePropertyFromComponentResponse")]
        void RemovePropertyFromComponent(Luna_interpreter.ManagerService.Component component, Luna_interpreter.ManagerService.PropertyValue propertyvalue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePropertyFromComponent", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePropertyFromComponentResponse")]
        System.Threading.Tasks.Task RemovePropertyFromComponentAsync(Luna_interpreter.ManagerService.Component component, Luna_interpreter.ManagerService.PropertyValue propertyvalue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateComponentCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateComponentCategoryResponse")]
        int CreateComponentCategory(Luna_interpreter.ManagerService.ComponentCategory componentCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateComponentCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateComponentCategoryResponse")]
        System.Threading.Tasks.Task<int> CreateComponentCategoryAsync(Luna_interpreter.ManagerService.ComponentCategory componentCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetComponentCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetComponentCategoryResponse")]
        Luna_interpreter.ManagerService.ComponentCategory GetComponentCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetComponentCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetComponentCategoryResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ComponentCategory> GetComponentCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateComponentCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateComponentCategoryResponse")]
        void UpdateComponentCategory(Luna_interpreter.ManagerService.ComponentCategory ComponentCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateComponentCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateComponentCategoryResponse")]
        System.Threading.Tasks.Task UpdateComponentCategoryAsync(Luna_interpreter.ManagerService.ComponentCategory ComponentCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteComponentCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteComponentCategoryResponse")]
        void DeleteComponentCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteComponentCategory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteComponentCategoryResponse")]
        System.Threading.Tasks.Task DeleteComponentCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListComponentCategories", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListComponentCategoriesResponse")]
        Luna_interpreter.ManagerService.ComponentCategory[] ListComponentCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListComponentCategories", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListComponentCategoriesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ComponentCategory[]> ListComponentCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchComponentCategories", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchComponentCategoriesResponse")]
        Luna_interpreter.ManagerService.ComponentCategory[] SearchComponentCategories(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchComponentCategories", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchComponentCategoriesResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ComponentCategory[]> SearchComponentCategoriesAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddPossiblePropetyToComponentCategor" +
            "y", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddPossiblePropetyToComponentCategor" +
            "yResponse")]
        void AddPossiblePropetyToComponentCategory(Luna_interpreter.ManagerService.ComponentCategory componentCategory, Luna_interpreter.ManagerService.PropertyType popertyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddPossiblePropetyToComponentCategor" +
            "y", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddPossiblePropetyToComponentCategor" +
            "yResponse")]
        System.Threading.Tasks.Task AddPossiblePropetyToComponentCategoryAsync(Luna_interpreter.ManagerService.ComponentCategory componentCategory, Luna_interpreter.ManagerService.PropertyType popertyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPossiblePropetyFromComponentCateg" +
            "ory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPossiblePropetyFromComponentCateg" +
            "oryResponse")]
        Luna_interpreter.ManagerService.PropertyType[] GetPossiblePropetyFromComponentCategory(Luna_interpreter.ManagerService.ComponentCategory componentCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPossiblePropetyFromComponentCateg" +
            "ory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPossiblePropetyFromComponentCateg" +
            "oryResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyType[]> GetPossiblePropetyFromComponentCategoryAsync(Luna_interpreter.ManagerService.ComponentCategory componentCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePossiblePropetyFromComponentCa" +
            "tegory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePossiblePropetyFromComponentCa" +
            "tegoryResponse")]
        void RemovePossiblePropetyFromComponentCategory(Luna_interpreter.ManagerService.ComponentCategory componentCategory, Luna_interpreter.ManagerService.PropertyType propertyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePossiblePropetyFromComponentCa" +
            "tegory", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemovePossiblePropetyFromComponentCa" +
            "tegoryResponse")]
        System.Threading.Tasks.Task RemovePossiblePropetyFromComponentCategoryAsync(Luna_interpreter.ManagerService.ComponentCategory componentCategory, Luna_interpreter.ManagerService.PropertyType propertyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateEquipmentResponse")]
        int CreateEquipment(Luna_interpreter.ManagerService.Equipment equipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateEquipmentResponse")]
        System.Threading.Tasks.Task<int> CreateEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetEquipmentResponse")]
        Luna_interpreter.ManagerService.Equipment GetEquipment(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetEquipmentResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Equipment> GetEquipmentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateEquipmentResponse")]
        void UpdateEquipment(Luna_interpreter.ManagerService.Equipment equipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateEquipmentResponse")]
        System.Threading.Tasks.Task UpdateEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteEquipmentResponse")]
        void DeleteEquipment(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeleteEquipmentResponse")]
        System.Threading.Tasks.Task DeleteEquipmentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListEquipments", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListEquipmentsResponse")]
        Luna_interpreter.ManagerService.Equipment[] ListEquipments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/ListEquipments", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/ListEquipmentsResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Equipment[]> ListEquipmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchEquipmentResponse")]
        Luna_interpreter.ManagerService.Equipment[] SearchEquipment(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/SearchEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/SearchEquipmentResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Equipment[]> SearchEquipmentAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillToEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillToEquipmentResponse")]
        void AddSkillToEquipment(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillToEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddSkillToEquipmentResponse")]
        System.Threading.Tasks.Task AddSkillToEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveSkillFromEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveSkillFromEquipmentResponse")]
        void RemoveSkillFromEquipment(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveSkillFromEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/RemoveSkillFromEquipmentResponse")]
        System.Threading.Tasks.Task RemoveSkillFromEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillsOfEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillsOfEquipmentResponse")]
        Luna_interpreter.ManagerService.Skill[] GetSkillsOfEquipment(Luna_interpreter.ManagerService.Equipment equipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillsOfEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetSkillsOfEquipmentResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Skill[]> GetSkillsOfEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteEquipmentSkills", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteEquipmentSkillsResponse")]
        void OverwriteEquipmentSkills(int equipmentId, int[] skillIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteEquipmentSkills", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteEquipmentSkillsResponse")]
        System.Threading.Tasks.Task OverwriteEquipmentSkillsAsync(int equipmentId, int[] skillIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddPermissionToEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddPermissionToEquipmentResponse")]
        void AddPermissionToEquipment(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/AddPermissionToEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/AddPermissionToEquipmentResponse")]
        System.Threading.Tasks.Task AddPermissionToEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermissionFromEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermissionFromEquipmentResponse")]
        Luna_interpreter.ManagerService.Permission[] GetPermissionFromEquipment(Luna_interpreter.ManagerService.Equipment equipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermissionFromEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetPermissionFromEquipmentResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Permission[]> GetPermissionFromEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePermissionFromEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePermissionFromEquipmentRespons" +
            "e")]
        void DeletePermissionFromEquipment(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePermissionFromEquipment", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/DeletePermissionFromEquipmentRespons" +
            "e")]
        System.Threading.Tasks.Task DeletePermissionFromEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteEquipmentPermissions", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteEquipmentPermissionsRespons" +
            "e")]
        void OverwriteEquipmentPermissions(int equipmentId, int[] permissionIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteEquipmentPermissions", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/OverwriteEquipmentPermissionsRespons" +
            "e")]
        System.Threading.Tasks.Task OverwriteEquipmentPermissionsAsync(int equipmentId, int[] permissionIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePredefinedEquipmentGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePredefinedEquipmentGroupRespon" +
            "se")]
        int CreatePredefinedEquipmentGroup(Luna_interpreter.ManagerService.PredefinedEquipmentGroup equipmentGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePredefinedEquipmentGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreatePredefinedEquipmentGroupRespon" +
            "se")]
        System.Threading.Tasks.Task<int> CreatePredefinedEquipmentGroupAsync(Luna_interpreter.ManagerService.PredefinedEquipmentGroup equipmentGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateDynamicEquipmentGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateDynamicEquipmentGroupResponse")]
        int CreateDynamicEquipmentGroup(Luna_interpreter.ManagerService.DynamicEquipmentGroup equipmentGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/CreateDynamicEquipmentGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/CreateDynamicEquipmentGroupResponse")]
        System.Threading.Tasks.Task<int> CreateDynamicEquipmentGroupAsync(Luna_interpreter.ManagerService.DynamicEquipmentGroup equipmentGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetEquipmentGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetEquipmentGroupResponse")]
        Luna_interpreter.ManagerService.EquipmentGroup GetEquipmentGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/GetEquipmentGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/GetEquipmentGroupResponse")]
        System.Threading.Tasks.Task<Luna_interpreter.ManagerService.EquipmentGroup> GetEquipmentGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateEquipmentGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateEquipmentGroupResponse")]
        void UpdateEquipmentGroup(Luna_interpreter.ManagerService.EquipmentGroup equipmentGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateEquipmentGroup", ReplyAction="http://wfe.mik.uni-pannon.hu/IManagerService/UpdateEquipmentGroupResponse")]
        System.Threading.Tasks.Task UpdateEquipmentGroupAsync(Luna_interpreter.ManagerService.EquipmentGroup equipmentGroup);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManagerServiceChannel : Luna_interpreter.ManagerService.IManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManagerServiceClient : System.ServiceModel.ClientBase<Luna_interpreter.ManagerService.IManagerService>, Luna_interpreter.ManagerService.IManagerService {
        
        public ManagerServiceClient() {
        }
        
        public ManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Luna_interpreter.ManagerService.WorkTime[] ListWorkTimes() {
            return base.Channel.ListWorkTimes();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTime[]> ListWorkTimesAsync() {
            return base.Channel.ListWorkTimesAsync();
        }
        
        public Luna_interpreter.ManagerService.WorkTime[] SearchWorkTimes(System.DateTime time) {
            return base.Channel.SearchWorkTimes(time);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTime[]> SearchWorkTimesAsync(System.DateTime time) {
            return base.Channel.SearchWorkTimesAsync(time);
        }
        
        public Luna_interpreter.ManagerService.Workforce[] SearchWorkforceByTime(System.DateTime time) {
            return base.Channel.SearchWorkforceByTime(time);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Workforce[]> SearchWorkforceByTimeAsync(System.DateTime time) {
            return base.Channel.SearchWorkforceByTimeAsync(time);
        }
        
        public Luna_interpreter.ManagerService.DateResult[] GetNewUnionWorktimes(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetNewUnionWorktimes(workforces);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateResult[]> GetNewUnionWorktimesAsync(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetNewUnionWorktimesAsync(workforces);
        }
        
        public Luna_interpreter.ManagerService.WorkTime[] ListWorkTimesFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.ListWorkTimesFromWorkforce(workforce);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTime[]> ListWorkTimesFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.ListWorkTimesFromWorkforceAsync(workforce);
        }
        
        public System.TimeSpan CountWorkforceWorktime(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.CountWorkforceWorktime(workforce);
        }
        
        public System.Threading.Tasks.Task<System.TimeSpan> CountWorkforceWorktimeAsync(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.CountWorkforceWorktimeAsync(workforce);
        }
        
        public System.TimeSpan CountWorkforceWorktimeInterval(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to) {
            return base.Channel.CountWorkforceWorktimeInterval(workforce, from, to);
        }
        
        public System.Threading.Tasks.Task<System.TimeSpan> CountWorkforceWorktimeIntervalAsync(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to) {
            return base.Channel.CountWorkforceWorktimeIntervalAsync(workforce, from, to);
        }
        
        public System.TimeSpan CountWorkforceAbsence(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.CountWorkforceAbsence(workforce);
        }
        
        public System.Threading.Tasks.Task<System.TimeSpan> CountWorkforceAbsenceAsync(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.CountWorkforceAbsenceAsync(workforce);
        }
        
        public System.TimeSpan CountWorkforceAbsenceInterval(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to) {
            return base.Channel.CountWorkforceAbsenceInterval(workforce, from, to);
        }
        
        public System.Threading.Tasks.Task<System.TimeSpan> CountWorkforceAbsenceIntervalAsync(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to) {
            return base.Channel.CountWorkforceAbsenceIntervalAsync(workforce, from, to);
        }
        
        public Luna_interpreter.ManagerService.DateInterval[] GetIntersectWorkTimes(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetIntersectWorkTimes(workforces);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetIntersectWorkTimesAsync(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetIntersectWorkTimesAsync(workforces);
        }
        
        public Luna_interpreter.ManagerService.DateInterval[] GetUnionWorkTimes(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetUnionWorkTimes(workforces);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetUnionWorkTimesAsync(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetUnionWorkTimesAsync(workforces);
        }
        
        public Luna_interpreter.ManagerService.DateInterval[] GetComplementerWorkTimes(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetComplementerWorkTimes(workforces);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetComplementerWorkTimesAsync(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetComplementerWorkTimesAsync(workforces);
        }
        
        public void AddWorkTimeToWorkforces(Luna_interpreter.ManagerService.WorkTime worktime, Luna_interpreter.ManagerService.Workforce[] workforces) {
            base.Channel.AddWorkTimeToWorkforces(worktime, workforces);
        }
        
        public System.Threading.Tasks.Task AddWorkTimeToWorkforcesAsync(Luna_interpreter.ManagerService.WorkTime worktime, Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.AddWorkTimeToWorkforcesAsync(worktime, workforces);
        }
        
        public Luna_interpreter.ManagerService.WorkTime[] ListDayOffFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.ListDayOffFromWorkforce(workforce);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTime[]> ListDayOffFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.ListDayOffFromWorkforceAsync(workforce);
        }
        
        public int CreateWorkTimeType(Luna_interpreter.ManagerService.WorkTimeType workTimeType) {
            return base.Channel.CreateWorkTimeType(workTimeType);
        }
        
        public System.Threading.Tasks.Task<int> CreateWorkTimeTypeAsync(Luna_interpreter.ManagerService.WorkTimeType workTimeType) {
            return base.Channel.CreateWorkTimeTypeAsync(workTimeType);
        }
        
        public Luna_interpreter.ManagerService.WorkTimeType GetWorkTimeType(int id) {
            return base.Channel.GetWorkTimeType(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTimeType> GetWorkTimeTypeAsync(int id) {
            return base.Channel.GetWorkTimeTypeAsync(id);
        }
        
        public void DeleteWorkTimeType(int id) {
            base.Channel.DeleteWorkTimeType(id);
        }
        
        public System.Threading.Tasks.Task DeleteWorkTimeTypeAsync(int id) {
            return base.Channel.DeleteWorkTimeTypeAsync(id);
        }
        
        public Luna_interpreter.ManagerService.WorkTimeType[] ListWorkTimeTypes() {
            return base.Channel.ListWorkTimeTypes();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTimeType[]> ListWorkTimeTypesAsync() {
            return base.Channel.ListWorkTimeTypesAsync();
        }
        
        public Luna_interpreter.ManagerService.WorkTimeType[] SearchWorkTimeTypes(string searchTerm) {
            return base.Channel.SearchWorkTimeTypes(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTimeType[]> SearchWorkTimeTypesAsync(string searchTerm) {
            return base.Channel.SearchWorkTimeTypesAsync(searchTerm);
        }
        
        public void UpdateWorkTimeType(Luna_interpreter.ManagerService.WorkTimeType workTimeType) {
            base.Channel.UpdateWorkTimeType(workTimeType);
        }
        
        public System.Threading.Tasks.Task UpdateWorkTimeTypeAsync(Luna_interpreter.ManagerService.WorkTimeType workTimeType) {
            return base.Channel.UpdateWorkTimeTypeAsync(workTimeType);
        }
        
        public Luna_interpreter.ManagerService.ShiftTemplate[] ListShiftTemplates() {
            return base.Channel.ListShiftTemplates();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ShiftTemplate[]> ListShiftTemplatesAsync() {
            return base.Channel.ListShiftTemplatesAsync();
        }
        
        public Luna_interpreter.ManagerService.ShiftTemplate[] SearchShiftTemplates(string searchTerm) {
            return base.Channel.SearchShiftTemplates(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ShiftTemplate[]> SearchShiftTemplatesAsync(string searchTerm) {
            return base.Channel.SearchShiftTemplatesAsync(searchTerm);
        }
        
        public int CreateSkill(Luna_interpreter.ManagerService.Skill skill) {
            return base.Channel.CreateSkill(skill);
        }
        
        public System.Threading.Tasks.Task<int> CreateSkillAsync(Luna_interpreter.ManagerService.Skill skill) {
            return base.Channel.CreateSkillAsync(skill);
        }
        
        public Luna_interpreter.ManagerService.Skill GetSkill(int id) {
            return base.Channel.GetSkill(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Skill> GetSkillAsync(int id) {
            return base.Channel.GetSkillAsync(id);
        }
        
        public Luna_interpreter.ManagerService.Skill[] ListSkills() {
            return base.Channel.ListSkills();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Skill[]> ListSkillsAsync() {
            return base.Channel.ListSkillsAsync();
        }
        
        public void DeleteSkill(int id) {
            base.Channel.DeleteSkill(id);
        }
        
        public System.Threading.Tasks.Task DeleteSkillAsync(int id) {
            return base.Channel.DeleteSkillAsync(id);
        }
        
        public Luna_interpreter.ManagerService.Skill[] SearchSkill(string searchTerm) {
            return base.Channel.SearchSkill(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Skill[]> SearchSkillAsync(string searchTerm) {
            return base.Channel.SearchSkillAsync(searchTerm);
        }
        
        public void UpdateSkill(Luna_interpreter.ManagerService.Skill skill) {
            base.Channel.UpdateSkill(skill);
        }
        
        public System.Threading.Tasks.Task UpdateSkillAsync(Luna_interpreter.ManagerService.Skill skill) {
            return base.Channel.UpdateSkillAsync(skill);
        }
        
        public int CreateSkillGroup(Luna_interpreter.ManagerService.SkillGroup skillGroup) {
            return base.Channel.CreateSkillGroup(skillGroup);
        }
        
        public System.Threading.Tasks.Task<int> CreateSkillGroupAsync(Luna_interpreter.ManagerService.SkillGroup skillGroup) {
            return base.Channel.CreateSkillGroupAsync(skillGroup);
        }
        
        public Luna_interpreter.ManagerService.SkillGroup GetSkillGroup(int id) {
            return base.Channel.GetSkillGroup(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.SkillGroup> GetSkillGroupAsync(int id) {
            return base.Channel.GetSkillGroupAsync(id);
        }
        
        public void UpdateSkillGroup(Luna_interpreter.ManagerService.SkillGroup skillGroup) {
            base.Channel.UpdateSkillGroup(skillGroup);
        }
        
        public System.Threading.Tasks.Task UpdateSkillGroupAsync(Luna_interpreter.ManagerService.SkillGroup skillGroup) {
            return base.Channel.UpdateSkillGroupAsync(skillGroup);
        }
        
        public void DeleteSkillGroup(int id) {
            base.Channel.DeleteSkillGroup(id);
        }
        
        public System.Threading.Tasks.Task DeleteSkillGroupAsync(int id) {
            return base.Channel.DeleteSkillGroupAsync(id);
        }
        
        public Luna_interpreter.ManagerService.SkillGroup[] ListSkillGroups() {
            return base.Channel.ListSkillGroups();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.SkillGroup[]> ListSkillGroupsAsync() {
            return base.Channel.ListSkillGroupsAsync();
        }
        
        public Luna_interpreter.ManagerService.SkillGroup[] SearchSkillGroup(string searchTerm) {
            return base.Channel.SearchSkillGroup(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.SkillGroup[]> SearchSkillGroupAsync(string searchTerm) {
            return base.Channel.SearchSkillGroupAsync(searchTerm);
        }
        
        public Luna_interpreter.ManagerService.SkillGroup[] GetContainedSkillGroups(Luna_interpreter.ManagerService.SkillGroup container) {
            return base.Channel.GetContainedSkillGroups(container);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.SkillGroup[]> GetContainedSkillGroupsAsync(Luna_interpreter.ManagerService.SkillGroup container) {
            return base.Channel.GetContainedSkillGroupsAsync(container);
        }
        
        public Luna_interpreter.ManagerService.SkillGroup[] GetContainerSkillGroups(Luna_interpreter.ManagerService.SkillGroup contained) {
            return base.Channel.GetContainerSkillGroups(contained);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.SkillGroup[]> GetContainerSkillGroupsAsync(Luna_interpreter.ManagerService.SkillGroup contained) {
            return base.Channel.GetContainerSkillGroupsAsync(contained);
        }
        
        public void AddSkillGroupToSkillGroup(Luna_interpreter.ManagerService.SkillGroup container, Luna_interpreter.ManagerService.SkillGroup contained) {
            base.Channel.AddSkillGroupToSkillGroup(container, contained);
        }
        
        public System.Threading.Tasks.Task AddSkillGroupToSkillGroupAsync(Luna_interpreter.ManagerService.SkillGroup container, Luna_interpreter.ManagerService.SkillGroup contained) {
            return base.Channel.AddSkillGroupToSkillGroupAsync(container, contained);
        }
        
        public void RemoveSkillGroupFromSkillGroup(Luna_interpreter.ManagerService.SkillGroup container, Luna_interpreter.ManagerService.SkillGroup contained) {
            base.Channel.RemoveSkillGroupFromSkillGroup(container, contained);
        }
        
        public System.Threading.Tasks.Task RemoveSkillGroupFromSkillGroupAsync(Luna_interpreter.ManagerService.SkillGroup container, Luna_interpreter.ManagerService.SkillGroup contained) {
            return base.Channel.RemoveSkillGroupFromSkillGroupAsync(container, contained);
        }
        
        public void AddSkillToSkillGroup(Luna_interpreter.ManagerService.Skill skill, Luna_interpreter.ManagerService.SkillGroup skillGroup) {
            base.Channel.AddSkillToSkillGroup(skill, skillGroup);
        }
        
        public System.Threading.Tasks.Task AddSkillToSkillGroupAsync(Luna_interpreter.ManagerService.Skill skill, Luna_interpreter.ManagerService.SkillGroup skillGroup) {
            return base.Channel.AddSkillToSkillGroupAsync(skill, skillGroup);
        }
        
        public Luna_interpreter.ManagerService.Skill[] GetSkillsFromSkillGroup(Luna_interpreter.ManagerService.SkillGroup skillGroup) {
            return base.Channel.GetSkillsFromSkillGroup(skillGroup);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Skill[]> GetSkillsFromSkillGroupAsync(Luna_interpreter.ManagerService.SkillGroup skillGroup) {
            return base.Channel.GetSkillsFromSkillGroupAsync(skillGroup);
        }
        
        public void OverwriteSkillGroupSkills(int skillGroupId, int[] skillIds) {
            base.Channel.OverwriteSkillGroupSkills(skillGroupId, skillIds);
        }
        
        public System.Threading.Tasks.Task OverwriteSkillGroupSkillsAsync(int skillGroupId, int[] skillIds) {
            return base.Channel.OverwriteSkillGroupSkillsAsync(skillGroupId, skillIds);
        }
        
        public Luna_interpreter.ManagerService.LoginData GetCredentials() {
            return base.Channel.GetCredentials();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.LoginData> GetCredentialsAsync() {
            return base.Channel.GetCredentialsAsync();
        }
        
        public int CreateWorkForce(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.CreateWorkForce(workforce);
        }
        
        public System.Threading.Tasks.Task<int> CreateWorkForceAsync(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.CreateWorkForceAsync(workforce);
        }
        
        public Luna_interpreter.ManagerService.Workforce GetWorkforce(int id) {
            return base.Channel.GetWorkforce(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Workforce> GetWorkforceAsync(int id) {
            return base.Channel.GetWorkforceAsync(id);
        }
        
        public void UpdateWorkforce(Luna_interpreter.ManagerService.Workforce workforce) {
            base.Channel.UpdateWorkforce(workforce);
        }
        
        public System.Threading.Tasks.Task UpdateWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.UpdateWorkforceAsync(workforce);
        }
        
        public void DeleteWorkforce(int id) {
            base.Channel.DeleteWorkforce(id);
        }
        
        public System.Threading.Tasks.Task DeleteWorkforceAsync(int id) {
            return base.Channel.DeleteWorkforceAsync(id);
        }
        
        public Luna_interpreter.ManagerService.Workforce[] SearchWorkforce(string searchTerm) {
            return base.Channel.SearchWorkforce(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Workforce[]> SearchWorkforceAsync(string searchTerm) {
            return base.Channel.SearchWorkforceAsync(searchTerm);
        }
        
        public Luna_interpreter.ManagerService.Workforce[] ListWorkforces() {
            return base.Channel.ListWorkforces();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Workforce[]> ListWorkforcesAsync() {
            return base.Channel.ListWorkforcesAsync();
        }
        
        public void AddSkillToWorkforce(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Skill skill) {
            base.Channel.AddSkillToWorkforce(workforce, skill);
        }
        
        public System.Threading.Tasks.Task AddSkillToWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Skill skill) {
            return base.Channel.AddSkillToWorkforceAsync(workforce, skill);
        }
        
        public void RemoveSkillFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Skill skill) {
            base.Channel.RemoveSkillFromWorkforce(workforce, skill);
        }
        
        public System.Threading.Tasks.Task RemoveSkillFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Skill skill) {
            return base.Channel.RemoveSkillFromWorkforceAsync(workforce, skill);
        }
        
        public void OverwriteWorkforceSkills(int workforceId, int[] skillIds) {
            base.Channel.OverwriteWorkforceSkills(workforceId, skillIds);
        }
        
        public System.Threading.Tasks.Task OverwriteWorkforceSkillsAsync(int workforceId, int[] skillIds) {
            return base.Channel.OverwriteWorkforceSkillsAsync(workforceId, skillIds);
        }
        
        public Luna_interpreter.ManagerService.Skill[] GetSkillsFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.GetSkillsFromWorkforce(workforce);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Skill[]> GetSkillsFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.GetSkillsFromWorkforceAsync(workforce);
        }
        
        public int GetWorkforceId() {
            return base.Channel.GetWorkforceId();
        }
        
        public System.Threading.Tasks.Task<int> GetWorkforceIdAsync() {
            return base.Channel.GetWorkforceIdAsync();
        }
        
        public void ChangePassword(string oldPassword, string newPassword) {
            base.Channel.ChangePassword(oldPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task ChangePasswordAsync(string oldPassword, string newPassword) {
            return base.Channel.ChangePasswordAsync(oldPassword, newPassword);
        }
        
        public Luna_interpreter.ManagerService.Schedule[] GetSchedulesFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.GetSchedulesFromWorkforce(workforce);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Schedule[]> GetSchedulesFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.GetSchedulesFromWorkforceAsync(workforce);
        }
        
        public void AddScheduleToWorkforce(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Schedule schedule) {
            base.Channel.AddScheduleToWorkforce(workforce, schedule);
        }
        
        public System.Threading.Tasks.Task AddScheduleToWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Schedule schedule) {
            return base.Channel.AddScheduleToWorkforceAsync(workforce, schedule);
        }
        
        public void RemoveScheduleFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Schedule schedule) {
            base.Channel.RemoveScheduleFromWorkforce(workforce, schedule);
        }
        
        public System.Threading.Tasks.Task RemoveScheduleFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.Schedule schedule) {
            return base.Channel.RemoveScheduleFromWorkforceAsync(workforce, schedule);
        }
        
        public void UpdateDynamicWorkforceGroup(Luna_interpreter.ManagerService.DynamicWorkforceGroup wfGroup) {
            base.Channel.UpdateDynamicWorkforceGroup(wfGroup);
        }
        
        public System.Threading.Tasks.Task UpdateDynamicWorkforceGroupAsync(Luna_interpreter.ManagerService.DynamicWorkforceGroup wfGroup) {
            return base.Channel.UpdateDynamicWorkforceGroupAsync(wfGroup);
        }
        
        public int CreatePredefinedWorkfoceGroup(Luna_interpreter.ManagerService.PredefinedWorkforceGroup WorkforceGroup) {
            return base.Channel.CreatePredefinedWorkfoceGroup(WorkforceGroup);
        }
        
        public System.Threading.Tasks.Task<int> CreatePredefinedWorkfoceGroupAsync(Luna_interpreter.ManagerService.PredefinedWorkforceGroup WorkforceGroup) {
            return base.Channel.CreatePredefinedWorkfoceGroupAsync(WorkforceGroup);
        }
        
        public int CreateDynamicWorkfoceGroup(Luna_interpreter.ManagerService.DynamicWorkforceGroup WorkforceGroup) {
            return base.Channel.CreateDynamicWorkfoceGroup(WorkforceGroup);
        }
        
        public System.Threading.Tasks.Task<int> CreateDynamicWorkfoceGroupAsync(Luna_interpreter.ManagerService.DynamicWorkforceGroup WorkforceGroup) {
            return base.Channel.CreateDynamicWorkfoceGroupAsync(WorkforceGroup);
        }
        
        public Luna_interpreter.ManagerService.WorkforceGroup GetWorkforceGroup(int id) {
            return base.Channel.GetWorkforceGroup(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkforceGroup> GetWorkforceGroupAsync(int id) {
            return base.Channel.GetWorkforceGroupAsync(id);
        }
        
        public Luna_interpreter.ManagerService.DynamicWorkforceGroup GetDynamicWorkforceGroup(int id) {
            return base.Channel.GetDynamicWorkforceGroup(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DynamicWorkforceGroup> GetDynamicWorkforceGroupAsync(int id) {
            return base.Channel.GetDynamicWorkforceGroupAsync(id);
        }
        
        public string GetWorkforceGroupType(int id) {
            return base.Channel.GetWorkforceGroupType(id);
        }
        
        public System.Threading.Tasks.Task<string> GetWorkforceGroupTypeAsync(int id) {
            return base.Channel.GetWorkforceGroupTypeAsync(id);
        }
        
        public void UpdateWorkforceGroup(Luna_interpreter.ManagerService.WorkforceGroup WorkforceGroup) {
            base.Channel.UpdateWorkforceGroup(WorkforceGroup);
        }
        
        public System.Threading.Tasks.Task UpdateWorkforceGroupAsync(Luna_interpreter.ManagerService.WorkforceGroup WorkforceGroup) {
            return base.Channel.UpdateWorkforceGroupAsync(WorkforceGroup);
        }
        
        public void DeleteWorkforceGroup(int id) {
            base.Channel.DeleteWorkforceGroup(id);
        }
        
        public System.Threading.Tasks.Task DeleteWorkforceGroupAsync(int id) {
            return base.Channel.DeleteWorkforceGroupAsync(id);
        }
        
        public Luna_interpreter.ManagerService.WorkforceGroup[] ListWorkforceGroups() {
            return base.Channel.ListWorkforceGroups();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkforceGroup[]> ListWorkforceGroupsAsync() {
            return base.Channel.ListWorkforceGroupsAsync();
        }
        
        public Luna_interpreter.ManagerService.WorkforceGroup[] SearchWorkforceGroups(string searchTerm) {
            return base.Channel.SearchWorkforceGroups(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkforceGroup[]> SearchWorkforceGroupsAsync(string searchTerm) {
            return base.Channel.SearchWorkforceGroupsAsync(searchTerm);
        }
        
        public void AddWorkforceGroupToGroup(Luna_interpreter.ManagerService.WorkforceGroup childWorkforceGroup, Luna_interpreter.ManagerService.WorkforceGroup parentWorkforceGroup) {
            base.Channel.AddWorkforceGroupToGroup(childWorkforceGroup, parentWorkforceGroup);
        }
        
        public System.Threading.Tasks.Task AddWorkforceGroupToGroupAsync(Luna_interpreter.ManagerService.WorkforceGroup childWorkforceGroup, Luna_interpreter.ManagerService.WorkforceGroup parentWorkforceGroup) {
            return base.Channel.AddWorkforceGroupToGroupAsync(childWorkforceGroup, parentWorkforceGroup);
        }
        
        public Luna_interpreter.ManagerService.WorkforceGroup[] GetContainedWorkforceGroups(int id) {
            return base.Channel.GetContainedWorkforceGroups(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkforceGroup[]> GetContainedWorkforceGroupsAsync(int id) {
            return base.Channel.GetContainedWorkforceGroupsAsync(id);
        }
        
        public Luna_interpreter.ManagerService.WorkforceGroup[] GetContainersWorkforceGroups(int id) {
            return base.Channel.GetContainersWorkforceGroups(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkforceGroup[]> GetContainersWorkforceGroupsAsync(int id) {
            return base.Channel.GetContainersWorkforceGroupsAsync(id);
        }
        
        public void RemoveWorkforceGroupFromGroup(Luna_interpreter.ManagerService.WorkforceGroup toRemoveWorkforceGroup, Luna_interpreter.ManagerService.WorkforceGroup parentWorkforceGroup) {
            base.Channel.RemoveWorkforceGroupFromGroup(toRemoveWorkforceGroup, parentWorkforceGroup);
        }
        
        public System.Threading.Tasks.Task RemoveWorkforceGroupFromGroupAsync(Luna_interpreter.ManagerService.WorkforceGroup toRemoveWorkforceGroup, Luna_interpreter.ManagerService.WorkforceGroup parentWorkforceGroup) {
            return base.Channel.RemoveWorkforceGroupFromGroupAsync(toRemoveWorkforceGroup, parentWorkforceGroup);
        }
        
        public void AddWorkforceToPredefinedWorkforceGroup(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.PredefinedWorkforceGroup WorkforceGroup) {
            base.Channel.AddWorkforceToPredefinedWorkforceGroup(workforce, WorkforceGroup);
        }
        
        public System.Threading.Tasks.Task AddWorkforceToPredefinedWorkforceGroupAsync(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.PredefinedWorkforceGroup WorkforceGroup) {
            return base.Channel.AddWorkforceToPredefinedWorkforceGroupAsync(workforce, WorkforceGroup);
        }
        
        public void RemoveEquipmentFromPredefinedWorkforceGroup(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.PredefinedWorkforceGroup WorkforceGroup) {
            base.Channel.RemoveEquipmentFromPredefinedWorkforceGroup(workforce, WorkforceGroup);
        }
        
        public System.Threading.Tasks.Task RemoveEquipmentFromPredefinedWorkforceGroupAsync(Luna_interpreter.ManagerService.Workforce workforce, Luna_interpreter.ManagerService.PredefinedWorkforceGroup WorkforceGroup) {
            return base.Channel.RemoveEquipmentFromPredefinedWorkforceGroupAsync(workforce, WorkforceGroup);
        }
        
        public Luna_interpreter.ManagerService.Workforce[] GetPredefinedWorkforceGroupContent(int id) {
            return base.Channel.GetPredefinedWorkforceGroupContent(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Workforce[]> GetPredefinedWorkforceGroupContentAsync(int id) {
            return base.Channel.GetPredefinedWorkforceGroupContentAsync(id);
        }
        
        public void OverwritePredefinedWorkforceGroupWorkforces(int WorkforceGroupId, int[] workforceIds) {
            base.Channel.OverwritePredefinedWorkforceGroupWorkforces(WorkforceGroupId, workforceIds);
        }
        
        public System.Threading.Tasks.Task OverwritePredefinedWorkforceGroupWorkforcesAsync(int WorkforceGroupId, int[] workforceIds) {
            return base.Channel.OverwritePredefinedWorkforceGroupWorkforcesAsync(WorkforceGroupId, workforceIds);
        }
        
        public int CreateWorkPlace(Luna_interpreter.ManagerService.WorkPlace workPlace) {
            return base.Channel.CreateWorkPlace(workPlace);
        }
        
        public System.Threading.Tasks.Task<int> CreateWorkPlaceAsync(Luna_interpreter.ManagerService.WorkPlace workPlace) {
            return base.Channel.CreateWorkPlaceAsync(workPlace);
        }
        
        public Luna_interpreter.ManagerService.WorkPlace GetWorkPlace(int id) {
            return base.Channel.GetWorkPlace(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkPlace> GetWorkPlaceAsync(int id) {
            return base.Channel.GetWorkPlaceAsync(id);
        }
        
        public void DeleteWorkPlace(int id) {
            base.Channel.DeleteWorkPlace(id);
        }
        
        public System.Threading.Tasks.Task DeleteWorkPlaceAsync(int id) {
            return base.Channel.DeleteWorkPlaceAsync(id);
        }
        
        public Luna_interpreter.ManagerService.WorkPlace[] ListWorkPlaces() {
            return base.Channel.ListWorkPlaces();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkPlace[]> ListWorkPlacesAsync() {
            return base.Channel.ListWorkPlacesAsync();
        }
        
        public Luna_interpreter.ManagerService.WorkPlace[] SearchWorkPlaces(string searchTerm) {
            return base.Channel.SearchWorkPlaces(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkPlace[]> SearchWorkPlacesAsync(string searchTerm) {
            return base.Channel.SearchWorkPlacesAsync(searchTerm);
        }
        
        public void UpdateWorkPlace(Luna_interpreter.ManagerService.WorkPlace workplace) {
            base.Channel.UpdateWorkPlace(workplace);
        }
        
        public System.Threading.Tasks.Task UpdateWorkPlaceAsync(Luna_interpreter.ManagerService.WorkPlace workplace) {
            return base.Channel.UpdateWorkPlaceAsync(workplace);
        }
        
        public int CreateWorkTime(Luna_interpreter.ManagerService.WorkTime workTime) {
            return base.Channel.CreateWorkTime(workTime);
        }
        
        public System.Threading.Tasks.Task<int> CreateWorkTimeAsync(Luna_interpreter.ManagerService.WorkTime workTime) {
            return base.Channel.CreateWorkTimeAsync(workTime);
        }
        
        public Luna_interpreter.ManagerService.WorkTime GetWorkTime(int id) {
            return base.Channel.GetWorkTime(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.WorkTime> GetWorkTimeAsync(int id) {
            return base.Channel.GetWorkTimeAsync(id);
        }
        
        public void DeleteWorkTime(int id) {
            base.Channel.DeleteWorkTime(id);
        }
        
        public System.Threading.Tasks.Task DeleteWorkTimeAsync(int id) {
            return base.Channel.DeleteWorkTimeAsync(id);
        }
        
        public void DeletePrediction(int usertaskid, int workforceid) {
            base.Channel.DeletePrediction(usertaskid, workforceid);
        }
        
        public System.Threading.Tasks.Task DeletePredictionAsync(int usertaskid, int workforceid) {
            return base.Channel.DeletePredictionAsync(usertaskid, workforceid);
        }
        
        public int CreatePropertyTypeToComponentCategory(Luna_interpreter.ManagerService.PropertyType propertyType, Luna_interpreter.ManagerService.ComponentCategory componentcategory) {
            return base.Channel.CreatePropertyTypeToComponentCategory(propertyType, componentcategory);
        }
        
        public System.Threading.Tasks.Task<int> CreatePropertyTypeToComponentCategoryAsync(Luna_interpreter.ManagerService.PropertyType propertyType, Luna_interpreter.ManagerService.ComponentCategory componentcategory) {
            return base.Channel.CreatePropertyTypeToComponentCategoryAsync(propertyType, componentcategory);
        }
        
        public int CreatePropertyTypeToMaterialCategory(Luna_interpreter.ManagerService.PropertyType propertyType, Luna_interpreter.ManagerService.MaterialCategory materialCategory) {
            return base.Channel.CreatePropertyTypeToMaterialCategory(propertyType, materialCategory);
        }
        
        public System.Threading.Tasks.Task<int> CreatePropertyTypeToMaterialCategoryAsync(Luna_interpreter.ManagerService.PropertyType propertyType, Luna_interpreter.ManagerService.MaterialCategory materialCategory) {
            return base.Channel.CreatePropertyTypeToMaterialCategoryAsync(propertyType, materialCategory);
        }
        
        public Luna_interpreter.ManagerService.PropertyType GetPropertyType(int id) {
            return base.Channel.GetPropertyType(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyType> GetPropertyTypeAsync(int id) {
            return base.Channel.GetPropertyTypeAsync(id);
        }
        
        public void UpdatePropertyType(Luna_interpreter.ManagerService.PropertyType PropertyType) {
            base.Channel.UpdatePropertyType(PropertyType);
        }
        
        public System.Threading.Tasks.Task UpdatePropertyTypeAsync(Luna_interpreter.ManagerService.PropertyType PropertyType) {
            return base.Channel.UpdatePropertyTypeAsync(PropertyType);
        }
        
        public void DeletePropertyType(int id) {
            base.Channel.DeletePropertyType(id);
        }
        
        public System.Threading.Tasks.Task DeletePropertyTypeAsync(int id) {
            return base.Channel.DeletePropertyTypeAsync(id);
        }
        
        public Luna_interpreter.ManagerService.PropertyType[] ListPropertyTypes() {
            return base.Channel.ListPropertyTypes();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyType[]> ListPropertyTypesAsync() {
            return base.Channel.ListPropertyTypesAsync();
        }
        
        public Luna_interpreter.ManagerService.PropertyType[] SearchPropertyTypes(string searchTerm) {
            return base.Channel.SearchPropertyTypes(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyType[]> SearchPropertyTypesAsync(string searchTerm) {
            return base.Channel.SearchPropertyTypesAsync(searchTerm);
        }
        
        public Luna_interpreter.ManagerService.PropertyType[] ListPropertyTypesFromComponentCategory(Luna_interpreter.ManagerService.ComponentCategory componentCategory) {
            return base.Channel.ListPropertyTypesFromComponentCategory(componentCategory);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyType[]> ListPropertyTypesFromComponentCategoryAsync(Luna_interpreter.ManagerService.ComponentCategory componentCategory) {
            return base.Channel.ListPropertyTypesFromComponentCategoryAsync(componentCategory);
        }
        
        public Luna_interpreter.ManagerService.PropertyType[] ListPropertyTypesFromMaterialCategory(Luna_interpreter.ManagerService.MaterialCategory materialCategory) {
            return base.Channel.ListPropertyTypesFromMaterialCategory(materialCategory);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyType[]> ListPropertyTypesFromMaterialCategoryAsync(Luna_interpreter.ManagerService.MaterialCategory materialCategory) {
            return base.Channel.ListPropertyTypesFromMaterialCategoryAsync(materialCategory);
        }
        
        public int CreatePropertyValue(Luna_interpreter.ManagerService.PropertyValue propertyValue) {
            return base.Channel.CreatePropertyValue(propertyValue);
        }
        
        public System.Threading.Tasks.Task<int> CreatePropertyValueAsync(Luna_interpreter.ManagerService.PropertyValue propertyValue) {
            return base.Channel.CreatePropertyValueAsync(propertyValue);
        }
        
        public Luna_interpreter.ManagerService.PropertyValue GetPropertyValue(int id) {
            return base.Channel.GetPropertyValue(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyValue> GetPropertyValueAsync(int id) {
            return base.Channel.GetPropertyValueAsync(id);
        }
        
        public void UpdatePropertyValue(Luna_interpreter.ManagerService.PropertyValue PropertyValue) {
            base.Channel.UpdatePropertyValue(PropertyValue);
        }
        
        public System.Threading.Tasks.Task UpdatePropertyValueAsync(Luna_interpreter.ManagerService.PropertyValue PropertyValue) {
            return base.Channel.UpdatePropertyValueAsync(PropertyValue);
        }
        
        public void DeletePropertyValue(int id) {
            base.Channel.DeletePropertyValue(id);
        }
        
        public System.Threading.Tasks.Task DeletePropertyValueAsync(int id) {
            return base.Channel.DeletePropertyValueAsync(id);
        }
        
        public Luna_interpreter.ManagerService.PropertyValue[] ListPropertyValues() {
            return base.Channel.ListPropertyValues();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyValue[]> ListPropertyValuesAsync() {
            return base.Channel.ListPropertyValuesAsync();
        }
        
        public int CreateProviderCompany(Luna_interpreter.ManagerService.ProviderCompany providerCompany) {
            return base.Channel.CreateProviderCompany(providerCompany);
        }
        
        public System.Threading.Tasks.Task<int> CreateProviderCompanyAsync(Luna_interpreter.ManagerService.ProviderCompany providerCompany) {
            return base.Channel.CreateProviderCompanyAsync(providerCompany);
        }
        
        public Luna_interpreter.ManagerService.ProviderCompany GetProviderCompany(int id) {
            return base.Channel.GetProviderCompany(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ProviderCompany> GetProviderCompanyAsync(int id) {
            return base.Channel.GetProviderCompanyAsync(id);
        }
        
        public void UpdateProviderCompany(Luna_interpreter.ManagerService.ProviderCompany providerCompany) {
            base.Channel.UpdateProviderCompany(providerCompany);
        }
        
        public System.Threading.Tasks.Task UpdateProviderCompanyAsync(Luna_interpreter.ManagerService.ProviderCompany providerCompany) {
            return base.Channel.UpdateProviderCompanyAsync(providerCompany);
        }
        
        public void DeleteProviderCompany(int id) {
            base.Channel.DeleteProviderCompany(id);
        }
        
        public System.Threading.Tasks.Task DeleteProviderCompanyAsync(int id) {
            return base.Channel.DeleteProviderCompanyAsync(id);
        }
        
        public Luna_interpreter.ManagerService.ProviderCompany[] ListProviderCompanies() {
            return base.Channel.ListProviderCompanies();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ProviderCompany[]> ListProviderCompaniesAsync() {
            return base.Channel.ListProviderCompaniesAsync();
        }
        
        public Luna_interpreter.ManagerService.ProviderCompany[] SearchProviderCompanies(string searchTerm) {
            return base.Channel.SearchProviderCompanies(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ProviderCompany[]> SearchProviderCompaniesAsync(string searchTerm) {
            return base.Channel.SearchProviderCompaniesAsync(searchTerm);
        }
        
        public void AddCompanyContactToProviderCompany(Luna_interpreter.ManagerService.ProviderCompany providerCompany, Luna_interpreter.ManagerService.CompanyContact companyContact) {
            base.Channel.AddCompanyContactToProviderCompany(providerCompany, companyContact);
        }
        
        public System.Threading.Tasks.Task AddCompanyContactToProviderCompanyAsync(Luna_interpreter.ManagerService.ProviderCompany providerCompany, Luna_interpreter.ManagerService.CompanyContact companyContact) {
            return base.Channel.AddCompanyContactToProviderCompanyAsync(providerCompany, companyContact);
        }
        
        public Luna_interpreter.ManagerService.CompanyContact[] GetCompanyContactFromProviderCompany(Luna_interpreter.ManagerService.ProviderCompany providerCompany) {
            return base.Channel.GetCompanyContactFromProviderCompany(providerCompany);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.CompanyContact[]> GetCompanyContactFromProviderCompanyAsync(Luna_interpreter.ManagerService.ProviderCompany providerCompany) {
            return base.Channel.GetCompanyContactFromProviderCompanyAsync(providerCompany);
        }
        
        public void RemoveCompanyContactFromProviderCompany(Luna_interpreter.ManagerService.ProviderCompany providerCompany, Luna_interpreter.ManagerService.CompanyContact companyContact) {
            base.Channel.RemoveCompanyContactFromProviderCompany(providerCompany, companyContact);
        }
        
        public System.Threading.Tasks.Task RemoveCompanyContactFromProviderCompanyAsync(Luna_interpreter.ManagerService.ProviderCompany providerCompany, Luna_interpreter.ManagerService.CompanyContact companyContact) {
            return base.Channel.RemoveCompanyContactFromProviderCompanyAsync(providerCompany, companyContact);
        }
        
        public Luna_interpreter.ManagerService.Reservation[] ListReservationfromProcess(int processId) {
            return base.Channel.ListReservationfromProcess(processId);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Reservation[]> ListReservationfromProcessAsync(int processId) {
            return base.Channel.ListReservationfromProcessAsync(processId);
        }
        
        public int CreateRole(Luna_interpreter.ManagerService.Role role) {
            return base.Channel.CreateRole(role);
        }
        
        public System.Threading.Tasks.Task<int> CreateRoleAsync(Luna_interpreter.ManagerService.Role role) {
            return base.Channel.CreateRoleAsync(role);
        }
        
        public Luna_interpreter.ManagerService.Role GetRole(int id) {
            return base.Channel.GetRole(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Role> GetRoleAsync(int id) {
            return base.Channel.GetRoleAsync(id);
        }
        
        public void UpdateRole(Luna_interpreter.ManagerService.Role role) {
            base.Channel.UpdateRole(role);
        }
        
        public System.Threading.Tasks.Task UpdateRoleAsync(Luna_interpreter.ManagerService.Role role) {
            return base.Channel.UpdateRoleAsync(role);
        }
        
        public void DeleteRole(int id) {
            base.Channel.DeleteRole(id);
        }
        
        public System.Threading.Tasks.Task DeleteRoleAsync(int id) {
            return base.Channel.DeleteRoleAsync(id);
        }
        
        public Luna_interpreter.ManagerService.Role[] ListRoles() {
            return base.Channel.ListRoles();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Role[]> ListRolesAsync() {
            return base.Channel.ListRolesAsync();
        }
        
        public Luna_interpreter.ManagerService.Role[] SearchRoles(string searchTerm) {
            return base.Channel.SearchRoles(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Role[]> SearchRolesAsync(string searchTerm) {
            return base.Channel.SearchRolesAsync(searchTerm);
        }
        
        public void AddPermissionToRole(Luna_interpreter.ManagerService.Role role, Luna_interpreter.ManagerService.Permission permission) {
            base.Channel.AddPermissionToRole(role, permission);
        }
        
        public System.Threading.Tasks.Task AddPermissionToRoleAsync(Luna_interpreter.ManagerService.Role role, Luna_interpreter.ManagerService.Permission permission) {
            return base.Channel.AddPermissionToRoleAsync(role, permission);
        }
        
        public void RemovePermissionFromRole(Luna_interpreter.ManagerService.Role role, Luna_interpreter.ManagerService.Permission permission) {
            base.Channel.RemovePermissionFromRole(role, permission);
        }
        
        public System.Threading.Tasks.Task RemovePermissionFromRoleAsync(Luna_interpreter.ManagerService.Role role, Luna_interpreter.ManagerService.Permission permission) {
            return base.Channel.RemovePermissionFromRoleAsync(role, permission);
        }
        
        public Luna_interpreter.ManagerService.Permission[] GetPermissionsFromRole(Luna_interpreter.ManagerService.Role role) {
            return base.Channel.GetPermissionsFromRole(role);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Permission[]> GetPermissionsFromRoleAsync(Luna_interpreter.ManagerService.Role role) {
            return base.Channel.GetPermissionsFromRoleAsync(role);
        }
        
        public Luna_interpreter.ManagerService.Permission[] GetPermissionsFromListOfRoles(int[] roleIds) {
            return base.Channel.GetPermissionsFromListOfRoles(roleIds);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Permission[]> GetPermissionsFromListOfRolesAsync(int[] roleIds) {
            return base.Channel.GetPermissionsFromListOfRolesAsync(roleIds);
        }
        
        public Luna_interpreter.ManagerService.Role[] GetRolesFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.GetRolesFromWorkforce(workforce);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Role[]> GetRolesFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.GetRolesFromWorkforceAsync(workforce);
        }
        
        public void AddRoleToWorkforce(Luna_interpreter.ManagerService.Role role, Luna_interpreter.ManagerService.Workforce workforce) {
            base.Channel.AddRoleToWorkforce(role, workforce);
        }
        
        public System.Threading.Tasks.Task AddRoleToWorkforceAsync(Luna_interpreter.ManagerService.Role role, Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.AddRoleToWorkforceAsync(role, workforce);
        }
        
        public void RemoveWorkforceRoles(int id) {
            base.Channel.RemoveWorkforceRoles(id);
        }
        
        public System.Threading.Tasks.Task RemoveWorkforceRolesAsync(int id) {
            return base.Channel.RemoveWorkforceRolesAsync(id);
        }
        
        public int CreateSchedule(Luna_interpreter.ManagerService.Schedule schedule) {
            return base.Channel.CreateSchedule(schedule);
        }
        
        public System.Threading.Tasks.Task<int> CreateScheduleAsync(Luna_interpreter.ManagerService.Schedule schedule) {
            return base.Channel.CreateScheduleAsync(schedule);
        }
        
        public Luna_interpreter.ManagerService.Schedule GetSchedule(int id) {
            return base.Channel.GetSchedule(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Schedule> GetScheduleAsync(int id) {
            return base.Channel.GetScheduleAsync(id);
        }
        
        public void DeleteSchedule(int id) {
            base.Channel.DeleteSchedule(id);
        }
        
        public System.Threading.Tasks.Task DeleteScheduleAsync(int id) {
            return base.Channel.DeleteScheduleAsync(id);
        }
        
        public System.TimeSpan GetScheduleDuration(int id) {
            return base.Channel.GetScheduleDuration(id);
        }
        
        public System.Threading.Tasks.Task<System.TimeSpan> GetScheduleDurationAsync(int id) {
            return base.Channel.GetScheduleDurationAsync(id);
        }
        
        public Luna_interpreter.ManagerService.DateInterval[] GetIntersectSchedules(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetIntersectSchedules(workforces);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetIntersectSchedulesAsync(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetIntersectSchedulesAsync(workforces);
        }
        
        public Luna_interpreter.ManagerService.DateInterval[] GetUnionSchedules(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetUnionSchedules(workforces);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetUnionSchedulesAsync(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetUnionSchedulesAsync(workforces);
        }
        
        public Luna_interpreter.ManagerService.DateInterval[] GetComplementerSchedules(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetComplementerSchedules(workforces);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetComplementerSchedulesAsync(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetComplementerSchedulesAsync(workforces);
        }
        
        public void AddScheduleToWorkforces(Luna_interpreter.ManagerService.Schedule schedule, Luna_interpreter.ManagerService.Workforce[] workforces) {
            base.Channel.AddScheduleToWorkforces(schedule, workforces);
        }
        
        public System.Threading.Tasks.Task AddScheduleToWorkforcesAsync(Luna_interpreter.ManagerService.Schedule schedule, Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.AddScheduleToWorkforcesAsync(schedule, workforces);
        }
        
        public Luna_interpreter.ManagerService.DateResult[] GetNewUnionSchedules(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetNewUnionSchedules(workforces);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateResult[]> GetNewUnionSchedulesAsync(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetNewUnionSchedulesAsync(workforces);
        }
        
        public int CreateService(Luna_interpreter.ManagerService.Service service) {
            return base.Channel.CreateService(service);
        }
        
        public System.Threading.Tasks.Task<int> CreateServiceAsync(Luna_interpreter.ManagerService.Service service) {
            return base.Channel.CreateServiceAsync(service);
        }
        
        public Luna_interpreter.ManagerService.Service GetService(int id) {
            return base.Channel.GetService(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Service> GetServiceAsync(int id) {
            return base.Channel.GetServiceAsync(id);
        }
        
        public void UpdateService(Luna_interpreter.ManagerService.Service service) {
            base.Channel.UpdateService(service);
        }
        
        public System.Threading.Tasks.Task UpdateServiceAsync(Luna_interpreter.ManagerService.Service service) {
            return base.Channel.UpdateServiceAsync(service);
        }
        
        public void DeleteService(int id) {
            base.Channel.DeleteService(id);
        }
        
        public System.Threading.Tasks.Task DeleteServiceAsync(int id) {
            return base.Channel.DeleteServiceAsync(id);
        }
        
        public Luna_interpreter.ManagerService.Service[] ListServices() {
            return base.Channel.ListServices();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Service[]> ListServicesAsync() {
            return base.Channel.ListServicesAsync();
        }
        
        public Luna_interpreter.ManagerService.Service[] SearchServices(string searchTerm) {
            return base.Channel.SearchServices(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Service[]> SearchServicesAsync(string searchTerm) {
            return base.Channel.SearchServicesAsync(searchTerm);
        }
        
        public Luna_interpreter.ManagerService.Service[] GetServicesFromProviderCompany(int companyId) {
            return base.Channel.GetServicesFromProviderCompany(companyId);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Service[]> GetServicesFromProviderCompanyAsync(int companyId) {
            return base.Channel.GetServicesFromProviderCompanyAsync(companyId);
        }
        
        public int CreateServiceType(Luna_interpreter.ManagerService.ServiceType serviceType) {
            return base.Channel.CreateServiceType(serviceType);
        }
        
        public System.Threading.Tasks.Task<int> CreateServiceTypeAsync(Luna_interpreter.ManagerService.ServiceType serviceType) {
            return base.Channel.CreateServiceTypeAsync(serviceType);
        }
        
        public Luna_interpreter.ManagerService.ServiceType GetServiceType(int id) {
            return base.Channel.GetServiceType(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ServiceType> GetServiceTypeAsync(int id) {
            return base.Channel.GetServiceTypeAsync(id);
        }
        
        public void UpdateServiceType(Luna_interpreter.ManagerService.ServiceType serviceType) {
            base.Channel.UpdateServiceType(serviceType);
        }
        
        public System.Threading.Tasks.Task UpdateServiceTypeAsync(Luna_interpreter.ManagerService.ServiceType serviceType) {
            return base.Channel.UpdateServiceTypeAsync(serviceType);
        }
        
        public void DeleteServiceType(int id) {
            base.Channel.DeleteServiceType(id);
        }
        
        public System.Threading.Tasks.Task DeleteServiceTypeAsync(int id) {
            return base.Channel.DeleteServiceTypeAsync(id);
        }
        
        public Luna_interpreter.ManagerService.ServiceType[] ListServiceTypes() {
            return base.Channel.ListServiceTypes();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ServiceType[]> ListServiceTypesAsync() {
            return base.Channel.ListServiceTypesAsync();
        }
        
        public Luna_interpreter.ManagerService.ServiceType[] SearchServiceTypes(string searchTerm) {
            return base.Channel.SearchServiceTypes(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ServiceType[]> SearchServiceTypesAsync(string searchTerm) {
            return base.Channel.SearchServiceTypesAsync(searchTerm);
        }
        
        public int CreateShiftTemplate(Luna_interpreter.ManagerService.ShiftTemplate shiftTemplate) {
            return base.Channel.CreateShiftTemplate(shiftTemplate);
        }
        
        public System.Threading.Tasks.Task<int> CreateShiftTemplateAsync(Luna_interpreter.ManagerService.ShiftTemplate shiftTemplate) {
            return base.Channel.CreateShiftTemplateAsync(shiftTemplate);
        }
        
        public Luna_interpreter.ManagerService.ShiftTemplate GetShiftTemplate(int id) {
            return base.Channel.GetShiftTemplate(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ShiftTemplate> GetShiftTemplateAsync(int id) {
            return base.Channel.GetShiftTemplateAsync(id);
        }
        
        public void UpdateShiftTemplate(Luna_interpreter.ManagerService.ShiftTemplate shiftTemplate) {
            base.Channel.UpdateShiftTemplate(shiftTemplate);
        }
        
        public System.Threading.Tasks.Task UpdateShiftTemplateAsync(Luna_interpreter.ManagerService.ShiftTemplate shiftTemplate) {
            return base.Channel.UpdateShiftTemplateAsync(shiftTemplate);
        }
        
        public void DeleteShiftTemplate(int id) {
            base.Channel.DeleteShiftTemplate(id);
        }
        
        public System.Threading.Tasks.Task DeleteShiftTemplateAsync(int id) {
            return base.Channel.DeleteShiftTemplateAsync(id);
        }
        
        public void DeleteEquipmentGroup(int id) {
            base.Channel.DeleteEquipmentGroup(id);
        }
        
        public System.Threading.Tasks.Task DeleteEquipmentGroupAsync(int id) {
            return base.Channel.DeleteEquipmentGroupAsync(id);
        }
        
        public Luna_interpreter.ManagerService.EquipmentGroup[] ListEquipmentGroups() {
            return base.Channel.ListEquipmentGroups();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.EquipmentGroup[]> ListEquipmentGroupsAsync() {
            return base.Channel.ListEquipmentGroupsAsync();
        }
        
        public Luna_interpreter.ManagerService.EquipmentGroup[] SearchEquipmentGroups(string searchTerm) {
            return base.Channel.SearchEquipmentGroups(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.EquipmentGroup[]> SearchEquipmentGroupsAsync(string searchTerm) {
            return base.Channel.SearchEquipmentGroupsAsync(searchTerm);
        }
        
        public Luna_interpreter.ManagerService.DynamicEquipmentGroup GetDynamicEquipmentGroup(int id) {
            return base.Channel.GetDynamicEquipmentGroup(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DynamicEquipmentGroup> GetDynamicEquipmentGroupAsync(int id) {
            return base.Channel.GetDynamicEquipmentGroupAsync(id);
        }
        
        public string GetEquipmentGroupType(int id) {
            return base.Channel.GetEquipmentGroupType(id);
        }
        
        public System.Threading.Tasks.Task<string> GetEquipmentGroupTypeAsync(int id) {
            return base.Channel.GetEquipmentGroupTypeAsync(id);
        }
        
        public void UpdateDynamicEquipmentGroup(Luna_interpreter.ManagerService.DynamicEquipmentGroup equipmentGroup) {
            base.Channel.UpdateDynamicEquipmentGroup(equipmentGroup);
        }
        
        public System.Threading.Tasks.Task UpdateDynamicEquipmentGroupAsync(Luna_interpreter.ManagerService.DynamicEquipmentGroup equipmentGroup) {
            return base.Channel.UpdateDynamicEquipmentGroupAsync(equipmentGroup);
        }
        
        public void AddEquipmentGroupToGroup(Luna_interpreter.ManagerService.EquipmentGroup childEquipmentGroup, Luna_interpreter.ManagerService.EquipmentGroup parentEquipmentGroup) {
            base.Channel.AddEquipmentGroupToGroup(childEquipmentGroup, parentEquipmentGroup);
        }
        
        public System.Threading.Tasks.Task AddEquipmentGroupToGroupAsync(Luna_interpreter.ManagerService.EquipmentGroup childEquipmentGroup, Luna_interpreter.ManagerService.EquipmentGroup parentEquipmentGroup) {
            return base.Channel.AddEquipmentGroupToGroupAsync(childEquipmentGroup, parentEquipmentGroup);
        }
        
        public Luna_interpreter.ManagerService.EquipmentGroup[] GetContainedEquipmentGroups(int id) {
            return base.Channel.GetContainedEquipmentGroups(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.EquipmentGroup[]> GetContainedEquipmentGroupsAsync(int id) {
            return base.Channel.GetContainedEquipmentGroupsAsync(id);
        }
        
        public Luna_interpreter.ManagerService.EquipmentGroup[] GetContainersEquipmentGroups(int id) {
            return base.Channel.GetContainersEquipmentGroups(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.EquipmentGroup[]> GetContainersEquipmentGroupsAsync(int id) {
            return base.Channel.GetContainersEquipmentGroupsAsync(id);
        }
        
        public void RemoveEquipmentGroupFromGroup(Luna_interpreter.ManagerService.EquipmentGroup toRemoveEquipmentGroup, Luna_interpreter.ManagerService.EquipmentGroup parentEquipmentGroup) {
            base.Channel.RemoveEquipmentGroupFromGroup(toRemoveEquipmentGroup, parentEquipmentGroup);
        }
        
        public System.Threading.Tasks.Task RemoveEquipmentGroupFromGroupAsync(Luna_interpreter.ManagerService.EquipmentGroup toRemoveEquipmentGroup, Luna_interpreter.ManagerService.EquipmentGroup parentEquipmentGroup) {
            return base.Channel.RemoveEquipmentGroupFromGroupAsync(toRemoveEquipmentGroup, parentEquipmentGroup);
        }
        
        public void AddEquipmentToPredefinedEquipmentGroup(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.PredefinedEquipmentGroup equipmentGroup) {
            base.Channel.AddEquipmentToPredefinedEquipmentGroup(equipment, equipmentGroup);
        }
        
        public System.Threading.Tasks.Task AddEquipmentToPredefinedEquipmentGroupAsync(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.PredefinedEquipmentGroup equipmentGroup) {
            return base.Channel.AddEquipmentToPredefinedEquipmentGroupAsync(equipment, equipmentGroup);
        }
        
        public void RemoveEquipmentFromPredefinedEquipmentGroup(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.PredefinedEquipmentGroup equipmentGroup) {
            base.Channel.RemoveEquipmentFromPredefinedEquipmentGroup(equipment, equipmentGroup);
        }
        
        public System.Threading.Tasks.Task RemoveEquipmentFromPredefinedEquipmentGroupAsync(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.PredefinedEquipmentGroup equipmentGroup) {
            return base.Channel.RemoveEquipmentFromPredefinedEquipmentGroupAsync(equipment, equipmentGroup);
        }
        
        public Luna_interpreter.ManagerService.Equipment[] GetPredefinedEquipmentGroupContent(int id) {
            return base.Channel.GetPredefinedEquipmentGroupContent(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Equipment[]> GetPredefinedEquipmentGroupContentAsync(int id) {
            return base.Channel.GetPredefinedEquipmentGroupContentAsync(id);
        }
        
        public void OverwritePredefinedEquipmentGroupEquipments(int equipmentGroupId, int[] equipmentIds) {
            base.Channel.OverwritePredefinedEquipmentGroupEquipments(equipmentGroupId, equipmentIds);
        }
        
        public System.Threading.Tasks.Task OverwritePredefinedEquipmentGroupEquipmentsAsync(int equipmentGroupId, int[] equipmentIds) {
            return base.Channel.OverwritePredefinedEquipmentGroupEquipmentsAsync(equipmentGroupId, equipmentIds);
        }
        
        public int CreateHierarchy(Luna_interpreter.ManagerService.Hierarchy hierarchy) {
            return base.Channel.CreateHierarchy(hierarchy);
        }
        
        public System.Threading.Tasks.Task<int> CreateHierarchyAsync(Luna_interpreter.ManagerService.Hierarchy hierarchy) {
            return base.Channel.CreateHierarchyAsync(hierarchy);
        }
        
        public Luna_interpreter.ManagerService.Hierarchy GetHierarchy(int id) {
            return base.Channel.GetHierarchy(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Hierarchy> GetHierarchyAsync(int id) {
            return base.Channel.GetHierarchyAsync(id);
        }
        
        public void UpdateHierarchy(Luna_interpreter.ManagerService.Hierarchy hierarchy) {
            base.Channel.UpdateHierarchy(hierarchy);
        }
        
        public System.Threading.Tasks.Task UpdateHierarchyAsync(Luna_interpreter.ManagerService.Hierarchy hierarchy) {
            return base.Channel.UpdateHierarchyAsync(hierarchy);
        }
        
        public void DeleteHierarchy(int id) {
            base.Channel.DeleteHierarchy(id);
        }
        
        public System.Threading.Tasks.Task DeleteHierarchyAsync(int id) {
            return base.Channel.DeleteHierarchyAsync(id);
        }
        
        public Luna_interpreter.ManagerService.Hierarchy[] SearchHierarchy(string searchTerm) {
            return base.Channel.SearchHierarchy(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Hierarchy[]> SearchHierarchyAsync(string searchTerm) {
            return base.Channel.SearchHierarchyAsync(searchTerm);
        }
        
        public Luna_interpreter.ManagerService.Hierarchy[] ListHierarchies() {
            return base.Channel.ListHierarchies();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Hierarchy[]> ListHierarchiesAsync() {
            return base.Channel.ListHierarchiesAsync();
        }
        
        public void AddHierarchyToWorkforce(Luna_interpreter.ManagerService.Hierarchy hierarchy, Luna_interpreter.ManagerService.Workforce workforce) {
            base.Channel.AddHierarchyToWorkforce(hierarchy, workforce);
        }
        
        public System.Threading.Tasks.Task AddHierarchyToWorkforceAsync(Luna_interpreter.ManagerService.Hierarchy hierarchy, Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.AddHierarchyToWorkforceAsync(hierarchy, workforce);
        }
        
        public Luna_interpreter.ManagerService.Hierarchy[] GetHierarchiesFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.GetHierarchiesFromWorkforce(workforce);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Hierarchy[]> GetHierarchiesFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.GetHierarchiesFromWorkforceAsync(workforce);
        }
        
        public void RemoveWorkforceHierarchies(int id) {
            base.Channel.RemoveWorkforceHierarchies(id);
        }
        
        public System.Threading.Tasks.Task RemoveWorkforceHierarchiesAsync(int id) {
            return base.Channel.RemoveWorkforceHierarchiesAsync(id);
        }
        
        public Luna_interpreter.ManagerService.Workforce[] GetWorkforcesFromHierarchy(Luna_interpreter.ManagerService.Hierarchy hierarchy) {
            return base.Channel.GetWorkforcesFromHierarchy(hierarchy);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Workforce[]> GetWorkforcesFromHierarchyAsync(Luna_interpreter.ManagerService.Hierarchy hierarchy) {
            return base.Channel.GetWorkforcesFromHierarchyAsync(hierarchy);
        }
        
        public int CreateHierarchyTree(Luna_interpreter.ManagerService.HierarchyTree hierarchyTree) {
            return base.Channel.CreateHierarchyTree(hierarchyTree);
        }
        
        public System.Threading.Tasks.Task<int> CreateHierarchyTreeAsync(Luna_interpreter.ManagerService.HierarchyTree hierarchyTree) {
            return base.Channel.CreateHierarchyTreeAsync(hierarchyTree);
        }
        
        public Luna_interpreter.ManagerService.HierarchyTree GetHierarchyTree(int id) {
            return base.Channel.GetHierarchyTree(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.HierarchyTree> GetHierarchyTreeAsync(int id) {
            return base.Channel.GetHierarchyTreeAsync(id);
        }
        
        public void UpdateHierarchyTree(Luna_interpreter.ManagerService.HierarchyTree hierarchyTree) {
            base.Channel.UpdateHierarchyTree(hierarchyTree);
        }
        
        public System.Threading.Tasks.Task UpdateHierarchyTreeAsync(Luna_interpreter.ManagerService.HierarchyTree hierarchyTree) {
            return base.Channel.UpdateHierarchyTreeAsync(hierarchyTree);
        }
        
        public void DeleteHierarchyTree(int id) {
            base.Channel.DeleteHierarchyTree(id);
        }
        
        public System.Threading.Tasks.Task DeleteHierarchyTreeAsync(int id) {
            return base.Channel.DeleteHierarchyTreeAsync(id);
        }
        
        public Luna_interpreter.ManagerService.HierarchyTree[] SearchHierarchyTrees(string searchTerm) {
            return base.Channel.SearchHierarchyTrees(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.HierarchyTree[]> SearchHierarchyTreesAsync(string searchTerm) {
            return base.Channel.SearchHierarchyTreesAsync(searchTerm);
        }
        
        public Luna_interpreter.ManagerService.HierarchyTree[] ListHierarchyTrees() {
            return base.Channel.ListHierarchyTrees();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.HierarchyTree[]> ListHierarchyTreesAsync() {
            return base.Channel.ListHierarchyTreesAsync();
        }
        
        public int CreateMaterial(Luna_interpreter.ManagerService.Material material) {
            return base.Channel.CreateMaterial(material);
        }
        
        public System.Threading.Tasks.Task<int> CreateMaterialAsync(Luna_interpreter.ManagerService.Material material) {
            return base.Channel.CreateMaterialAsync(material);
        }
        
        public Luna_interpreter.ManagerService.Material GetMaterial(int id) {
            return base.Channel.GetMaterial(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Material> GetMaterialAsync(int id) {
            return base.Channel.GetMaterialAsync(id);
        }
        
        public void UpdateMaterial(Luna_interpreter.ManagerService.Material Material) {
            base.Channel.UpdateMaterial(Material);
        }
        
        public System.Threading.Tasks.Task UpdateMaterialAsync(Luna_interpreter.ManagerService.Material Material) {
            return base.Channel.UpdateMaterialAsync(Material);
        }
        
        public void DeleteMaterial(int id) {
            base.Channel.DeleteMaterial(id);
        }
        
        public System.Threading.Tasks.Task DeleteMaterialAsync(int id) {
            return base.Channel.DeleteMaterialAsync(id);
        }
        
        public Luna_interpreter.ManagerService.Material[] ListMaterials() {
            return base.Channel.ListMaterials();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Material[]> ListMaterialsAsync() {
            return base.Channel.ListMaterialsAsync();
        }
        
        public Luna_interpreter.ManagerService.Material[] SearchMaterials(string searchTerm) {
            return base.Channel.SearchMaterials(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Material[]> SearchMaterialsAsync(string searchTerm) {
            return base.Channel.SearchMaterialsAsync(searchTerm);
        }
        
        public void AddPropertiesToMaterial(Luna_interpreter.ManagerService.Material material, Luna_interpreter.ManagerService.PropertyValue propertyvalue) {
            base.Channel.AddPropertiesToMaterial(material, propertyvalue);
        }
        
        public System.Threading.Tasks.Task AddPropertiesToMaterialAsync(Luna_interpreter.ManagerService.Material material, Luna_interpreter.ManagerService.PropertyValue propertyvalue) {
            return base.Channel.AddPropertiesToMaterialAsync(material, propertyvalue);
        }
        
        public Luna_interpreter.ManagerService.PropertyValue[] GetPropertyValueFromMaterial(Luna_interpreter.ManagerService.Material material) {
            return base.Channel.GetPropertyValueFromMaterial(material);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyValue[]> GetPropertyValueFromMaterialAsync(Luna_interpreter.ManagerService.Material material) {
            return base.Channel.GetPropertyValueFromMaterialAsync(material);
        }
        
        public void RemovePropertyFromMaterial(Luna_interpreter.ManagerService.Material material, Luna_interpreter.ManagerService.PropertyValue propertyvalue) {
            base.Channel.RemovePropertyFromMaterial(material, propertyvalue);
        }
        
        public System.Threading.Tasks.Task RemovePropertyFromMaterialAsync(Luna_interpreter.ManagerService.Material material, Luna_interpreter.ManagerService.PropertyValue propertyvalue) {
            return base.Channel.RemovePropertyFromMaterialAsync(material, propertyvalue);
        }
        
        public int CreateMaterialCategory(Luna_interpreter.ManagerService.MaterialCategory materialCategory) {
            return base.Channel.CreateMaterialCategory(materialCategory);
        }
        
        public System.Threading.Tasks.Task<int> CreateMaterialCategoryAsync(Luna_interpreter.ManagerService.MaterialCategory materialCategory) {
            return base.Channel.CreateMaterialCategoryAsync(materialCategory);
        }
        
        public Luna_interpreter.ManagerService.MaterialCategory GetMaterialCategory(int id) {
            return base.Channel.GetMaterialCategory(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.MaterialCategory> GetMaterialCategoryAsync(int id) {
            return base.Channel.GetMaterialCategoryAsync(id);
        }
        
        public void UpdateMaterialCategory(Luna_interpreter.ManagerService.MaterialCategory MaterialCategory) {
            base.Channel.UpdateMaterialCategory(MaterialCategory);
        }
        
        public System.Threading.Tasks.Task UpdateMaterialCategoryAsync(Luna_interpreter.ManagerService.MaterialCategory MaterialCategory) {
            return base.Channel.UpdateMaterialCategoryAsync(MaterialCategory);
        }
        
        public void DeleteMaterialCategory(int id) {
            base.Channel.DeleteMaterialCategory(id);
        }
        
        public System.Threading.Tasks.Task DeleteMaterialCategoryAsync(int id) {
            return base.Channel.DeleteMaterialCategoryAsync(id);
        }
        
        public Luna_interpreter.ManagerService.MaterialCategory[] ListMaterialCategories() {
            return base.Channel.ListMaterialCategories();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.MaterialCategory[]> ListMaterialCategoriesAsync() {
            return base.Channel.ListMaterialCategoriesAsync();
        }
        
        public Luna_interpreter.ManagerService.MaterialCategory[] SearchMaterialCategories(string searchTerm) {
            return base.Channel.SearchMaterialCategories(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.MaterialCategory[]> SearchMaterialCategoriesAsync(string searchTerm) {
            return base.Channel.SearchMaterialCategoriesAsync(searchTerm);
        }
        
        public void AddPossiblePropetyToMaterialCategory(Luna_interpreter.ManagerService.MaterialCategory materialCategory, Luna_interpreter.ManagerService.PropertyType popertyType) {
            base.Channel.AddPossiblePropetyToMaterialCategory(materialCategory, popertyType);
        }
        
        public System.Threading.Tasks.Task AddPossiblePropetyToMaterialCategoryAsync(Luna_interpreter.ManagerService.MaterialCategory materialCategory, Luna_interpreter.ManagerService.PropertyType popertyType) {
            return base.Channel.AddPossiblePropetyToMaterialCategoryAsync(materialCategory, popertyType);
        }
        
        public Luna_interpreter.ManagerService.PropertyType[] GetPossiblePropetyFromMaterialCategory(Luna_interpreter.ManagerService.MaterialCategory materialCategory) {
            return base.Channel.GetPossiblePropetyFromMaterialCategory(materialCategory);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyType[]> GetPossiblePropetyFromMaterialCategoryAsync(Luna_interpreter.ManagerService.MaterialCategory materialCategory) {
            return base.Channel.GetPossiblePropetyFromMaterialCategoryAsync(materialCategory);
        }
        
        public void RemovePossiblePropetyFromMaterialCategory(Luna_interpreter.ManagerService.MaterialCategory materialCategory, Luna_interpreter.ManagerService.PropertyType propertyType) {
            base.Channel.RemovePossiblePropetyFromMaterialCategory(materialCategory, propertyType);
        }
        
        public System.Threading.Tasks.Task RemovePossiblePropetyFromMaterialCategoryAsync(Luna_interpreter.ManagerService.MaterialCategory materialCategory, Luna_interpreter.ManagerService.PropertyType propertyType) {
            return base.Channel.RemovePossiblePropetyFromMaterialCategoryAsync(materialCategory, propertyType);
        }
        
        public int CreatePermission(Luna_interpreter.ManagerService.Permission permission) {
            return base.Channel.CreatePermission(permission);
        }
        
        public System.Threading.Tasks.Task<int> CreatePermissionAsync(Luna_interpreter.ManagerService.Permission permission) {
            return base.Channel.CreatePermissionAsync(permission);
        }
        
        public Luna_interpreter.ManagerService.Permission GetPermission(int id) {
            return base.Channel.GetPermission(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Permission> GetPermissionAsync(int id) {
            return base.Channel.GetPermissionAsync(id);
        }
        
        public void UpdatePermission(Luna_interpreter.ManagerService.Permission permission) {
            base.Channel.UpdatePermission(permission);
        }
        
        public System.Threading.Tasks.Task UpdatePermissionAsync(Luna_interpreter.ManagerService.Permission permission) {
            return base.Channel.UpdatePermissionAsync(permission);
        }
        
        public void DeletePermission(int id) {
            base.Channel.DeletePermission(id);
        }
        
        public System.Threading.Tasks.Task DeletePermissionAsync(int id) {
            return base.Channel.DeletePermissionAsync(id);
        }
        
        public Luna_interpreter.ManagerService.Permission[] ListPermissions() {
            return base.Channel.ListPermissions();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Permission[]> ListPermissionsAsync() {
            return base.Channel.ListPermissionsAsync();
        }
        
        public Luna_interpreter.ManagerService.Permission[] SearchPermissions(string searchTerm) {
            return base.Channel.SearchPermissions(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Permission[]> SearchPermissionsAsync(string searchTerm) {
            return base.Channel.SearchPermissionsAsync(searchTerm);
        }
        
        public int CreatePrediction(Luna_interpreter.ManagerService.Prediction prediction) {
            return base.Channel.CreatePrediction(prediction);
        }
        
        public System.Threading.Tasks.Task<int> CreatePredictionAsync(Luna_interpreter.ManagerService.Prediction prediction) {
            return base.Channel.CreatePredictionAsync(prediction);
        }
        
        public void CreatePredictions(Luna_interpreter.ManagerService.Prediction[] predictions) {
            base.Channel.CreatePredictions(predictions);
        }
        
        public System.Threading.Tasks.Task CreatePredictionsAsync(Luna_interpreter.ManagerService.Prediction[] predictions) {
            return base.Channel.CreatePredictionsAsync(predictions);
        }
        
        public Luna_interpreter.ManagerService.Prediction[] GetPredictionsFromUserTask(Luna_interpreter.ManagerService.UserTask usertask) {
            return base.Channel.GetPredictionsFromUserTask(usertask);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Prediction[]> GetPredictionsFromUserTaskAsync(Luna_interpreter.ManagerService.UserTask usertask) {
            return base.Channel.GetPredictionsFromUserTaskAsync(usertask);
        }
        
        public Luna_interpreter.ManagerService.Prediction[] GetPredictionsWorkForce(Luna_interpreter.ManagerService.Workforce wf) {
            return base.Channel.GetPredictionsWorkForce(wf);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Prediction[]> GetPredictionsWorkForceAsync(Luna_interpreter.ManagerService.Workforce wf) {
            return base.Channel.GetPredictionsWorkForceAsync(wf);
        }
        
        public void DeletePredictions(Luna_interpreter.ManagerService.UserTask usertask) {
            base.Channel.DeletePredictions(usertask);
        }
        
        public System.Threading.Tasks.Task DeletePredictionsAsync(Luna_interpreter.ManagerService.UserTask usertask) {
            return base.Channel.DeletePredictionsAsync(usertask);
        }
        
        public Luna_interpreter.ManagerService.Process[] ListProcesses() {
            return base.Channel.ListProcesses();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Process[]> ListProcessesAsync() {
            return base.Channel.ListProcessesAsync();
        }
        
        public Luna_interpreter.ManagerService.Process GetProcess(int processId) {
            return base.Channel.GetProcess(processId);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Process> GetProcessAsync(int processId) {
            return base.Channel.GetProcessAsync(processId);
        }
        
        public Luna_interpreter.ManagerService.UserTask[] ListUserTasks(int processid) {
            return base.Channel.ListUserTasks(processid);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.UserTask[]> ListUserTasksAsync(int processid) {
            return base.Channel.ListUserTasksAsync(processid);
        }
        
        public int Createusertask(Luna_interpreter.ManagerService.UserTask prediction) {
            return base.Channel.Createusertask(prediction);
        }
        
        public System.Threading.Tasks.Task<int> CreateusertaskAsync(Luna_interpreter.ManagerService.UserTask prediction) {
            return base.Channel.CreateusertaskAsync(prediction);
        }
        
        public Luna_interpreter.ManagerService.UserTask GetUsertask(int id) {
            return base.Channel.GetUsertask(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.UserTask> GetUsertaskAsync(int id) {
            return base.Channel.GetUsertaskAsync(id);
        }
        
        public int CreateAbsence(Luna_interpreter.ManagerService.Absence absence) {
            return base.Channel.CreateAbsence(absence);
        }
        
        public System.Threading.Tasks.Task<int> CreateAbsenceAsync(Luna_interpreter.ManagerService.Absence absence) {
            return base.Channel.CreateAbsenceAsync(absence);
        }
        
        public Luna_interpreter.ManagerService.Absence GetAbsence(int id) {
            return base.Channel.GetAbsence(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Absence> GetAbsenceAsync(int id) {
            return base.Channel.GetAbsenceAsync(id);
        }
        
        public void DeleteAbsence(int id) {
            base.Channel.DeleteAbsence(id);
        }
        
        public System.Threading.Tasks.Task DeleteAbsenceAsync(int id) {
            return base.Channel.DeleteAbsenceAsync(id);
        }
        
        public System.TimeSpan GetAbsenceDuration(int id) {
            return base.Channel.GetAbsenceDuration(id);
        }
        
        public System.Threading.Tasks.Task<System.TimeSpan> GetAbsenceDurationAsync(int id) {
            return base.Channel.GetAbsenceDurationAsync(id);
        }
        
        public System.TimeSpan CountWorkTimeAbsence(Luna_interpreter.ManagerService.WorkTime worktime) {
            return base.Channel.CountWorkTimeAbsence(worktime);
        }
        
        public System.Threading.Tasks.Task<System.TimeSpan> CountWorkTimeAbsenceAsync(Luna_interpreter.ManagerService.WorkTime worktime) {
            return base.Channel.CountWorkTimeAbsenceAsync(worktime);
        }
        
        public Luna_interpreter.ManagerService.DateInterval[] GetIntersectAbsences(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetIntersectAbsences(workforces);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetIntersectAbsencesAsync(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetIntersectAbsencesAsync(workforces);
        }
        
        public Luna_interpreter.ManagerService.DateInterval[] GetUnionAbsences(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetUnionAbsences(workforces);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetUnionAbsencesAsync(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetUnionAbsencesAsync(workforces);
        }
        
        public Luna_interpreter.ManagerService.DateResult[] GetNewUnionAbsences(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetNewUnionAbsences(workforces);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateResult[]> GetNewUnionAbsencesAsync(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetNewUnionAbsencesAsync(workforces);
        }
        
        public Luna_interpreter.ManagerService.DateInterval[] GetComplementerAbsences(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetComplementerAbsences(workforces);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.DateInterval[]> GetComplementerAbsencesAsync(Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.GetComplementerAbsencesAsync(workforces);
        }
        
        public void AddAbsenceToWorkforces(Luna_interpreter.ManagerService.Absence absence, Luna_interpreter.ManagerService.Workforce[] workforces) {
            base.Channel.AddAbsenceToWorkforces(absence, workforces);
        }
        
        public System.Threading.Tasks.Task AddAbsenceToWorkforcesAsync(Luna_interpreter.ManagerService.Absence absence, Luna_interpreter.ManagerService.Workforce[] workforces) {
            return base.Channel.AddAbsenceToWorkforcesAsync(absence, workforces);
        }
        
        public Luna_interpreter.ManagerService.Absence[] GetAbsencesFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.GetAbsencesFromWorkforce(workforce);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Absence[]> GetAbsencesFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.GetAbsencesFromWorkforceAsync(workforce);
        }
        
        public Luna_interpreter.ManagerService.Absence[] GetJustifiedAbsencesFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.GetJustifiedAbsencesFromWorkforce(workforce);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Absence[]> GetJustifiedAbsencesFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.GetJustifiedAbsencesFromWorkforceAsync(workforce);
        }
        
        public Luna_interpreter.ManagerService.Absence[] GetUnJustifiedAbsencesFromWorkforce(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.GetUnJustifiedAbsencesFromWorkforce(workforce);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Absence[]> GetUnJustifiedAbsencesFromWorkforceAsync(Luna_interpreter.ManagerService.Workforce workforce) {
            return base.Channel.GetUnJustifiedAbsencesFromWorkforceAsync(workforce);
        }
        
        public Luna_interpreter.ManagerService.Absence[] GetAbsencesFromWorkforceInterval(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to) {
            return base.Channel.GetAbsencesFromWorkforceInterval(workforce, from, to);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Absence[]> GetAbsencesFromWorkforceIntervalAsync(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to) {
            return base.Channel.GetAbsencesFromWorkforceIntervalAsync(workforce, from, to);
        }
        
        public Luna_interpreter.ManagerService.Absence[] GetJustifiedAbsencesFromWorkforceInterval(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to) {
            return base.Channel.GetJustifiedAbsencesFromWorkforceInterval(workforce, from, to);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Absence[]> GetJustifiedAbsencesFromWorkforceIntervalAsync(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to) {
            return base.Channel.GetJustifiedAbsencesFromWorkforceIntervalAsync(workforce, from, to);
        }
        
        public Luna_interpreter.ManagerService.Absence[] GetUnJustifiedAbsencesFromWorkforceInterval(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to) {
            return base.Channel.GetUnJustifiedAbsencesFromWorkforceInterval(workforce, from, to);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Absence[]> GetUnJustifiedAbsencesFromWorkforceIntervalAsync(Luna_interpreter.ManagerService.Workforce workforce, System.DateTime from, System.DateTime to) {
            return base.Channel.GetUnJustifiedAbsencesFromWorkforceIntervalAsync(workforce, from, to);
        }
        
        public int CreateAbsenceType(Luna_interpreter.ManagerService.AbsenceType absencetype) {
            return base.Channel.CreateAbsenceType(absencetype);
        }
        
        public System.Threading.Tasks.Task<int> CreateAbsenceTypeAsync(Luna_interpreter.ManagerService.AbsenceType absencetype) {
            return base.Channel.CreateAbsenceTypeAsync(absencetype);
        }
        
        public Luna_interpreter.ManagerService.AbsenceType GetAbsenceType(int id) {
            return base.Channel.GetAbsenceType(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.AbsenceType> GetAbsenceTypeAsync(int id) {
            return base.Channel.GetAbsenceTypeAsync(id);
        }
        
        public void DeleteAbsenceType(int id) {
            base.Channel.DeleteAbsenceType(id);
        }
        
        public System.Threading.Tasks.Task DeleteAbsenceTypeAsync(int id) {
            return base.Channel.DeleteAbsenceTypeAsync(id);
        }
        
        public Luna_interpreter.ManagerService.AbsenceType[] ListAbsenceTypes() {
            return base.Channel.ListAbsenceTypes();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.AbsenceType[]> ListAbsenceTypesAsync() {
            return base.Channel.ListAbsenceTypesAsync();
        }
        
        public Luna_interpreter.ManagerService.AbsenceType[] SearchAbsenceTypes(string searchTerm) {
            return base.Channel.SearchAbsenceTypes(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.AbsenceType[]> SearchAbsenceTypesAsync(string searchTerm) {
            return base.Channel.SearchAbsenceTypesAsync(searchTerm);
        }
        
        public void UpdateAbsenceType(Luna_interpreter.ManagerService.AbsenceType absencetype) {
            base.Channel.UpdateAbsenceType(absencetype);
        }
        
        public System.Threading.Tasks.Task UpdateAbsenceTypeAsync(Luna_interpreter.ManagerService.AbsenceType absencetype) {
            return base.Channel.UpdateAbsenceTypeAsync(absencetype);
        }
        
        public int CreateCompanyContact(Luna_interpreter.ManagerService.CompanyContact companyContact) {
            return base.Channel.CreateCompanyContact(companyContact);
        }
        
        public System.Threading.Tasks.Task<int> CreateCompanyContactAsync(Luna_interpreter.ManagerService.CompanyContact companyContact) {
            return base.Channel.CreateCompanyContactAsync(companyContact);
        }
        
        public Luna_interpreter.ManagerService.CompanyContact GetCompanyContact(int id) {
            return base.Channel.GetCompanyContact(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.CompanyContact> GetCompanyContactAsync(int id) {
            return base.Channel.GetCompanyContactAsync(id);
        }
        
        public void UpdateCompanyContact(Luna_interpreter.ManagerService.CompanyContact companyContact) {
            base.Channel.UpdateCompanyContact(companyContact);
        }
        
        public System.Threading.Tasks.Task UpdateCompanyContactAsync(Luna_interpreter.ManagerService.CompanyContact companyContact) {
            return base.Channel.UpdateCompanyContactAsync(companyContact);
        }
        
        public void DeleteCompanyContact(int id) {
            base.Channel.DeleteCompanyContact(id);
        }
        
        public System.Threading.Tasks.Task DeleteCompanyContactAsync(int id) {
            return base.Channel.DeleteCompanyContactAsync(id);
        }
        
        public Luna_interpreter.ManagerService.CompanyContact[] ListCompanyContacts() {
            return base.Channel.ListCompanyContacts();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.CompanyContact[]> ListCompanyContactsAsync() {
            return base.Channel.ListCompanyContactsAsync();
        }
        
        public Luna_interpreter.ManagerService.CompanyContact[] SearchCompanyContacts(string searchTerm) {
            return base.Channel.SearchCompanyContacts(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.CompanyContact[]> SearchCompanyContactsAsync(string searchTerm) {
            return base.Channel.SearchCompanyContactsAsync(searchTerm);
        }
        
        public int CreateComponent(Luna_interpreter.ManagerService.Component component) {
            return base.Channel.CreateComponent(component);
        }
        
        public System.Threading.Tasks.Task<int> CreateComponentAsync(Luna_interpreter.ManagerService.Component component) {
            return base.Channel.CreateComponentAsync(component);
        }
        
        public Luna_interpreter.ManagerService.Component GetComponent(int id) {
            return base.Channel.GetComponent(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Component> GetComponentAsync(int id) {
            return base.Channel.GetComponentAsync(id);
        }
        
        public void UpdateComponent(Luna_interpreter.ManagerService.Component Component) {
            base.Channel.UpdateComponent(Component);
        }
        
        public System.Threading.Tasks.Task UpdateComponentAsync(Luna_interpreter.ManagerService.Component Component) {
            return base.Channel.UpdateComponentAsync(Component);
        }
        
        public void DeleteComponent(int id) {
            base.Channel.DeleteComponent(id);
        }
        
        public System.Threading.Tasks.Task DeleteComponentAsync(int id) {
            return base.Channel.DeleteComponentAsync(id);
        }
        
        public Luna_interpreter.ManagerService.Component[] ListComponents() {
            return base.Channel.ListComponents();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Component[]> ListComponentsAsync() {
            return base.Channel.ListComponentsAsync();
        }
        
        public Luna_interpreter.ManagerService.Component[] SearchComponents(string searchTerm) {
            return base.Channel.SearchComponents(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Component[]> SearchComponentsAsync(string searchTerm) {
            return base.Channel.SearchComponentsAsync(searchTerm);
        }
        
        public void AddPropertiesToComponent(Luna_interpreter.ManagerService.Component component, Luna_interpreter.ManagerService.PropertyValue propertyvalue) {
            base.Channel.AddPropertiesToComponent(component, propertyvalue);
        }
        
        public System.Threading.Tasks.Task AddPropertiesToComponentAsync(Luna_interpreter.ManagerService.Component component, Luna_interpreter.ManagerService.PropertyValue propertyvalue) {
            return base.Channel.AddPropertiesToComponentAsync(component, propertyvalue);
        }
        
        public Luna_interpreter.ManagerService.PropertyValue[] GetPropertyValueFromComponent(Luna_interpreter.ManagerService.Component component) {
            return base.Channel.GetPropertyValueFromComponent(component);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyValue[]> GetPropertyValueFromComponentAsync(Luna_interpreter.ManagerService.Component component) {
            return base.Channel.GetPropertyValueFromComponentAsync(component);
        }
        
        public void RemovePropertyFromComponent(Luna_interpreter.ManagerService.Component component, Luna_interpreter.ManagerService.PropertyValue propertyvalue) {
            base.Channel.RemovePropertyFromComponent(component, propertyvalue);
        }
        
        public System.Threading.Tasks.Task RemovePropertyFromComponentAsync(Luna_interpreter.ManagerService.Component component, Luna_interpreter.ManagerService.PropertyValue propertyvalue) {
            return base.Channel.RemovePropertyFromComponentAsync(component, propertyvalue);
        }
        
        public int CreateComponentCategory(Luna_interpreter.ManagerService.ComponentCategory componentCategory) {
            return base.Channel.CreateComponentCategory(componentCategory);
        }
        
        public System.Threading.Tasks.Task<int> CreateComponentCategoryAsync(Luna_interpreter.ManagerService.ComponentCategory componentCategory) {
            return base.Channel.CreateComponentCategoryAsync(componentCategory);
        }
        
        public Luna_interpreter.ManagerService.ComponentCategory GetComponentCategory(int id) {
            return base.Channel.GetComponentCategory(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ComponentCategory> GetComponentCategoryAsync(int id) {
            return base.Channel.GetComponentCategoryAsync(id);
        }
        
        public void UpdateComponentCategory(Luna_interpreter.ManagerService.ComponentCategory ComponentCategory) {
            base.Channel.UpdateComponentCategory(ComponentCategory);
        }
        
        public System.Threading.Tasks.Task UpdateComponentCategoryAsync(Luna_interpreter.ManagerService.ComponentCategory ComponentCategory) {
            return base.Channel.UpdateComponentCategoryAsync(ComponentCategory);
        }
        
        public void DeleteComponentCategory(int id) {
            base.Channel.DeleteComponentCategory(id);
        }
        
        public System.Threading.Tasks.Task DeleteComponentCategoryAsync(int id) {
            return base.Channel.DeleteComponentCategoryAsync(id);
        }
        
        public Luna_interpreter.ManagerService.ComponentCategory[] ListComponentCategories() {
            return base.Channel.ListComponentCategories();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ComponentCategory[]> ListComponentCategoriesAsync() {
            return base.Channel.ListComponentCategoriesAsync();
        }
        
        public Luna_interpreter.ManagerService.ComponentCategory[] SearchComponentCategories(string searchTerm) {
            return base.Channel.SearchComponentCategories(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.ComponentCategory[]> SearchComponentCategoriesAsync(string searchTerm) {
            return base.Channel.SearchComponentCategoriesAsync(searchTerm);
        }
        
        public void AddPossiblePropetyToComponentCategory(Luna_interpreter.ManagerService.ComponentCategory componentCategory, Luna_interpreter.ManagerService.PropertyType popertyType) {
            base.Channel.AddPossiblePropetyToComponentCategory(componentCategory, popertyType);
        }
        
        public System.Threading.Tasks.Task AddPossiblePropetyToComponentCategoryAsync(Luna_interpreter.ManagerService.ComponentCategory componentCategory, Luna_interpreter.ManagerService.PropertyType popertyType) {
            return base.Channel.AddPossiblePropetyToComponentCategoryAsync(componentCategory, popertyType);
        }
        
        public Luna_interpreter.ManagerService.PropertyType[] GetPossiblePropetyFromComponentCategory(Luna_interpreter.ManagerService.ComponentCategory componentCategory) {
            return base.Channel.GetPossiblePropetyFromComponentCategory(componentCategory);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.PropertyType[]> GetPossiblePropetyFromComponentCategoryAsync(Luna_interpreter.ManagerService.ComponentCategory componentCategory) {
            return base.Channel.GetPossiblePropetyFromComponentCategoryAsync(componentCategory);
        }
        
        public void RemovePossiblePropetyFromComponentCategory(Luna_interpreter.ManagerService.ComponentCategory componentCategory, Luna_interpreter.ManagerService.PropertyType propertyType) {
            base.Channel.RemovePossiblePropetyFromComponentCategory(componentCategory, propertyType);
        }
        
        public System.Threading.Tasks.Task RemovePossiblePropetyFromComponentCategoryAsync(Luna_interpreter.ManagerService.ComponentCategory componentCategory, Luna_interpreter.ManagerService.PropertyType propertyType) {
            return base.Channel.RemovePossiblePropetyFromComponentCategoryAsync(componentCategory, propertyType);
        }
        
        public int CreateEquipment(Luna_interpreter.ManagerService.Equipment equipment) {
            return base.Channel.CreateEquipment(equipment);
        }
        
        public System.Threading.Tasks.Task<int> CreateEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment) {
            return base.Channel.CreateEquipmentAsync(equipment);
        }
        
        public Luna_interpreter.ManagerService.Equipment GetEquipment(int id) {
            return base.Channel.GetEquipment(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Equipment> GetEquipmentAsync(int id) {
            return base.Channel.GetEquipmentAsync(id);
        }
        
        public void UpdateEquipment(Luna_interpreter.ManagerService.Equipment equipment) {
            base.Channel.UpdateEquipment(equipment);
        }
        
        public System.Threading.Tasks.Task UpdateEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment) {
            return base.Channel.UpdateEquipmentAsync(equipment);
        }
        
        public void DeleteEquipment(int id) {
            base.Channel.DeleteEquipment(id);
        }
        
        public System.Threading.Tasks.Task DeleteEquipmentAsync(int id) {
            return base.Channel.DeleteEquipmentAsync(id);
        }
        
        public Luna_interpreter.ManagerService.Equipment[] ListEquipments() {
            return base.Channel.ListEquipments();
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Equipment[]> ListEquipmentsAsync() {
            return base.Channel.ListEquipmentsAsync();
        }
        
        public Luna_interpreter.ManagerService.Equipment[] SearchEquipment(string searchTerm) {
            return base.Channel.SearchEquipment(searchTerm);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Equipment[]> SearchEquipmentAsync(string searchTerm) {
            return base.Channel.SearchEquipmentAsync(searchTerm);
        }
        
        public void AddSkillToEquipment(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Skill skill) {
            base.Channel.AddSkillToEquipment(equipment, skill);
        }
        
        public System.Threading.Tasks.Task AddSkillToEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Skill skill) {
            return base.Channel.AddSkillToEquipmentAsync(equipment, skill);
        }
        
        public void RemoveSkillFromEquipment(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Skill skill) {
            base.Channel.RemoveSkillFromEquipment(equipment, skill);
        }
        
        public System.Threading.Tasks.Task RemoveSkillFromEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Skill skill) {
            return base.Channel.RemoveSkillFromEquipmentAsync(equipment, skill);
        }
        
        public Luna_interpreter.ManagerService.Skill[] GetSkillsOfEquipment(Luna_interpreter.ManagerService.Equipment equipment) {
            return base.Channel.GetSkillsOfEquipment(equipment);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Skill[]> GetSkillsOfEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment) {
            return base.Channel.GetSkillsOfEquipmentAsync(equipment);
        }
        
        public void OverwriteEquipmentSkills(int equipmentId, int[] skillIds) {
            base.Channel.OverwriteEquipmentSkills(equipmentId, skillIds);
        }
        
        public System.Threading.Tasks.Task OverwriteEquipmentSkillsAsync(int equipmentId, int[] skillIds) {
            return base.Channel.OverwriteEquipmentSkillsAsync(equipmentId, skillIds);
        }
        
        public void AddPermissionToEquipment(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Permission permission) {
            base.Channel.AddPermissionToEquipment(equipment, permission);
        }
        
        public System.Threading.Tasks.Task AddPermissionToEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Permission permission) {
            return base.Channel.AddPermissionToEquipmentAsync(equipment, permission);
        }
        
        public Luna_interpreter.ManagerService.Permission[] GetPermissionFromEquipment(Luna_interpreter.ManagerService.Equipment equipment) {
            return base.Channel.GetPermissionFromEquipment(equipment);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.Permission[]> GetPermissionFromEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment) {
            return base.Channel.GetPermissionFromEquipmentAsync(equipment);
        }
        
        public void DeletePermissionFromEquipment(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Permission permission) {
            base.Channel.DeletePermissionFromEquipment(equipment, permission);
        }
        
        public System.Threading.Tasks.Task DeletePermissionFromEquipmentAsync(Luna_interpreter.ManagerService.Equipment equipment, Luna_interpreter.ManagerService.Permission permission) {
            return base.Channel.DeletePermissionFromEquipmentAsync(equipment, permission);
        }
        
        public void OverwriteEquipmentPermissions(int equipmentId, int[] permissionIds) {
            base.Channel.OverwriteEquipmentPermissions(equipmentId, permissionIds);
        }
        
        public System.Threading.Tasks.Task OverwriteEquipmentPermissionsAsync(int equipmentId, int[] permissionIds) {
            return base.Channel.OverwriteEquipmentPermissionsAsync(equipmentId, permissionIds);
        }
        
        public int CreatePredefinedEquipmentGroup(Luna_interpreter.ManagerService.PredefinedEquipmentGroup equipmentGroup) {
            return base.Channel.CreatePredefinedEquipmentGroup(equipmentGroup);
        }
        
        public System.Threading.Tasks.Task<int> CreatePredefinedEquipmentGroupAsync(Luna_interpreter.ManagerService.PredefinedEquipmentGroup equipmentGroup) {
            return base.Channel.CreatePredefinedEquipmentGroupAsync(equipmentGroup);
        }
        
        public int CreateDynamicEquipmentGroup(Luna_interpreter.ManagerService.DynamicEquipmentGroup equipmentGroup) {
            return base.Channel.CreateDynamicEquipmentGroup(equipmentGroup);
        }
        
        public System.Threading.Tasks.Task<int> CreateDynamicEquipmentGroupAsync(Luna_interpreter.ManagerService.DynamicEquipmentGroup equipmentGroup) {
            return base.Channel.CreateDynamicEquipmentGroupAsync(equipmentGroup);
        }
        
        public Luna_interpreter.ManagerService.EquipmentGroup GetEquipmentGroup(int id) {
            return base.Channel.GetEquipmentGroup(id);
        }
        
        public System.Threading.Tasks.Task<Luna_interpreter.ManagerService.EquipmentGroup> GetEquipmentGroupAsync(int id) {
            return base.Channel.GetEquipmentGroupAsync(id);
        }
        
        public void UpdateEquipmentGroup(Luna_interpreter.ManagerService.EquipmentGroup equipmentGroup) {
            base.Channel.UpdateEquipmentGroup(equipmentGroup);
        }
        
        public System.Threading.Tasks.Task UpdateEquipmentGroupAsync(Luna_interpreter.ManagerService.EquipmentGroup equipmentGroup) {
            return base.Channel.UpdateEquipmentGroupAsync(equipmentGroup);
        }
    }
}
